<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Dockerbase, | Build and Release]]></title>
  <link href="http://lifuzu.com/blog/categories/dockerbase/atom.xml" rel="self"/>
  <link href="http://lifuzu.com/"/>
  <updated>2016-03-07T09:48:59-08:00</updated>
  <id>http://lifuzu.com/</id>
  <author>
    <name><![CDATA[Richard Lee]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Playing With Hadoop on Dockerbase]]></title>
    <link href="http://lifuzu.com/blog/2015/02/03/playing-with-hadoop-on-dockerbase/"/>
    <updated>2015-02-03T21:52:03-08:00</updated>
    <id>http://lifuzu.com/blog/2015/02/03/playing-with-hadoop-on-dockerbase</id>
    <content type="html"><![CDATA[<p><img src="https://www.ombud.com/asset/3607" alt="Apache Hadoop Logo" />
Apache Hadoop is a map reduce computing environment, which provide a reliable, scalable and distributed computing environment to handle big data. This article introduce how to setup a Apache Hadoop Dockerbase image to play with the standalone operation of Hadoop on Docker.</p>

<!--more-->


<p><strong>Steps</strong>:</p>

<p><em>1</em>. Install Docker:
Install the latest version of Docker on Ubuntu:
<code>bash
$ curl -sSL https://get.docker.com/ubuntu/ | sudo sh
$ docker --version
</code>
For Microsoft Windows or Mac OS, there is a tool named <code>boot2docker</code> [1] need to be installed to provide a terminal to run the following commands. You can also get more information about other platform you are on from reference [2].</p>

<p><em>2</em>. Download Dockerbase image for Hadoop:
<code>bash
$ sudo docker run -it --rm --name dockerbase-devbase-hadoop dockerbase/devbase-hadoop
</code>
It takes a little bit time (depends on network speed) to download docker image from public Docker hub registry [3].</p>

<p><em>3</em>. Enter Docker image automatically after the above step, try the command <code>hadoop</code> to display usage documentation for the hadoop script:
``` bash
devbase@145878b9c8c7:~$ hadoop
Usage: hadoop [&mdash;config confdir] COMMAND</p>

<pre><code>   where COMMAND is one of:
</code></pre>

<p>  fs                   run a generic filesystem user client
  version              print the version
  jar <jar>            run a jar file
  checknative [-a|-h]  check native hadoop and compression libraries availability
  distcp <srcurl> <desturl> copy file or directories recursively
  archive -archiveName NAME -p <parent path> <src>* <dest> create a hadoop archive
  classpath            prints the class path needed to get the</p>

<pre><code>                   Hadoop jar and the required libraries
</code></pre>

<p>  daemonlog            get/set the log level for each daemon
 or
  CLASSNAME            run the class named CLASSNAME
<code>
*4*. The following example copies configuration files under the `hadoop` folder which we installed in `/usr/local`, then run the `hadoop` command to find every match of the given regular expression.
</code> bash
devbase@145878b9c8c7:~$ mkdir input
devbase@145878b9c8c7:~$ cp /usr/local/hadoop/etc/hadoop/<em>.xml input/
devbase@145878b9c8c7:~$ hadoop jar /usr/local/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.6.0.jar grep input output &lsquo;dfs[a-z.]+&rsquo;
15/02/03 17:49:21 INFO Configuration.deprecation: session.id is deprecated. Instead, use dfs.metrics.session-id
15/02/03 17:49:21 INFO jvm.JvmMetrics: Initializing JVM Metrics with processName=JobTracker, sessionId=
15/02/03 17:49:22 WARN mapreduce.JobSubmitter: No job jar file set.  User classes may not be found. See Job or Job#setJar(String).
&hellip;
<code>
*5*. Display the matchs from the output folder:
</code> bash
devbase@145878b9c8c7:~$ cat output/</em>
1   dfsadmin
```</p>

<p><strong>References</strong>:</p>

<ol>
<li><a href="http://boot2docker.io/">http://boot2docker.io/</a></li>
<li><a href="https://docs.docker.com/installation/">https://docs.docker.com/installation/</a></li>
<li><a href="https://registry.hub.docker.com/u/dockerbase/devbase-hadoop/">https://registry.hub.docker.com/u/dockerbase/devbase-hadoop/</a></li>
<li><a href="http://hadoop.apache.org/">http://hadoop.apache.org/</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Familiar With HBase on Dockerbase]]></title>
    <link href="http://lifuzu.com/blog/2015/02/03/getting-familiar-with-hbase-on-dockerbase/"/>
    <updated>2015-02-03T21:34:36-08:00</updated>
    <id>http://lifuzu.com/blog/2015/02/03/getting-familiar-with-hbase-on-dockerbase</id>
    <content type="html"><![CDATA[<p><img src="http://doc.mapr.com/download/attachments/26982553/hbase_logo.png" alt="Apache HBase Logo" />
Apache HBase is a distributed, scalable, big data store. With Apache HBase, you can randomly access your big data, which support realtime read/write. You can get more information about Apache HBase from the reference list [3]. This article introduces how to setup a standalone HBase database with Dockerbase supported.</p>

<!--more-->


<p><strong>Steps</strong>:</p>

<p><em>1</em>. Install Docker:
Install the latest version of Docker on Ubuntu:
<code>bash
$ curl -sSL https://get.docker.com/ubuntu/ | sudo sh
$ docker --version
</code>
For Microsoft Windows or Mac OS, there is a tool named <code>boot2docker</code> [1] need to be installed to provide a terminal to run the following commands. You can also get more information about other platform you are on from reference [2].</p>

<p><em>2</em>. Clone the Dockerbase HBase image from the public Docker hub registry [4]:
<code>bash
$ sudo docker run -it --rm --name dockerbase-devbase-hbase dockerbase/devbase-hbase
</code></p>

<p><em>3</em>. After pulling the image, the Dockerbase image will run automatically into the docker container (docker container just like a lightweight virtual machine), then you can run the following commands to start Apache HBase, and then launch the shell to run the HBase commands:
``` bash
devbase@0be9d4455f59:~$ sudo -E bash -c &lsquo;/usr/local/hbase/bin/start-hbase.sh&rsquo;
devbase@0be9d4455f59:~$ hbase shell
hbase(main):001:0> list
TABLE</p>

<p>2015-02-02 20:03:28,604 WARN  [main] util.NativeCodeLoader: Unable to load native-hadoop library for your platform&hellip; using builtin-java classes where applicable
0 row(s) in 1.1440 seconds</p>

<p>=> []
hbase(main):002:0> create &lsquo;test&rsquo;, &lsquo;cf&rsquo;
0 row(s) in 0.2630 seconds</p>

<p>=> Hbase::Table &ndash; test
hbase(main):003:0> list &lsquo;test&rsquo;
TABLE
test
1 row(s) in 0.0030 seconds</p>

<p>=> [&ldquo;test&rdquo;]
hbase(main):004:0> put &lsquo;test&rsquo;, &lsquo;row1&rsquo;, &lsquo;cf:a&rsquo;, &lsquo;value1&rsquo;
0 row(s) in 0.0900 seconds</p>

<p>hbase(main):005:0> get &lsquo;test&rsquo;, &lsquo;row1&rsquo;
COLUMN                                               CELL
 cf:a                                                timestamp=1422907465167, value=value1
1 row(s) in 0.0110 seconds</p>

<p>hbase(main):006:0> disable &lsquo;test&rsquo;
0 row(s) in 1.2890 seconds</p>

<p>hbase(main):007:0> drop &lsquo;test&rsquo;
0 row(s) in 0.2010 seconds
hbase(main):008:0> quit
devbase@0be9d4455f59:~$ sudo -E bash -c &lsquo;/usr/local/hbase/bin/stop-hbase.sh&rsquo;
<code>``
From the above commands, we list the tables in database, then</code>create<code>a table named 'test'. We</code>put<code>some data into the table, then</code>get<code>it out with the</code>get<code>command. Before we</code>drop<code>the table, we have to</code>disable` it. The last step is to quit the Apache HBase shell.</p>

<p>You can find more Apache HBase shell commands from reference list [4] to practice in this Dockerbase image. Enjoy!</p>

<p><strong>References</strong>:</p>

<ol>
<li><a href="http://boot2docker.io/">http://boot2docker.io/</a></li>
<li><a href="https://docs.docker.com/installation/">https://docs.docker.com/installation/</a></li>
<li><a href="http://hbase.apache.org/">http://hbase.apache.org/</a></li>
<li><a href="https://registry.hub.docker.com/u/dockerbase/devbase-hbase/">https://registry.hub.docker.com/u/dockerbase/devbase-hbase/</a></li>
<li><a href="http://wiki.apache.org/hadoop/Hbase/Shell">http://wiki.apache.org/hadoop/Hbase/Shell</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
</feed>
