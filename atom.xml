<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Build and Release]]></title>
  <link href="http://lifuzu.com/atom.xml" rel="self"/>
  <link href="http://lifuzu.com/"/>
  <updated>2014-10-03T17:46:04-07:00</updated>
  <id>http://lifuzu.com/</id>
  <author>
    <name><![CDATA[Richard Lee]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Install Gollum]]></title>
    <link href="http://lifuzu.com/blog/2014/08/22/install-gollum/"/>
    <updated>2014-08-22T11:57:46-07:00</updated>
    <id>http://lifuzu.com/blog/2014/08/22/install-gollum</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-DUpioC7fb_I/U_eSdHggv1I/AAAAAAAACYU/4VJAsLqqCSE/s600/Screen+Shot+2014-08-22+at+11.56.27+AM.png" title="Screen Shot 2014-08-22 at 11.56.27 AM.png" alt="gollum snapshot" /></p>

<p>Gollum is a simple wiki system built on top of Git.</p>

<p>Gollum wikis are simply Git repositories that adhere to a specific format. Gollum pages may be written in a variety of formats and can be edited in a number of ways depending on your needs. You can edit your wiki locally:</p>

<ul>
<li>With your favorite text editor or IDE (changes will be visible after committing).</li>
<li>With the built-in web interface.</li>
<li>With the Gollum Ruby API.</li>
</ul>


<p>Here are steps to install gollum.</p>

<!-- more -->


<h3>Install some dependencies:</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install libicu-dev</span></code></pre></td></tr></table></div></figure>


<h3>Install Gollum with RubyGems:</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install gollum</span></code></pre></td></tr></table></div></figure>


<h3>Install some text format</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install redcarpet
</span><span class='line'>gem install github-markdown</span></code></pre></td></tr></table></div></figure>


<h3>Create a local git repo on host</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir repos/gollum
</span><span class='line'>cd repos/gollum
</span><span class='line'>git init .</span></code></pre></td></tr></table></div></figure>


<h3>Run the gollum</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gollum</span></code></pre></td></tr></table></div></figure>


<p>This will start up a web server running the Gollum frontend and you can view and edit your wiki at <a href="http://">http://</a><code>&lt;host&gt;</code>:4567.</p>

<h3>BUILDING THE GEM FROM MASTER</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem uninstall -aIx gollum
</span><span class='line'>$ git clone https://github.com/gollum/gollum.git
</span><span class='line'>$ cd gollum
</span><span class='line'>gollum$ rake build
</span><span class='line'>gollum$ gem install --no-ri --no-rdoc pkg/gollum*.gem</span></code></pre></td></tr></table></div></figure>


<h3>RUN THE TESTS</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bundle install
</span><span class='line'>$ bundle exec rake test</span></code></pre></td></tr></table></div></figure>


<h3>RUNNING WITH UPSTART</h3>

<p>Create a wrapper to include environment information:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rvm alias create mygollum ruby-2.1.2@mygollum
</span><span class='line'>$ rvm alias list
</span><span class='line'># $HOME/.rvm/wrappers/mygollum/gollum</span></code></pre></td></tr></table></div></figure>


<p>Create a config file under /etc/init, name it <code>gollum.cong</code>, as:
<a href="https://gist.github.com/lifuzu/31af0dc859bf9bfb6da5">https://gist.github.com/lifuzu/31af0dc859bf9bfb6da5</a>
Start/Stop the service:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sudo start gollum
</span><span class='line'>$ sudo stop gollum</span></code></pre></td></tr></table></div></figure>


<p>You can get the log file at /var/log/upstart/gollum.log to analyze:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vi /var/log/upstart/gollum.log </span></code></pre></td></tr></table></div></figure>


<h3>RUNNING WITH NGINX</h3>

<p>Create a subdomain like &lsquo;gollum.weimed.com&rsquo; point to your server IP;
Create a nginx configuration file, as /etc/nginx/sites-available/stackedit.weimed.com:
<a href="https://gist.github.com/lifuzu/2f2ce9095ba4a6969b2c">https://gist.github.com/lifuzu/2f2ce9095ba4a6969b2c</a>
Create a symbolic link to enable it</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo ln -s /etc/nginx/sites-available/gollum.weimed.com /etc/nginx/sites-enabled/gollum.weimed.com</span></code></pre></td></tr></table></div></figure>


<p>Check the configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo nginx -t
</span><span class='line'>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
</span><span class='line'>nginx: configuration file /etc/nginx/nginx.conf test is successful</span></code></pre></td></tr></table></div></figure>


<p>Reload the configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo service nginx reload</span></code></pre></td></tr></table></div></figure>


<p>You should see: <a href="http://gollum.weimed.com/">http://gollum.weimed.com/</a></p>

<h3>AUTH</h3>

<p>TODO, please refer to [5], [6]</p>

<h3>References:</h3>

<ol>
<li><a href="https://github.com/gollum/gollum">https://github.com/gollum/gollum</a></li>
<li><a href="https://gist.github.com/leon/2643936">https://gist.github.com/leon/2643936</a></li>
<li><a href="http://rvm.io/integration/init-d">http://rvm.io/integration/init-d</a></li>
<li><a href="https://github.com/rvm/rvm-site-setup/blob/master/conf/smfbot.conf">https://github.com/rvm/rvm-site-setup/blob/master/conf/smfbot.conf</a></li>
<li><a href="http://www.mfoot.com/blog/2013/05/19/setting-up-a-personal-wiki-with-aws-and-gollum/">http://www.mfoot.com/blog/2013/05/19/setting-up-a-personal-wiki-with-aws-and-gollum/</a></li>
<li><a href="https://github.com/roman/rack-auth">https://github.com/roman/rack-auth</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Nodejs Using NVM]]></title>
    <link href="http://lifuzu.com/blog/2014/08/20/install-nodejs-using-nvm/"/>
    <updated>2014-08-20T11:44:12-07:00</updated>
    <id>http://lifuzu.com/blog/2014/08/20/install-nodejs-using-nvm</id>
    <content type="html"><![CDATA[<p><img src="https://lh3.googleusercontent.com/-1_vzgrh5dnI/U_Tq8koEceI/AAAAAAAACYA/S8xhWfrGSoE/s600/Screen+Shot+2014-08-20+at+11.36.59+AM.png" title="Screen Shot 2014-08-20 at 11.36.59 AM.png" alt="enter image description here" /></p>

<p>An alternative to installing Node.js through apt is to use a specially designed tool called nvm, which stands for &ldquo;Node.js version manager&rdquo;.</p>

<p>Using nvm, you can install multiple, self-contained versions of Node.js which will allow you to control your environment easier. It will give you on-demand access to the newest versions of Node.js, but will also allow you to target previous releases that your app may depend on.</p>

<!-- more -->


<h3>Install prerequisite package</h3>

<p>To start off, we&rsquo;ll need to get the software packages from our Ubuntu repositories that will allow us to build source packages. The nvm script will leverage these tools to build the necessary components:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install build-essential libssl-dev</span></code></pre></td></tr></table></div></figure>


<h3>Install nvm</h3>

<p>Once the prerequisite packages are installed, you can pull down the nvm installation script from the project&rsquo;s GitHub page. The version number may be different, but in general, you can download and install it with the following syntax:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl https://raw.githubusercontent.com/creationix/nvm/v0.13.1/install.sh | bash</span></code></pre></td></tr></table></div></figure>


<p>This will download the script and run it. It will install the software into a subdirectory of your home directory at ~/.nvm. It will also add the necessary lines to your ~/.profile file to use the file.</p>

<p>To gain access to the nvm functionality, you&rsquo;ll need to log out and log back in again, or you can source the ~/.profile file so that your current session knows about the changes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>source ~/.profile</span></code></pre></td></tr></table></div></figure>


<p>Now that you have nvm installed, you can install isolated Node.js versions.</p>

<h3>Install nodejs</h3>

<p>To find out the versions of Node.js that are available for installation, you can type:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nvm ls-remote
</span><span class='line'>. . .
</span><span class='line'> v0.11.6
</span><span class='line'> v0.11.7
</span><span class='line'> v0.11.8
</span><span class='line'> v0.11.9
</span><span class='line'>v0.11.10
</span><span class='line'>v0.11.11
</span><span class='line'>v0.11.12
</span><span class='line'>v0.11.13</span></code></pre></td></tr></table></div></figure>


<p>As you can see, the newest version at the time of this writing is v0.11.13. You can install that by typing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nvm install 0.11.13</span></code></pre></td></tr></table></div></figure>


<p>Usually, nvm will switch to use the most recently installed version. You can explicitly tell nvm to use the version we just downloaded by typing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nvm use 0.11.13</span></code></pre></td></tr></table></div></figure>


<p>When you install Node.js using nvm, the executable is called node. You can see the version currently being used by the shell by typing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ node -v
</span><span class='line'>v.0.11.13
</span><span class='line'>$ npm -v
</span><span class='line'>1.4.9</span></code></pre></td></tr></table></div></figure>


<p>If you have multiple Node.js versions, you can see what is installed by typing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ nvm ls
</span><span class='line'>-&gt;  v0.11.13
</span><span class='line'>      system</span></code></pre></td></tr></table></div></figure>


<p>If you wish to default one of the versions, you can type:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ nvm alias default 0.11.13</span></code></pre></td></tr></table></div></figure>


<p>This version will be automatically selected when a new session spawns. You can also reference it by the alias like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ nvm use default</span></code></pre></td></tr></table></div></figure>


<p>Each version of Node.js will keep track of its own packages and has npm available to manage these.</p>

<h3>Install nodejs packages with npm</h3>

<p>You can have npm install packages to the Node.js project&rsquo;s ./node_modules directory by using the normal format:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ npm install express</span></code></pre></td></tr></table></div></figure>


<p>If you&rsquo;d like to install it globally (available to the other projects using the same Node.js version), you can add the -g flag:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ npm install -g express</span></code></pre></td></tr></table></div></figure>


<p>This will install the package in:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>~/.nvm/node_version/lib/node_modules/package_name</span></code></pre></td></tr></table></div></figure>


<p>Installing globally will let you run the commands from the command line, but you&rsquo;ll have to use link the package into your local sphere to require it from within a program:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm link express</span></code></pre></td></tr></table></div></figure>


<p>You can learn more about the options available to you with nvm by typing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nvm help</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>

<h3>Reference:</h3>

<ol>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-an-ubuntu-14-04-server">https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-an-ubuntu-14-04-server</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[加入 Apple iOS 开发者计划]]></title>
    <link href="http://lifuzu.com/blog/2014/08/17/join-apple-ios-program/"/>
    <updated>2014-08-17T10:05:48-07:00</updated>
    <id>http://lifuzu.com/blog/2014/08/17/join-apple-ios-program</id>
    <content type="html"><![CDATA[<h1>起步</h1>

<p>学习开发 iOS 应用程序的第一步是理解注册为 Apple 开发者和 iOS 开发者计划会员的不同。然后决定你在什么时候付费加入 iOS 开发者计划。本章就来谈论一下 Apple 开发者和 iOS 开发者计划的差别，大概需要的费用以及加入开发者计划的好处。最后，一步步告诉大家怎么样加入这些计划成为会员。</p>

<h3>注册成为 Apple 开发者</h3>

<p>注册成为 Apple 开发者不需要费用，很简单，访问以下链接：</p>

<p><a href="http://developer.apple.com/programs/register/">http://developer.apple.com/programs/register/</a></p>

<p>然后按照要求一步步开始注册。
使用 Apple ID 进行注册，这个 Apple ID 就是用来在 iTunes 或者 Apple Store 上面购买商品的账号。
完成这个注册，就可以获得一些开发者资源，例如在线文档，教程等等。开发者也能够下载旧版的 iOS 开发包（SDK），以及 Xcode 开发环境（IDE）。</p>

<!-- more -->


<h3>下载 Xcode 6 (Beta) IDE 和 iOS 8 SDK</h3>

<p>最新版的 iOS SDK 和 Xcode 可以在 Apple App Store 上面免费下载。鉴于支持 Swift 的 Xcode
6 还是 Beta 版本，我们需要在以下这个网址下载：</p>

<p><a href="https://developer.apple.com/xcode/downloads/">https://developer.apple.com/xcode/downloads/</a></p>

<p>因为这些工具是免费的，那还需要升级加入 iOS 开发者计划吗？是不是保持为 Apple 开发者就足够了。鉴于此，全面理解 iOS 开发者计划是很重要的。</p>

<h3>iOS 开发者计划</h3>

<p>加入 iOS 开发者计划会员费为每年99美元。前面说过，iOS 开发者计划会员可以下载最新版的 iOS SDK 以及 Xcode 开发环境。而且，iOS 开发者计划会员还有以下几点关键好处：</p>

<ol>
<li><p>iOS 开发者计划会员可以创建证书和配置文件，以便在真实设备（而不是虚拟机）上测试应用程序。虽然 Xcode 包含了设备模拟器，允许很大部分的测试在上面运行，然而还是有一部分功能，例如定位跟踪，以及设备移动，只能够在真实设备上全面测试。特别重要的是，iCloud 的访问，提醒和应用内购买，只能当应用程序在物理设备上运行时进行测试。</p></li>
<li><p>更重要的是，iOS 开发者计划的会员可以不受限制地访问全系列与最新的 iOS SDK 和对应的指南和教程，有机会获得来自苹果的 iOS 技术支持工程师的技术支持（虽然每年的费用仅仅包括两个支持事件报告）。</p></li>
<li><p>目前iOS开发者计划中最重要的好处是，必须成为成员才可以在 App Store 中的发布为了出售或免费下载的应用程序。</p></li>
</ol>


<p>显然，在你的应用程序上传 App Store 在某一点之前，iOS开发者计划的成员资格将被要求。唯一的问题是，什么时候注册。</p>

<h3>什么时候注册 iOS 开发者计划</h3>

<p>很明显，iOS 开发者计划的会员有很多好处，而且最终，必须成为会员才能够开始销售应用程序。至于是否现在缴纳报名费或以后，主要视乎个别情况而定。如果你仍然在学习开发 iOS 应用程序的早期阶段，或者还没有拿出一个很好的主意开发应用程序，你就只是需要注册 Apple 开发者。随着你的技能水平的提高，你的想法，应用开发初具规模，到那个时候就可以加入了iOS 开发者计划了。毕竟，日后总是可以报名加入开发者计划的。
另一方面，如果你有对自己有信心，你的应用程序准备发布或你知道需要在物理设备上测试一个的应用程序的功能，而不是能在模拟器里测试了，那么就加入开发者计划吧，宜早不宜迟。</p>

<h3>加入 iOS 开发者计划</h3>

<p>如果你的目标是为您的雇主开发 iOS 应用程序，首先需要检查你们公司是否已经拥有会员资格。如果已经拥有，请与你的公司的程序管理员联系，让他们从 iOS 开发者计划会员中心给你发送邀请，来加入团队。一旦他们这样做了，苹果会发送邮件告知你已经被邀请加入，邮件中含有一个链接，点击链接来激活你的会员资格。如果你或你的公司不是 iOS 开发者计划会员，您可以在网上报名参加：</p>

<p><a href="https://developer.apple.com/programs/ios/">https://developer.apple.com/programs/ios/</a></p>

<p><img src="https://lh4.googleusercontent.com/-B_5q_23G9eo/U-ccIbGr89I/AAAAAAAACVE/dLyAUC2dJGs/s600/Screen+Shot+2014-08-09+at+11.58.29+PM.png" title="Screen Shot 2014-08-09 at 11.58.29 PM.png" alt="enter image description here" /></p>

<p>点击按钮“Enroll Now”，你会看到以下界面：
<img src="https://lh5.googleusercontent.com/-qEoXluyTXdk/U-ccuPCliyI/AAAAAAAACVQ/o2zVICVQLTI/s600/Screen+Shot+2014-08-09+at+11.58.35+PM.png" title="Screen Shot 2014-08-09 at 11.58.35 PM.png" alt="enter image description here" /></p>

<p>继续点击按钮“Continue”：
<img src="https://lh5.googleusercontent.com/-gqQyEfGBRrY/U-cdG8Te43I/AAAAAAAACVg/sKKoDloLZbE/s600/Screen+Shot+2014-08-10+at+12.00.51+AM.png" title="Screen Shot 2014-08-10 at 12.00.51 AM.png" alt="enter image description here" /></p>

<p>选择已有的 Apple ID 或者创建一个新的账号。如果是创建一个新的账号，之后的界面需要输入一些个人信息。之后，你会看到以下界面，点击按钮“Continue”：
<img src="https://lh4.googleusercontent.com/-4BqH51hVbOo/U-cd-8GVBLI/AAAAAAAACV0/w5FhDRnCFXE/s600/Screen+Shot+2014-08-10+at+12.06.14+AM.png" title="Screen Shot 2014-08-10 at 12.06.14 AM.png" alt="enter image description here" /></p>

<p>你需要按照要求选择适合自己的选项，例如，是个人开发者，还是公司开发者：
<img src="https://lh4.googleusercontent.com/-Pic2Qq9Hj3E/U-hl0oX9c6I/AAAAAAAACWs/PHmdeRviXoA/s600/Screen+Shot+2014-08-10+at+12.35.48+AM.png" title="Screen Shot 2014-08-10 at 12.35.48 AM.png" alt="enter image description here" /></p>

<p>继续按照屏幕提示进行，直至完成付费。</p>

<p>现在你需要等待申请批准，账号被激活。</p>

<p>在你等待的这个时间，你可以用你申请时使用的账号和密码登录会员中心：</p>

<p><a href="http://developer.apple.com/membercenter">http://developer.apple.com/membercenter</a></p>

<p>登录以后，点击网页上方“Your Account”，将会显示你之前的申请状态为“Enrollment Pending”：
<img src="https://lh4.googleusercontent.com/--zjVcNRCKCM/U-hmxO7TivI/AAAAAAAACXE/HwSXSe2ATOA/s600/Screen+Shot+2014-08-10+at+11.45.23+PM.png" title="Screen Shot 2014-08-10 at 11.45.23 PM.png" alt="enter image description here" /></p>

<p>当你收到账号激活的邮件，再次登录进会员中心，你就能看到很多的选择，以及资源显示出来，如下图所示：</p>

<p><img src="https://lh6.googleusercontent.com/-EpxJlJRDOU4/U-6dsYX-ccI/AAAAAAAACXk/_m28-ERYSeY/s600/Screen+Shot+2014-08-15+at+4.53.34+PM.png" title="Screen Shot 2014-08-15 at 4.53.34 PM.png" alt="register iOS program done" /></p>

<h3>小结</h3>

<p>准备 iOS 应用程序开发的一个重要步骤就是注册成为 Apple 开发者，以及在必要时刻升级为 iOS 的开发者计划会员。本章概述了以上两种计划的不同，提供了如何加入计划的步骤，以及简要的描述了注册的步骤。</p>

<p>下一步是下载 iOS SDK 和Xcode 6（Beta）开发环境。</p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing With Gerrit Jira Plugin]]></title>
    <link href="http://lifuzu.com/blog/2014/08/05/playing-with-gerrit-jira-plugin/"/>
    <updated>2014-08-05T11:05:16-07:00</updated>
    <id>http://lifuzu.com/blog/2014/08/05/playing-with-gerrit-jira-plugin</id>
    <content type="html"><![CDATA[<p><img src="https://lh5.googleusercontent.com/dDJ6IKUAZN5IZMlt8CmQic457z5BKfJ4WdqXrH2sf5s=s650" title="Gerrit" alt="Gerrit" /></p>

<h3>Build and Setup</h3>

<p><strong>1</strong>. Clone the Gerrit source:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone https://gerrit.googlesource.com/gerrit
</span></code></pre></td></tr></table></div></figure>


<p><strong>2</strong>. Checkout to version 2.8 (2.8 is the latest stable version), include to update submodules:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>gerrit
</span><span class='line'><span class="nv">$ </span>git checkout -b stable-2.8 stable-2.8
</span><span class='line'><span class="nv">$ </span>git submodule update --init --rebase <span class="c"># commands, please referece to git submodule</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>3</strong>. Clone buck, buck is the build system for the latest Gerrit, then build it with ant (&lsquo;sudo apt-get install ant&rsquo;):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone https://gerrit.googlesource.com/buck
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>buck
</span><span class='line'><span class="nv">$ </span>ant
</span></code></pre></td></tr></table></div></figure>


<p><strong>4</strong>. Install buck to be accessed globally:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir ~/bin
</span><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span>~/bin:<span class="nv">$PATH</span>
</span><span class='line'><span class="nv">$ </span>ln -s <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/bin/buck ~/bin/
</span><span class='line'><span class="nv">$ </span>ln -s <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/bin/buckd ~/bin/
</span><span class='line'><span class="nv">$ </span>which buck
</span></code></pre></td></tr></table></div></figure>


<p><strong>5</strong>. Build Gerrit:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>gerrit
</span><span class='line'><span class="nv">$ </span>buck build gerrit
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><strong>NOTE:</strong> The gerrit.war will be generated here: buck-out/gen/gerrit.war</p></blockquote>

<p><strong>6</strong>. Build extension, plugin, GWT API jar files, and install them:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>buck build api
</span><span class='line'><span class="nv">$ </span>buck build api_install
</span></code></pre></td></tr></table></div></figure>


<p><strong>7</strong>. Build all core plugins (optional):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>buck build plugins:core
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><strong>NOTE:</strong> All core plugins will be generated here: buck-out/gen/plugins/&lt;name&gt;/&lt;name&gt;.jar</p></blockquote>

<p><strong>8</strong>. Clone the hooks-its, and hooks-jira projects:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone https://gerrit.googlesource.com/plugins/hooks-its plugins/hooks-its
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>plugins/hooks-its
</span><span class='line'><span class="nv">$ </span>git checkout -b v2.8 origin/stable-2.8
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ../..
</span><span class='line'><span class="nv">$ </span>git clone https://gerrit.googlesource.com/plugins/hooks-jira plugins/hooks-jira
</span></code></pre></td></tr></table></div></figure>


<p><strong>9</strong>. Modify the pom.xml files under plugins/hooks-its AND plugins/hooks-its/hooks-its:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>plugins/hooks-its
</span><span class='line'><span class="nv">$ </span>git diff
</span><span class='line'>diff --git a/hooks-its/pom.xml b/hooks-its/pom.xml
</span><span class='line'>index a206459..75e11dc 100644
</span><span class='line'>--- a/hooks-its/pom.xml
</span><span class='line'>+++ b/hooks-its/pom.xml
</span><span class='line'>@@ -22,7 +22,7 @@ limitations under the License.
</span><span class='line'>   &lt;parent&gt;
</span><span class='line'>     &lt;groupId&gt;com.googlesource.gerrit.plugins.its&lt;/groupId&gt;
</span><span class='line'>     &lt;artifactId&gt;hooks-its-parent&lt;/artifactId&gt;
</span><span class='line'>-    &lt;version&gt;2.9-SNAPSHOT&lt;/version&gt;
</span><span class='line'>+    &lt;version&gt;2.8&lt;/version&gt;
</span><span class='line'>   &lt;/parent&gt;
</span><span class='line'>   &lt;artifactId&gt;hooks-its&lt;/artifactId&gt;
</span><span class='line'>   &lt;name&gt;Gerrit Code Review - Commit validation and Workflow&lt;/name&gt;
</span><span class='line'>diff --git a/pom.xml b/pom.xml
</span><span class='line'>index 600bff9..995d008 100644
</span><span class='line'>--- a/pom.xml
</span><span class='line'>+++ b/pom.xml
</span><span class='line'>@@ -22,7 +22,7 @@ limitations under the License.
</span><span class='line'>   &lt;groupId&gt;com.googlesource.gerrit.plugins.its&lt;/groupId&gt;
</span><span class='line'>   &lt;artifactId&gt;hooks-its-parent&lt;/artifactId&gt;
</span><span class='line'>   &lt;packaging&gt;pom&lt;/packaging&gt;
</span><span class='line'>-  &lt;version&gt;2.9-SNAPSHOT&lt;/version&gt;
</span><span class='line'>+  &lt;version&gt;2.8&lt;/version&gt;
</span><span class='line'>
</span><span class='line'>   &lt;name&gt;Gerrit Code Review - Issue tracker support&lt;/name&gt;
</span></code></pre></td></tr></table></div></figure>


<p><strong>10</strong>. Build the hooks-its:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>plugins/hooks-its
</span><span class='line'><span class="nv">$ </span>mvn -DskipTests -Dmaven.test.skip<span class="o">=</span><span class="nb">true </span>package install
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><strong>NOTE:</strong> The hooks-its-2.8.jar will be generated here: hooks-its/target/hooks-its-2.8.jar
<strong>NOTE</strong>: If don&rsquo;t skip tests, run with the command: <code>mvn clean package install</code>, then will fail on test case!
<strong>NOTE</strong>: Gerrit select BUCK as its new build system, for new plugin, please reference to the following <em>NOTES</em> #5</p></blockquote>

<p><strong>11</strong>. Modify the pom.xml files under plugins/hooks-jira:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>plugins/hooks-jira
</span><span class='line'><span class="nv">$ </span>git diff
</span><span class='line'>diff --git a/pom.xml b/pom.xml
</span><span class='line'>index 7b04c60..8f60c78 100644
</span><span class='line'>--- a/pom.xml
</span><span class='line'>+++ b/pom.xml
</span><span class='line'>@@ -20,7 +20,7 @@ limitations under the License.
</span><span class='line'>   &lt;parent&gt;
</span><span class='line'>     &lt;groupId&gt;com.googlesource.gerrit.plugins.its&lt;/groupId&gt;
</span><span class='line'>     &lt;artifactId&gt;hooks-its-parent&lt;/artifactId&gt;
</span><span class='line'>-    &lt;version&gt;2.9-SNAPSHOT&lt;/version&gt;
</span><span class='line'>+    &lt;version&gt;2.8&lt;/version&gt;
</span><span class='line'>   &lt;/parent&gt;
</span><span class='line'>   &lt;artifactId&gt;hooks-jira&lt;/artifactId&gt;
</span><span class='line'>   &lt;packaging&gt;jar&lt;/packaging&gt;
</span></code></pre></td></tr></table></div></figure>


<p><strong>12</strong>. Build the hooks-jira:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>plugins/hooks-jira
</span><span class='line'><span class="nv">$ </span>mvn clean package
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><strong>NOTE:</strong> The hooks-jira-2.8.jar will be generated here: target/hooks-jira-2.8.jar</p></blockquote>

<p><strong>13</strong>. Copy the following jar files to the <code>plugin</code> folder under the Gerrit installation path on remote server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>hooks-its-2.8.jar
</span><span class='line'>hooks-jira-2.8.jar
</span></code></pre></td></tr></table></div></figure>


<p>For example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scp hooks-its/target/hooks-its-2.8.jar ../hooks-jira/target/hooks-jira-2.8.jar gerrit2@review.example.co:/home/gerrit2/review_site/plugins
</span></code></pre></td></tr></table></div></figure>


<p><strong>14</strong>. Add a new file etc/its/action.config under the Gerrit installation path on remote server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>rule <span class="s2">&quot;merged&quot;</span><span class="o">]</span>
</span><span class='line'>        event-type <span class="o">=</span> change-merged
</span><span class='line'>        <span class="nv">action</span> <span class="o">=</span> add-standard-comment
</span><span class='line'><span class="o">[</span>rule <span class="s2">&quot;comment&quot;</span><span class="o">]</span>
</span><span class='line'>        event-type <span class="o">=</span> comment-added
</span><span class='line'>        <span class="nv">action</span> <span class="o">=</span> add-standard-comment
</span><span class='line'><span class="o">[</span>rule <span class="s2">&quot;patch-set&quot;</span><span class="o">]</span>
</span><span class='line'>        event-type <span class="o">=</span> patchset-created
</span><span class='line'>        <span class="nv">action</span> <span class="o">=</span> add-standard-comment
</span><span class='line'><span class="o">[</span>rule <span class="s2">&quot;ref-updated&quot;</span><span class="o">]</span>
</span><span class='line'>        event-type <span class="o">=</span> ref-updated
</span><span class='line'>        <span class="nv">action</span> <span class="o">=</span> add-standard-comment
</span></code></pre></td></tr></table></div></figure>


<p><strong>15</strong>. Run the Gerrit initial installation command on remote server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>java -jar gerrit-2.8.war init -d review_site
</span><span class='line'>
</span><span class='line'>*** Gerrit Code Review 2.8
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>*** Git Repositories
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Location of Git repositories   <span class="o">[</span>git<span class="o">]</span>:
</span><span class='line'>
</span><span class='line'>*** SQL Database
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Database server <span class="nb">type</span>           <span class="o">[</span>mysql<span class="o">]</span>:
</span><span class='line'>Server hostname                <span class="o">[</span>localhost<span class="o">]</span>:
</span><span class='line'>Server port                    <span class="o">[(</span>mysql default<span class="o">)]</span>:
</span><span class='line'>Database name                  <span class="o">[</span>reviewdb<span class="o">]</span>:
</span><span class='line'>Database username              <span class="o">[</span>gerrit2<span class="o">]</span>:
</span><span class='line'>Change gerrit2<span class="s1">&#39;s password      [y/N]?</span>
</span><span class='line'>
</span><span class='line'><span class="s1">*** User Authentication</span>
</span><span class='line'><span class="s1">***</span>
</span><span class='line'>
</span><span class='line'><span class="s1">Authentication method          [DEVELOPMENT_BECOME_ANY_ACCOUNT/?]:</span>
</span><span class='line'>
</span><span class='line'><span class="s1">*** Email Delivery</span>
</span><span class='line'><span class="s1">***</span>
</span><span class='line'>
</span><span class='line'><span class="s1">SMTP server hostname           [localhost]:</span>
</span><span class='line'><span class="s1">SMTP server port               [(default)]:</span>
</span><span class='line'><span class="s1">SMTP encryption                [NONE/?]:</span>
</span><span class='line'><span class="s1">SMTP username                  [gerrit2]:</span>
</span><span class='line'><span class="s1">Change gerrit2&#39;</span>s password      <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>
</span><span class='line'>*** Container Process
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Run as                         <span class="o">[</span>gerrit2<span class="o">]</span>:
</span><span class='line'>Java runtime                   <span class="o">[</span>C:<span class="se">\P</span>rogram Files <span class="o">(</span>x86<span class="o">)</span><span class="se">\J</span>ava<span class="se">\j</span>re7<span class="o">]</span>:
</span><span class='line'>Upgrade c:<span class="se">\U</span>sers<span class="se">\g</span>errit2<span class="se">\g</span>errit<span class="se">\b</span>in<span class="se">\g</span>errit.war <span class="o">[</span>Y/n<span class="o">]</span>?
</span><span class='line'>Copying gerrit-2.8.war to c:<span class="se">\U</span>sers<span class="se">\g</span>errit2<span class="se">\g</span>errit<span class="se">\b</span>in<span class="se">\g</span>errit.war
</span><span class='line'>
</span><span class='line'>*** SSH Daemon
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Listen on address              <span class="o">[</span>*<span class="o">]</span>:
</span><span class='line'>Listen on port                 <span class="o">[</span>29418<span class="o">]</span>:
</span><span class='line'>
</span><span class='line'>*** HTTP Daemon
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Behind reverse proxy           <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Use SSL <span class="o">(</span>https://<span class="o">)</span>             <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Listen on address              <span class="o">[</span>*<span class="o">]</span>:
</span><span class='line'>Listen on port                 <span class="o">[</span>8080<span class="o">]</span>:
</span><span class='line'>Canonical URL                  <span class="o">[</span>http://review.example.com:8080/<span class="o">]</span>:
</span><span class='line'>
</span><span class='line'>*** Plugins
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Install plugin reviewnotes version v2.8 <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Install plugin download-commands version v2.8 <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Install plugin replication version v2.8 <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Install plugin commit-message-length-validator version v2.8 <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>*** Jira connectivity
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Jira URL <span class="o">(</span>empty to skip<span class="o">)</span>       <span class="o">[</span>https://jira.example.com/<span class="o">]</span>:
</span><span class='line'>Jira username                  <span class="o">[</span>jira-robot<span class="o">]</span>:
</span><span class='line'>Change jira-robot<span class="err">&#39;</span>s password        <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Test connectivity to https://jira.example.com <span class="o">[</span>y/N<span class="o">]</span>? y
</span><span class='line'>Checking Jira connectivity ... <span class="o">[</span>OK<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>*** Jira issue-tracking association
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Jira issue-Id regex            <span class="o">[([</span>A-Z<span class="o">]</span>+-<span class="o">[</span>0-9<span class="o">]</span>+<span class="o">)]</span>:
</span><span class='line'>Issue-id enforced in commit message <span class="o">[</span>MANDATORY/?<span class="o">]</span>:?
</span><span class='line'>Supported options are:
</span><span class='line'>           mandatory
</span><span class='line'>           suggested
</span><span class='line'>           optional
</span><span class='line'>Issue-id enforced in commit message <span class="o">[</span>MANDATORY/?<span class="o">]</span>: suggested
</span><span class='line'>Initialized C:<span class="se">\U</span>sers<span class="se">\g</span>errit2<span class="se">\g</span>errit
</span></code></pre></td></tr></table></div></figure>


<p><strong>16</strong>. Restart gerrit-jetty service:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo service gerrit-jetty.sh restart
</span></code></pre></td></tr></table></div></figure>


<p><strong>17</strong>. Done!</p>

<h3>NOTES:</h3>

<p><em>1</em>. Download Gerrit here: <a href="http://gerrit-releases.storage.googleapis.com/index.html">http://gerrit-releases.storage.googleapis.com/index.html</a></p>

<p><em>2</em>. The file review_site/etc/gerrit.config should look like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>jira<span class="o">]</span>
</span><span class='line'>        <span class="nv">url</span> <span class="o">=</span> http://review.example.com:8080
</span><span class='line'>        <span class="nv">username</span> <span class="o">=</span> jira-robot
</span><span class='line'>        <span class="nv">commentOnRefUpdatedGitWeb</span> <span class="o">=</span> <span class="nb">false</span>   <span class="c"># to comment gitweb comments on jira</span>
</span><span class='line'><span class="o">[</span>commentLink <span class="s2">&quot;jira&quot;</span><span class="o">]</span>
</span><span class='line'>        <span class="nv">match</span> <span class="o">=</span> <span class="o">([</span>A-Z<span class="o">]</span>+-<span class="o">[</span>0-9<span class="o">]</span>+<span class="o">)</span>
</span><span class='line'>        <span class="nv">html</span> <span class="o">=</span> &lt;a <span class="nv">href</span><span class="o">=</span><span class="se">\&quot;</span>http://jira.example.com:8080/browse/<span class="nv">$1</span><span class="se">\&quot;</span>&gt;<span class="nv">$1</span>&lt;/a&gt;
</span><span class='line'>        <span class="nv">association</span> <span class="o">=</span> SUGGESTED
</span></code></pre></td></tr></table></div></figure>


<p><em>3</em>. If we just want to parse the jira id on the subject of the git comments, then here is the diff:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>diff --git a/hooks-its/src/main/java/com/googlesource/gerrit/plugins/hooks/util/
</span><span class='line'>index a04b175..3d56426 100644
</span><span class='line'>--- a/hooks-its/src/main/java/com/googlesource/gerrit/plugins/hooks/util/CommitM
</span><span class='line'>+++ b/hooks-its/src/main/java/com/googlesource/gerrit/plugins/hooks/util/CommitM
</span><span class='line'>@@ -31,7 +31,7 @@ public class CommitMessageFetcher <span class="o">{</span>
</span><span class='line'>       RevWalk <span class="nv">revWalk</span> <span class="o">=</span> new RevWalk<span class="o">(</span>repo<span class="o">)</span>;
</span><span class='line'>       RevCommit <span class="nv">commit</span> <span class="o">=</span> revWalk.parseCommit<span class="o">(</span>ObjectId.fromString<span class="o">(</span>commitId<span class="o">))</span>;
</span><span class='line'>
</span><span class='line'>-      <span class="k">return </span>commit.getFullMessage<span class="o">()</span>;
</span><span class='line'>+      <span class="k">return </span>commit.getShortMessage<span class="o">()</span>;
</span><span class='line'>     <span class="o">}</span> finally <span class="o">{</span>
</span><span class='line'>       repo.close<span class="o">()</span>;
</span><span class='line'>     <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>4</em>. Get the log message from jetty/logs on Gerrit server.
<em>5</em>. Gerrit choose BUCK as its new build system, so for the new plugin, the build steps should be (take cookbook-plugin as an example):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>buck build plugins/cookbook-plugin
</span></code></pre></td></tr></table></div></figure>


<p>The output is created in: buck-out/gen/plugins/cookbook-plugin/cookbook-plugin.jar</p>

<h3>References:</h3>

<p><em>1</em>. <a href="https://groups.google.com/forum/#!msg/repo-discuss/GSyHMeaCyyw/cJGunFcNc4oJ">https://groups.google.com/forum/#!msg/repo-discuss/GSyHMeaCyyw/cJGunFcNc4oJ</a>
<em>2</em>. <a href="https://gerrit-review.googlesource.com/Documentation/dev-buck.html">https://gerrit-review.googlesource.com/Documentation/dev-buck.html</a></p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing With Jenkins Create Job]]></title>
    <link href="http://lifuzu.com/blog/2014/04/24/playing-with-jenkins-create-job/"/>
    <updated>2014-04-24T22:08:09-07:00</updated>
    <id>http://lifuzu.com/blog/2014/04/24/playing-with-jenkins-create-job</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-iwPM2DPUvJY/U0Y1mjJ70WI/AAAAAAAAB4g/ZOmWzMCL-_0/s0/jenkins_feature.jpg" title="jenkins_feature.jpg" alt="Jenkins logo" /></p>

<h2>create new job from templates</h2>

<p>In this article, we will talk about how to create a Jenkins job with a template by some commands.</p>

<h3>Instructions</h3>

<p><em>1</em>. Get the Jenkins CLI client package</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget http://jenkins/jnlpJars/jenkins-cli.jar</span></code></pre></td></tr></table></div></figure>


<p><em>2</em>. Check which commands supported by the client package [Exception <em>1</em>,<em>2</em>]</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ help</span></code></pre></td></tr></table></div></figure>


<p><em>3</em>. List all jobs under the view: tools</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ list-jobs tools</span></code></pre></td></tr></table></div></figure>


<p><em>4</em>. Get the configuration of the job: template</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ get-job template &gt; template.xml</span></code></pre></td></tr></table></div></figure>


<p><em>5</em>. Create a new job based on the configuration</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ create-job new_job_name &lt; new_job_name.xml</span></code></pre></td></tr></table></div></figure>


<p><em>6</em>. Run groovy script</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ groovy scripts/add_job_to_view.groovy</span></code></pre></td></tr></table></div></figure>


<p>If there are any parameters in the script, just as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>import jenkins.model.*
</span><span class='line'>
</span><span class='line'>if (args.length != 2 ) {
</span><span class='line'>  println "Error on arguments!"
</span><span class='line'>}
</span><span class='line'>def jobName  = args[0] ?: 'a_job'
</span><span class='line'>def viewName = args[1] ?: 'a_view'
</span><span class='line'>
</span><span class='line'>println jobName + ' ' + viewName
</span><span class='line'>
</span><span class='line'>def v = Jenkins.instance.getView(viewName)
</span><span class='line'>def i = Jenkins.instance.getItemByFullName(jobName)
</span><span class='line'>if (v && i) {
</span><span class='line'>  v.add(i)
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>pass the parameters as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ groovy scripts/add_job_to_view.groovy JOB_NAME VIEM_NAME</span></code></pre></td></tr></table></div></figure>


<p><em>7</em>. Build a job</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ build new_job_name</span></code></pre></td></tr></table></div></figure>


<p><em>8</em>. Diable a job</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ disable-job new_job_name</span></code></pre></td></tr></table></div></figure>


<h3>Exceptions:</h3>

<p><em>1</em>. Description:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Exception in thread "main" java.io.IOException: No X-Jenkins-CLI2-Port among [null, Vary, Date, Content-Length, Keep-Alive, Set-Cookie, Connection, Content-Type, X-Powered-By, Server]
</span><span class='line'>  at hudson.cli.CLI.getCliTcpPort(CLI.java:281)
</span><span class='line'>  at hudson.cli.CLI.&lt;init&gt;(CLI.java:128)
</span><span class='line'>  at hudson.cli.CLIConnectionFactory.connect(CLIConnectionFactory.java:72)
</span><span class='line'>  at hudson.cli.CLI._main(CLI.java:449)
</span><span class='line'>  at hudson.cli.CLI.main(CLI.java:378)
</span><span class='line'>  Suppressed: java.io.EOFException: unexpected stream termination
</span><span class='line'>      at hudson.remoting.ClassicCommandTransport.create(ClassicCommandTransport.java:100)
</span><span class='line'>      at hudson.remoting.Channel.&lt;init&gt;(Channel.java:392)
</span><span class='line'>      at hudson.remoting.Channel.&lt;init&gt;(Channel.java:388)
</span><span class='line'>      at hudson.remoting.Channel.&lt;init&gt;(Channel.java:349)
</span><span class='line'>      at hudson.remoting.Channel.&lt;init&gt;(Channel.java:345)
</span><span class='line'>      at hudson.remoting.Channel.&lt;init&gt;(Channel.java:333)
</span><span class='line'>      at hudson.cli.CLI.connectViaHttp(CLI.java:159)
</span><span class='line'>      at hudson.cli.CLI.&lt;init&gt;(CLI.java:132)
</span><span class='line'>      ... 3 more</span></code></pre></td></tr></table></div></figure>


<h4>Solution: check the port which Jenkins is running on, put 8080 on URL should fix, just as:</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins:8080/ help</span></code></pre></td></tr></table></div></figure>


<p><em>2</em>. Description:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Failed to authenticate with your SSH keys.
</span><span class='line'>hudson.security.AccessDeniedException2: anonymous is missing the ExtendedRead permission
</span><span class='line'>  at hudson.security.ACL.checkPermission(ACL.java:54)
</span><span class='line'>  at hudson.model.AbstractItem.checkPermission(AbstractItem.java:441)
</span><span class='line'>  at hudson.cli.GetJobCommand.run(GetJobCommand.java:46)
</span><span class='line'>  at hudson.cli.CLICommand.main(CLICommand.java:229)
</span><span class='line'>  at hudson.cli.CliManagerImpl.main(CliManagerImpl.java:92)
</span><span class='line'>  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
</span><span class='line'>  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
</span><span class='line'>  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
</span><span class='line'>  at java.lang.reflect.Method.invoke(Method.java:616)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.perform(RemoteInvocationHandler.java:275)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.call(RemoteInvocationHandler.java:256)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.call(RemoteInvocationHandler.java:215)
</span><span class='line'>  at hudson.remoting.UserRequest.perform(UserRequest.java:118)
</span><span class='line'>  at hudson.remoting.UserRequest.perform(UserRequest.java:48)
</span><span class='line'>  at hudson.remoting.Request$2.run(Request.java:326)
</span><span class='line'>  at hudson.remoting.InterceptingExecutorService$1.call(InterceptingExecutorService.java:72)
</span><span class='line'>  at hudson.cli.CliManagerImpl$1.call(CliManagerImpl.java:63)
</span><span class='line'>  at hudson.remoting.InterceptingExecutorService$2.call(InterceptingExecutorService.java:95)
</span><span class='line'>  at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
</span><span class='line'>  at java.util.concurrent.FutureTask.run(FutureTask.java:166)
</span><span class='line'>  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
</span><span class='line'>  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
</span><span class='line'>  at java.lang.Thread.run(Thread.java:679)</span></code></pre></td></tr></table></div></figure>


<h4>Solution: add client public ssh key to the Jenkins server at: <code>http://jenkins/user/USERNAME/configure</code> | <code>SSH Public Keys</code>.</h4>

<p><em>3</em>. Description:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hudson.security.AccessDeniedException2: &lt;USERNAME&gt; is missing the Job/ExtendedRead permission
</span><span class='line'>  at hudson.security.ACL.checkPermission(ACL.java:54)
</span><span class='line'>  at hudson.model.AbstractItem.checkPermission(AbstractItem.java:446)
</span><span class='line'>  at hudson.cli.GetJobCommand.run(GetJobCommand.java:46)
</span><span class='line'>  at hudson.cli.CLICommand.main(CLICommand.java:234)
</span><span class='line'>  at hudson.cli.CliManagerImpl.main(CliManagerImpl.java:92)
</span><span class='line'>  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
</span><span class='line'>  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
</span><span class='line'>  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
</span><span class='line'>  at java.lang.reflect.Method.invoke(Method.java:606)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.perform(RemoteInvocationHandler.java:300)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.call(RemoteInvocationHandler.java:281)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.call(RemoteInvocationHandler.java:240)
</span><span class='line'>  at hudson.remoting.UserRequest.perform(UserRequest.java:118)
</span><span class='line'>  at hudson.remoting.UserRequest.perform(UserRequest.java:48)
</span><span class='line'>  at hudson.remoting.Request$2.run(Request.java:328)
</span><span class='line'>  at hudson.remoting.InterceptingExecutorService$1.call(InterceptingExecutorService.java:72)
</span><span class='line'>  at hudson.cli.CliManagerImpl$1.call(CliManagerImpl.java:63)
</span><span class='line'>  at hudson.remoting.InterceptingExecutorService$2.call(InterceptingExecutorService.java:95)
</span><span class='line'>  at jenkins.util.ContextResettingExecutorService$2.call(ContextResettingExecutorService.java:46)
</span><span class='line'>  at java.util.concurrent.FutureTask.run(FutureTask.java:262)
</span><span class='line'>  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
</span><span class='line'>  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
</span><span class='line'>  at java.lang.Thread.run(Thread.java:745)</span></code></pre></td></tr></table></div></figure>


<h4>Solution: Jenkins server &ndash;> Manage Jenkins &ndash;> Configure Global Security to add <USERNAME> related permissions.</h4>

<h3>References:</h3>

<ol>
<li><a href="http://www.blackpepper.co.uk/generating-new-jenkins-jobs-from-templates-and-parameterised-builds/">http://www.blackpepper.co.uk/generating-new-jenkins-jobs-from-templates-and-parameterised-builds/</a></li>
<li><a href="http://javadoc.jenkins-ci.org/jenkins/model/Jenkins.html">http://javadoc.jenkins-ci.org/jenkins/model/Jenkins.html</a></li>
<li><a href="https://github.com/jenkinsci/jenkins">https://github.com/jenkinsci/jenkins</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing With Git Submodule]]></title>
    <link href="http://lifuzu.com/blog/2014/04/24/playing-with-git-submodule/"/>
    <updated>2014-04-24T22:01:03-07:00</updated>
    <id>http://lifuzu.com/blog/2014/04/24/playing-with-git-submodule</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-GW4P0d8zZdM/U1nrsDaCgiI/AAAAAAAAB5I/4mTt3xjfmFo/s0/xlotte-git.jpg" title="xlotte-git.jpg" alt="enter image description here" /></p>

<h3>Intructions:</h3>

<ul>
<li>add a submodule</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git submodule add -b BRANCH ssh://REPO_URL/REPO_PATH SUBMODULE_PATH
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;add a submodule at SUBMODULE_PATH&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>clone the project with submodule(s)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone ssh://REPO_URL/REPO_PATH PROJECT
</span><span class='line'><span class="nb">cd </span>PROJECT
</span><span class='line'><span class="nv">$ </span>git submodule update --init --rebase
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>get submodule status</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git submodule status
</span><span class='line'><span class="nv">$ </span>git submodule foreach git branch -a
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>checkout all submodule to a branch defined in .gitmodule (which means we specify the branch when we add the submodule with &lsquo;-b BRANCH&rsquo;)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git submodule foreach -q --recursive <span class="s1">&#39;branch=&quot;$(git config -f $toplevel/.gitmodules submodule.$name.branch)&quot;; git checkout $branch&#39;</span>
</span><span class='line'><span class="c"># OR a short version</span>
</span><span class='line'><span class="nv">$ </span>git submodule foreach git checkout master
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>pull the latest master for all of the submodule</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git submodule -q foreach git pull -q origin master
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>develop in submodule</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Make your changes in submoduleA</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>submoduleA
</span><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;Updated the submoduleA&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push origin BRANCH
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>sync to project</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>PROJECT
</span><span class='line'><span class="nv">$ </span>git pull
</span><span class='line'><span class="nv">$ </span>git submodule update --rebase
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>manually update the project to track submodule (Gerrit submodule description commit the track automatically)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>PROJECT
</span><span class='line'><span class="nv">$ </span>git add submoduleA
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;Updated submodule a.&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push origin BRANCH_NAME
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>deinit, and remove a submodule</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git submodule deinit SUBMODULE_PATH
</span><span class='line'><span class="nv">$ </span>git rm SUBMODULE_PATH
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;remove the submodule at SUBMODULE_PATH&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>References:</h3>

<ol>
<li><a href="http://git-scm.com/docs/git-submodule">http://git-scm.com/docs/git-submodule</a></li>
<li><a href="http://git-scm.com/docs/git-rm.html">http://git-scm.com/docs/git-rm.html</a></li>
<li><a href="http://stackoverflow.com/questions/8642668/how-to-make-submodule-with-detached-head-to-be-attached-to-actual-head">http://stackoverflow.com/questions/8642668/how-to-make-submodule-with-detached-head-to-be-attached-to-actual-head</a></li>
<li><a href="http://www.vogella.com/tutorials/Git/article.html#submodules">http://www.vogella.com/tutorials/Git/article.html#submodules</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rename Repository on Gerrit]]></title>
    <link href="http://lifuzu.com/blog/2014/04/09/rename-repository-on-gerrit/"/>
    <updated>2014-04-09T22:42:53-07:00</updated>
    <id>http://lifuzu.com/blog/2014/04/09/rename-repository-on-gerrit</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-_03bVFvmzzg/U0YvHJPBLCI/AAAAAAAAB4M/SSKXyOR_T3U/s0/diffymute-300x279.png" title="diffymute-300x279.png" alt="Gerrit icon" /></p>

<h3>Instructions:</h3>

<p><em>1</em>. Move the repository folder on server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># on gerrit server</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> <span class="nv">$site_path</span>/git;
</span><span class='line'><span class="nv">$ </span>mv old_name.git new_name.git
</span></code></pre></td></tr></table></div></figure>


<p><em>2</em>. Flush the caches on server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># On another client image:</span>
</span><span class='line'><span class="nv">$ </span>ssh -p 29418 gerrit.server.com gerrit flush-caches
</span></code></pre></td></tr></table></div></figure>


<p><em>3</em>. Run sql statement to update the changes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># On another client image (need &quot;Access Database&quot; capability):</span>
</span><span class='line'><span class="nv">$ </span>ssh -p 29418 gerrit.server.com gerrit gsql <span class="o">[</span>Enter<span class="o">]</span>
</span><span class='line'>gerrit&gt; USE <span class="o">{</span>Database<span class="o">}</span>;
</span><span class='line'>gerrit&gt; SELECT * FROM changes WHERE <span class="nv">dest_project_name</span> <span class="o">=</span> <span class="s1">&#39;old_name&#39;</span>;
</span><span class='line'><span class="c"># if have more than 1, run the following command to update, otherwise, quit with \q;</span>
</span><span class='line'>gerrit&gt; UPDATE changes SET <span class="nv">dest_project_name</span> <span class="o">=</span> <span class="s1">&#39;new_name&#39;</span> WHERE
</span><span class='line'><span class="nv">dest_project_name</span> <span class="o">=</span> <span class="s1">&#39;old_name&#39;</span>;
</span><span class='line'>gerrit&gt; <span class="se">\q</span>
</span></code></pre></td></tr></table></div></figure>


<h3>References:</h3>

<ol>
<li><a href="https://groups.google.com/forum/#!topic/repo-discuss/ltIxBipUPKI">https://groups.google.com/forum/#!topic/repo-discuss/ltIxBipUPKI</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrate Svn to Git]]></title>
    <link href="http://lifuzu.com/blog/2014/04/09/migrate-svn-to-git/"/>
    <updated>2014-04-09T22:21:27-07:00</updated>
    <id>http://lifuzu.com/blog/2014/04/09/migrate-svn-to-git</id>
    <content type="html"><![CDATA[<p><img src="https://lh6.googleusercontent.com/-zWvC0T4xLUM/U0YqARAy3HI/AAAAAAAAB34/N0PazinANn0/s0/svn_to_git-860x200.png" title="svn_to_git-860x200.png" alt="migrate svn to git" /></p>

<h3>Instructions:</h3>

<p><em>1</em>. Check out the source tree from SVN server with svn command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>svn co http://my-project.googlecode.com/svn/trunk
</span></code></pre></td></tr></table></div></figure>


<p><em>2</em>. Generate an users.txt with the command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>svn log ^/ --xml | grep -P <span class="s2">&quot;^&lt;author&quot;</span> | sort -u | <span class="se">\</span>
</span><span class='line'>      perl -pe <span class="s1">&#39;s/&lt;author&gt;(.*?)&lt;\/author&gt;/$1 = /&#39;</span> &gt; users.txt
</span></code></pre></td></tr></table></div></figure>


<p>   and following the formatting:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>schacon = Scott Chacon &lt;schacon@geemail.com&gt;
</span><span class='line'>selse = Someo Nelse &lt;selse@geemail.com&gt;
</span></code></pre></td></tr></table></div></figure>


<p><strong>NOTE</strong>: You can try the script to generate authors list automatically: <a href="https://gist.github.com/lifuzu/9081923#file-findauthors-sh">https://gist.github.com/lifuzu/9081923#file-findauthors-sh</a></p>

<p><em>3</em>. Once the users.txt is ready, then checkout the source tree again with the command &lsquo;git svn clone&rsquo;:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git svn clone http://my-project.googlecode.com/svn/ <span class="se">\</span>
</span><span class='line'>      --authors-file<span class="o">=</span>users.txt --no-metadata -s my_project
</span></code></pre></td></tr></table></div></figure>


<p><em>4</em>. To move the tags to be proper Git tags, run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git <span class="k">for</span>-each-ref refs/remotes/tags | cut -d / -f 4- | grep -v @ | <span class="k">while </span><span class="nb">read </span>tagname; <span class="k">do </span>git tag <span class="s2">&quot;$tagname&quot;</span> <span class="s2">&quot;tags/$tagname&quot;</span>; git branch -r -d <span class="s2">&quot;tags/$tagname&quot;</span>; <span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>5</em>. To move the rest of the references under refs/remotes to be local branches:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git <span class="k">for</span>-each-ref refs/remotes | cut -d / -f 3- | grep -v @ | <span class="k">while </span><span class="nb">read </span>branchname; <span class="k">do </span>git branch <span class="s2">&quot;$branchname&quot;</span> <span class="s2">&quot;refs/remotes/$branchname&quot;</span>; git branch -r -d <span class="s2">&quot;$branchname&quot;</span>; <span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>6</em>. Adding the git server as a remote:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git remote add origin git@my-git-server:myrepository.git
</span></code></pre></td></tr></table></div></figure>


<p><em>7</em>. Push all your branches and tags to go up:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git push origin --all
</span><span class='line'><span class="nv">$ </span>git push origin --tags
</span></code></pre></td></tr></table></div></figure>


<p><em>8</em>. Update the changes from SVN (before you update, please cleanup your local workspace)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git svn fetch
</span><span class='line'>...
</span><span class='line'><span class="nv">r81152</span> <span class="o">=</span> c2465633b56d16081334336ee87d506b97d10449 <span class="o">(</span>refs/remotes/git-svn<span class="o">)</span>
</span><span class='line'><span class="nv">$ </span>git checkout master
</span><span class='line'><span class="nv">$ </span>git merge remotes/git-svn
</span></code></pre></td></tr></table></div></figure>


<p><strong>NOTE</strong>: Sometimes when you run <code>git svn fetch</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>...
</span><span class='line'><span class="nv">r81217</span> <span class="o">=</span> eb79c770f852f6158a583bb17a8c1a326f7b4e03 <span class="o">(</span>refs/remotes/trunk<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then you need to run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git checkout master
</span><span class='line'><span class="nv">$ </span>git merge remotes/trunk
</span></code></pre></td></tr></table></div></figure>


<p><em>9</em>. Then check them into GIT</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git log <span class="c"># should have some changes merged from SVN</span>
</span><span class='line'><span class="nv">$ </span>git push origin master
</span></code></pre></td></tr></table></div></figure>


<p><em>10</em>. If you have a temporary migration branch you modified something on that, then you need rebase the changes on master to migration:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git checkout migration
</span><span class='line'><span class="nv">$ </span>git rebase master  <span class="c"># fix the conflicts if have</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>11</em>. Finally, you need merge the changes on migration, fast forward, since you have rebased.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git checkout master
</span><span class='line'><span class="nv">$ </span>git merge migration
</span></code></pre></td></tr></table></div></figure>


<p>That is it!</p>

<h3>Reference:</h3>

<ol>
<li><a href="http://git-scm.com/book/en/Git-and-Other-Systems-Migrating-to-Git">http://git-scm.com/book/en/Git-and-Other-Systems-Migrating-to-Git</a></li>
<li><a href="http://git-scm.com/book/ch3-6.html">http://git-scm.com/book/ch3-6.html</a></li>
<li><a href="http://stackoverflow.com/questions/16565991/keep-svn-repository-in-sync-with-git-one">http://stackoverflow.com/questions/16565991/keep-svn-repository-in-sync-with-git-one</a></li>
<li><a href="http://stackoverflow.com/questions/5241898/is-a-bidrectional-git-svn-sync-both-writable-possible">http://stackoverflow.com/questions/5241898/is-a-bidrectional-git-svn-sync-both-writable-possible</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如果瀑布是一次出差，那么敏捷是一段旅行]]></title>
    <link href="http://lifuzu.com/blog/2014/02/13/waterfall-is-trip-agile-is-journey/"/>
    <updated>2014-02-13T11:03:12-08:00</updated>
    <id>http://lifuzu.com/blog/2014/02/13/waterfall-is-trip-agile-is-journey</id>
    <content type="html"><![CDATA[<p>原文地址：<a href="http://theadaptivepm.wordpress.com/2013/09/10/if-waterfall-is-a-trip-then-agile-is-a-journey/">http://theadaptivepm.wordpress.com/2013/09/10/if-waterfall-is-a-trip-then-agile-is-a-journey/</a>
<img src="http://cdn.moj.managementisajourney.com/wp-content/uploads/2013/04/Road-Journey.jpg" alt="road journey" />
一个项目就像是从一个海岸前往另一个海岸开车的旅程。很少有一些比喻能这样形象地表示瀑布/传统和敏捷项目管理方法之间的意识形态差异。</p>

<!--more-->


<p>对于一个瀑布/传统项目，主要关注的是如何在时间和预算下到达目的地（仅仅那个目标）。因此，此行的每一步都在计划中详细列出，在行程开始前，酒店要预订，地图要标记，车子要准备等等。每天行驶的距离和地图上的标记进行比较，以校验进度。各天花费的金额与项目的预算进行比较，以确保成本是在容许的范围内，等等。而此行程组织者的任务是确保在过程中这两个指标没有偏离预定的轨道。</p>

<p>听起来并没有很多的乐趣，试图驾驶横越全国并坚持预计的行程计划，同时处理势必会发生的这样那样无数的问题，并纠正偏差就已经让人神经崩溃，真的！然而，对那些经常旅行的人（如卡车司机），通过标准化和可重复性使效率最高是首选策略。</p>

<p>相比之下，一个敏捷项目中，虽然目的是重要的，但在旅途中所学到的东西也是很重要的。因此，一个敏捷项目可能有固定的预算和时间的限制，留给旅游团队来决定每天从A点到B点最好的路程，在给定的时间和预算范围内。如果这是以前做过旅行的团队的第一次尝试 &ndash; 作为产品开发的副产品 &ndash; 显得尤为重要。</p>

<p>把执行项目看作为一个旅程，而不是出差可以允许很多事情发生。首先，我们都知道，一个漫长的行程从来没有按计划进行的。轮胎爆掉，汽车故障，道路封闭，绕路，还有其他许多的干扰都会在前进的道路显现出来。因此，让团队根据当前行驶状况进行预测和调整行程是一个更现实的总体行程。其次，如果团队进展比原计划提前，或者他们觉得学习对于旅途取得全面成功有利，团队可以决定绕道而行，沿途观看景点和获得经验，这些都不是最初设想作为计划的一部分。第三，踏上旅途，比按照预先计划好的行程更有趣和有参与感，这有助于保持团队合作精神和完善结果。最后，如果团队 &ndash; 与旅程的老板 &ndash; 认识到有一个不同的但比之前预想的更好的目的地，那就是此行的一个完全可以接受的结果，只要目的符合旅行的宗旨（和合理的费用） 。</p>

<p>这并不是说一个旅程不会完成沿途的重要里程碑，或者说团队因为他们认为合适就可能改变目的地。即使是家庭度假也会有一定的约束和指标。然而，通过将尽可能多的价值放在成功到达目的地的同时，在旅程中取得经验，一个项目很可能会产生一个至少与最初提出的交付物同样重要的：一个踊跃参与和高度活力的团队，这将大大激励下一次的旅程！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raft - Distributed Consensus Protocol]]></title>
    <link href="http://lifuzu.com/blog/2014/01/25/raft-distributed-consensus-protocol/"/>
    <updated>2014-01-25T11:52:13-08:00</updated>
    <id>http://lifuzu.com/blog/2014/01/25/raft-distributed-consensus-protocol</id>
    <content type="html"><![CDATA[<p>Rafe is a distributed consensus protocol, which allows a collection of processes to maintain consistency even in the face of multiple node failure. The two main tenants of the protocol are leader election and log replication.</p>

<!-- more -->


<h3>Learn Notes</h3>

<h4>Raft &ndash; Distributed Consensus</h4>

<ul>
<li>State

<ul>
<li>Follower

<ul>
<li>up to Candidate, if it can&rsquo;t hear from leader (i.e. stop receiving heartbeats)</li>
<li>all nodes initial state</li>
</ul>
</li>
<li>Condidate

<ul>
<li>up to Leader, if it gets votes from a majority of nodes</li>
<li>down to Follower, if it gets &ldquo;Request Vote&rdquo;</li>
</ul>
</li>
<li>Leader

<ul>
<li>down to follower, when it sees the higher election term</li>
<li>all changes to the system go through the leader</li>
<li>only one in a system</li>
</ul>
</li>
</ul>
</li>
<li>Activity

<ul>
<li>Leader Election

<ul>
<li>1. send &lsquo;Request Vote&rsquo; by Candidate</li>
<li>2. if the receiving node hasn&rsquo;t voted yet in this term then it votes for the candidate</li>
<li>3. then the node resets its election timeout</li>
<li>4. once a candidate has a majority of votes</li>
<li>5. it becomes leader</li>
</ul>
</li>
<li>Log Replication

<ul>
<li>1. a client send a change to the leader</li>
<li>2. the change is appended to the leader&rsquo;s log, uncommited</li>
<li>3. the change is sent/replicate to the followers on the next heartbeat</li>
<li>4. an entry is committed on leader once a majority of followers acknowledge it</li>
<li>5. the leader notifies the followers than the entry is committed</li>
<li>6. a response is sent to the client</li>
</ul>
</li>
</ul>
</li>
<li>Message

<ul>
<li>Append Entries

<ul>
<li>Original from Leader</li>
<li>Respond by Followers</li>
<li>In a intervals specified by the heartbeat timeout</li>
</ul>
</li>
<li>Request Vote

<ul>
<li>Original from Candidate</li>
<li>Votes by the receiving nodes (one for each node, at same term)</li>
<li>Immediately</li>
</ul>
</li>
</ul>
</li>
<li>Timeout

<ul>
<li>Election Timeout

<ul>
<li>the amount of time a follower waits until becoming a candidate</li>
<li>randomized to be between 150ms and 300ms</li>
<li>doesn&rsquo;t occur on Leader</li>
</ul>
</li>
<li>Heatbeat Timeout

<ul>
<li>should be shorter than Election Timeout</li>
<li>occurs on all nodes</li>
</ul>
</li>
</ul>
</li>
<li>Guarantee

<ul>
<li>because: requiring a majority of votes</li>
<li>only one leader can be elected per term</li>
</ul>
</li>
</ul>


<h3>JSON expression</h3>

<p>Here is a json, try to express the node to communicate with Raft protocol:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;message_type&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s2">&quot;REQUEST_VOTE&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;VOTE&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;APPEND_ENTRIES&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;RESPOND_to_append_entries&quot;</span>
</span><span class='line'>  <span class="p">],</span>
</span><span class='line'>  <span class="nt">&quot;heartbeat&quot;</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;election&quot;</span><span class="p">:</span> <span class="s2">&quot;random_time(150-300ms)&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;random_string&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;state&quot;</span><span class="p">:</span> <span class="s2">&quot;follower&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;send_message&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;to&quot;</span><span class="p">:</span> <span class="s2">&quot;who&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;message_type&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;reset_timeout&quot;</span><span class="p">:</span> <span class="s2">&quot;timeout_type: heartbeat|election&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;stop_election&quot;</span><span class="p">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;leader&quot;</span><span class="p">:</span> <span class="s2">&quot;who&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;no&quot;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;vote_count&quot;</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Reference:</h3>

<ol>
<li><a href="https://ramcloud.stanford.edu/wiki/download/attachments/11370504/raft.pdf">https://ramcloud.stanford.edu/wiki/download/attachments/11370504/raft.pdf</a></li>
<li><a href="http://thesecretlivesofdata.com/raft/">http://thesecretlivesofdata.com/raft/</a></li>
</ol>


<blockquote><p>Supported by <a href="http://sourceforge.net/projects/freeplane/">FreePlane</a>, a great mind map editor.
Supported by <a href="http://jsoneditoronline.org/">JSON Editor Online</a>.
Supported by <a href="https://github.com/neocotic/html.md">HTML to MD</a>.
Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[产品设计冲刺：为期五天的创业配方]]></title>
    <link href="http://lifuzu.com/blog/2014/01/22/produc-design-sprint/"/>
    <updated>2014-01-22T22:31:40-08:00</updated>
    <id>http://lifuzu.com/blog/2014/01/22/produc-design-sprint</id>
    <content type="html"><![CDATA[<p>原文地址：<a href="http://www.designstaff.org/articles/product-design-sprint-2012-10-02.html">http://www.designstaff.org/articles/product-design-sprint-2012-10-02.html</a></p>

<p>在谷歌风险投资公司，我们每天都与创业公司做产品设计工作。由于我们行动迅速 ，他们也希望能迅速行动，我们优化了一些过程，可以让我们在五天以内见到良好的效果。我们把它叫做一个产品设计的冲刺，这个相当不错，它可以让你不再抓狂并加速已经进行中的项目。</p>

<p>我已经策划并运行了40几个这样的冲刺，先是在谷歌内部的团队，现在在谷歌风险投资公司投资的一些初创公司。给你一个直观的样子，这里是我们与<a href="http://custommade.com/">CustomMade</a>做了一个项目：</p>

<iframe width="560" height="315" src="http://lifuzu.com//www.youtube.com/embed/qvdO0G4uQgc" frameborder="0" allowfullscreen></iframe>




<!-- more -->


<hr />

<p>在接下来的几个帖子，我将分享一个DIY指南，你可以运行你自己的设计冲刺。</p>

<p><a href="http://www.designstaff.org/articles/product-design-sprint-2-2012-10-09.html">冲刺前：准备</a>
获取你需要的人和事物。</p>

<p><a href="http://www.designstaff.org/articles/product-design-sprint-day-1-understand-2012-10-16.html">第1天：了解</a>
通过研究，竞争审查，战略演习，深入到设计问题。</p>

<p><a href="http://www.designstaff.org/articles/product-design-sprint-day-2-diverge-2012-10-26.html">第2天：发散</a>
迅速获取尽可能多的解决方案。</p>

<p><a href="http://www.designstaff.org/articles/product-design-sprint-day-3-decide-2012-11-20.html">第3天：确定</a>
选择最好的想法，构想出一个用户的故事。</p>

<p><a href="http://www.designstaff.org/articles/product-design-sprint-day-4-prototype-2013-01-07.html">第4天：原型</a>
建立一个快速和不需要整洁的原型，展示给用户。</p>

<p><a href="http://www.designstaff.org/articles/product-design-sprint-day-5-validate-2013-03-07.html">第5天：验证</a>
展示原型到真实使用的人群（换句话说，你的公司之外的人），看看什么行得通，什么行不通。</p>

<hr />

<p>如果你之前已经听说过这个模型，好吧，你是对的。它基于由<a href="http://www.ideo.com/">IDEO</a>公司及<a href="http://dschool.stanford.edu/">斯坦福大学的设计学院</a>倡导的<a href="http://en.wikipedia.org/wiki/Design_thinking">设计思维</a>结构。不过，在过去的几年里，我做过一些过程的尝试和调整。我要分享的版本对初创公司效果特别好。</p>

<h3>头脑风暴不起什么作用</h3>

<p>我有很长时间对过程痴迷。几年前，我在谷歌尝试开始了产品设计过程。起初我召开集思广益研讨会，灵感来自<a href="http://blogs.hbr.org/cs/2012/09/the_secret_phrase_top_innovato.html">IDEO的方法</a>。</p>

<p>小组集思广益，每个人都想出来想法，是一个很大的乐趣。研讨会结束时，我们会很疲倦，但精神状态很好，我们自豪地拥有一大堆的即时贴。但是，我们想出来的新的想法并没有到任何地方去。这并不是说我们想出来的是愚蠢的想法 &ndash; 实际上大多数的想法是相当不错的。可是偏偏，从别的地方来会得到更好的想法。但是在哪儿呢？</p>

<p>根据我的经验，最成功的创意往往来自于个人，而不是群体。这些想法是一些个人埋头工作得到的。我意识到这一点之前，我召开了很多的研讨会，所以如果它从一开始对你而言似乎很明显，我希望你就跳过这章。</p>

<p>更糟糕的是，我的研讨班以协商一致的方式选择获胜的想法。但共识并不总是挑大胆的创意，独特的创意，或与设计完整性的想法。共识趋向于妥协。</p>

<p>当然，还有很多好东西，在研讨会正在运用：聚焦团队在一个项目上，审议一系列的想法，而不只是一个，致力于用纸收集想法，等等。但我还是觉得我的方法从根本上有缺陷。我是通过集思广益得到好的但未必是伟大的想法，然后通过协商一致选择获奖者。我知道，这不工作，而是在那时，我不知道该怎么办好。</p>

<h3>约束的神奇之处</h3>

<p>有一天，在我自己的设计项目中，我发现了一些事情。最好的工作发生在短时间，特别是要有一个期限。</p>

<p>其中一个例子是Gmail的优先收件箱，我们度过了四个星期，试验不同的设计原型。有数百内部测试用户签署了协议，每个星期去尝试新的实验版本，所以我必须迅速采取动作。四个星期之后，我想通了这个事情的来龙去脉，并保持单兵奋战几个月。</p>

<p>另一个例子是成为Google+视频群聊的项目。它开始只作为一个副项目，由斯德哥尔摩办公室的2个Google员工发起。我只是参观了两天，然后我尽量快地设计，最后，我们有了一个工作原型，我们可以开始用它来召开我们的团队会议。</p>

<p>在这两种情况下，我的工作更有效率，比我以往任何时候都好，无论是正常地一天一天的例行工作或任何我的头脑风暴研讨会。那么有什么不同呢？我用时间去关注和开发我自己的想法，而不是叫喊和袖手旁观，就像我在一个小组集体讨论那样。</p>

<p>但我仍然没有太多时间。我负担不了过多地想法或陷入紧急但不重要的问题，这是我经常在正常工作日做的样子。其他人，我找来帮助我地 &ndash; 工程师和产品经理 &ndash; 也都聚焦于这个项目。</p>

<p>神奇的东西就是一个紧迫的时间限制下的单独的工作，原型化和快速的用户反馈。</p>

<h3>调整IDEO式的研讨，适应谷歌工作</h3>

<p>我决定尝试把IDEO风格的“怎么我们才能可能”研讨会联系起来，以几天不间断的时间进行设计，执行最好的想法。在这第一个冲刺中，设计师Jason Cornwell粗粗加工的想法就成为<a href="http://gmailblog.blogspot.com/2011/05/introducing-people-widget.html">Gmail人群小工具</a>。我知道我是在正确的轨道上。</p>

<p>我在谷歌把全部时间用来关注各个团队运行的设计冲刺。我从组创意切换到个人的想法，给人们更多的时间开发这些想法，然后获得反馈。我尝试了一堆批评和决策的练习，不依赖于共识，并且还选择少量的一些效果最好的。</p>

<p>我得到了很多的实践：我在谷歌从一个团队跳到另一个团队，几天或一周的时间，领导了像Chrome浏览器，谷歌广告，电子商务，应用程序，搜索和谷歌X的冲刺。真是令人兴奋。该设计被推广，许多团队开始在自己内部尝试运行。</p>

<h3>速度快10倍：在初创公司运行设计冲刺</h3>

<p>当我加入谷歌风险投资公司，我想我有了全部的计划好的冲刺。但我很快就意识到我仍然有很多东西要学习。这个过程必须改变以反映像谷歌这样的一家大公司，与我们投资组成的初创公司之间的差异。例如，在谷歌，很容易抓到三个或四个设计师在一起设计几天。在初创公司，他们可能会幸运地有一个。因此，我们需要设计和修正流程，让工程师和CEO们能购轻易地做到，就像设计师做的那样。</p>

<p>初创公司希望很快得到他们的产品，然后学习怎么工作，但那样需要昂贵的付出 &ndash; 你必须编写更多的代码，修复更多的Bug，并处理比用原型更多的问题。因此，我们进一步压缩了冲刺周期，以使公司更快地得到反馈。我赞成快速和粗糙<a href="http://keynotopia.com/guides/">主题原型</a>，不喜欢需要打磨的的Photoshop实体模型。迈克尔·马戈利斯用他的<a href="http://www.designstaff.org/articles/rapid-user-research-2012-09-19.html">快如闪电</a>的<a href="http://www.designstaff.org/articles/recruiting-how-to-find-great-participants-for-your-user-study-2012-02-22.html">研究</a><a href="http://www.designstaff.org/articles/get-better-data-from-user-studies-interviewing-tips-2012-03-07.html">技术</a>，帮我们得到隔天的反馈。</p>

<p>我们还在学习，但是我们已经运行足够冲刺，这使我们有信心知道这个过程会运作良好。</p>

<p>请继续关注本系列，并且请给我们你的想法 &ndash; 我一直在寻找更多的技巧来改善我们现在做的事情。你用什么流程获得了良好的设计效果？有什么可以帮助您的公司先人一步？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[产品设计Sprint]]></title>
    <link href="http://lifuzu.com/blog/2014/01/21/product-design-sprint/"/>
    <updated>2014-01-21T11:22:14-08:00</updated>
    <id>http://lifuzu.com/blog/2014/01/21/product-design-sprint</id>
    <content type="html"><![CDATA[<p>原文地址：<a href="http://robots.thoughtbot.com/the-product-design-sprint">http://robots.thoughtbot.com/the-product-design-sprint</a></p>

<p>产品设计Sprint是一个5个阶段的演习，使用设计思维，减少内在风险，把产品成功推向市场。到目前为止，我们已经做了六大产品的设计Sprint，并使得他们成为我们咨询活动预设的一部分。</p>

<p>参加一个以设计Sprint为定向的团队，旨在努力达成明确清晰的目标。开始一个新的功能，工作流程，产品，业务或解决一个现有产品的问题，Sprint都是有用的出发点。</p>

<p>集设计Sprint和设计思想到我们的产品开发过程中，使我们与我们的目标保持一致，并帮助我们明智地投资我们的时间和金钱。</p>

<h3>设计思想</h3>

<p><a href="http://en.wikipedia.org/wiki/Design_thinking">设计思想</a>结合换位思考，创造力和理性来解决以人为本的问题。它是设计Sprint建立的基础。</p>

<h4>换位思考</h4>

<p>有了设计思想，我们用换位思考的方法，通过我们客户的眼睛看世界，了解他们碰到的问题。这些问题可能涉及到技术，金融，政治，宗教，人，社会和文化等等。我们的工作就是要全面地理解这些问题，在一个更适用的环境下，开发出一套强化的、脉络清晰的架构。</p>

<p>除了从我们自己的角度，我们的目标是尽可能多地理解其他人的观点，以更好地使我们的理解多元化。</p>

<p>换位思考是第1阶段（理解）的首要重点和第5阶段（测试和学习）的主要部分。我们的目标应该是为人类解决问题和制造产品，要始终保持换位思考。</p>

<h4>创造力</h4>

<p>创意是机会的发现。我们运用创造力来产生洞察力和解决方案的概念。</p>

<p>最有创意的解决方案是由独到的见解和交叉的视角启发的。换位思考，如上所述，让我们具有理解不同的观点和更具创造性的能力。</p>

<p>合作激发创造力。更多的观点，想法和见解导致更多的机会。</p>

<p>创意是第2阶段（发散）的焦点，但存在于所有阶段（开发原型，测试/面试，研究/观察，创造实验等）</p>

<h4>理性</h4>

<p>我们使用理性，通过实验，测试和定性/定量的测量，以找到适应问题背景的解决方案。这是第3阶段（汇流）和第5阶段（测试和学习）的主要焦点。</p>

<p>设计思想也应该渗透我们所有的设计Sprint过程中，从工程设计到营销到业务发展。在复杂的商业生态系统中，设计思想可以作为一种全面的方法来促进和维护与客户的共生关系。</p>

<!-- more -->


<h4>Sprint阶段</h4>

<p>一个典型的项目开始的Sprint的长度为5天，每一天代表一个不同的阶段。</p>

<p>这个时间表不是刚性的，要适应问题的特定需求。例如，某些阶段可能需要超过一整天的时间而其他可能需要较少。</p>

<p>其目的是把开发一个产品或功能的想法变成一个原型，可以进行测试，以帮助我们弥补我们风险最大的知识空白，有效或无效我们风险最大的假设，并指导今后的工作。
<img src="http://robots.thoughtbot.com/images/the-product-design-sprint/sprint-phases.png" alt="Sprint Phase" /></p>

<h5>阶段1：理解</h5>

<p><strong>目标</strong></p>

<p>建立一个工作背景的共识，包括问题，业务，客户，价值主张，以及如何定义成功。</p>

<p>这一阶段的结束，我们也希望能够发现一些最大的风险，并开始制定计划来减少他们。</p>

<p><strong>原因</strong></p>

<p>共同的理解，授权每个人的决策和对项目的贡献。</p>

<p>了解我们的风险，使我们能够规避风险，并避免投入时间和金钱到那些未知或假设的东西上。</p>

<p><strong>活动</strong></p>

<ul>
<li>定义商业机会。</li>
<li>定义客户。</li>
<li>定义问题。</li>
<li>定义价值主张（为什么人们会支付你？）。</li>
<li>定义特定于上下文的术语（这将作为一个字典）。</li>
<li>讨论短期和长期业务目标（前景是什么？）。</li>
<li>收集和分析现有的研究。</li>
<li>填写商业模式蓝图（这应该要不断地重新审议）。</li>
<li>分析我们的竞争产品。</li>
<li>收集其他人士/产品解决相似或类似问题的灵感和翔实的例子。</li>
<li>如果有一个现有的网站/应用程序，绘制出的界面。</li>
<li>当他们提出讨论，在墙上或用即时贴在板上捕获假设和未知。以后我们可以重温这堵墙，把相关项目组织在一起，制定计划，消除未知的风险和解决风险的假设。</li>
</ul>


<p>所有这些定义都有望改变，因为我们不断向前发展，并会了解更多。</p>

<p><strong>交付物</strong></p>

<ul>
<li>笔记和文档，记录我们整天讨论的定义和目标。这些笔记应提供一个可靠的参考，并能帮助后来入职的同事。</li>
<li>一个发起下一阶段Sprint的计划。</li>
</ul>


<h5>阶段2：发散</h5>

<p><strong>目标</strong></p>

<p>产生见解和可能的解决方案，以解决我们客户的问题。</p>

<p>探索解决问题的尽可能多的方式，不管如何是否现实，可行的，或者可用的。</p>

<p><strong>原因</strong></p>

<p>这个阶段产生的机会，使我们能够评估并合理消除选项，并识别潜在的可行的解决方案，以向前迈进。这一阶段对创新和市场细分也是至关重要的。</p>

<p><strong>活动</strong></p>

<ul>
<li>不断地问，“我们这样，可能会怎样&hellip;&hellip;”。</li>
<li>产生，发展和交流新的想法。</li>
<li>快速迭代的单个草图。</li>
<li>组织草图在白板上。</li>
<li>思维导图，单独地，并／或者作为一个组。</li>
</ul>


<p><strong>交付物</strong></p>

<ul>
<li><p><em>关键路径图</em>：突出了故事中最关键的手边的难题。你的客户在哪里开始，在哪里他们应该结束了，一路上什么需要做什么？
<img src="http://robots.thoughtbot.com/images/the-product-design-sprint/criticalpath.jpg" alt="" /></p></li>
<li><p><em>原型目标</em>：我们想更多地了解什么？哪些假设我们需要搞清楚？</p></li>
</ul>


<h5>阶段3：汇集</h5>

<p><strong>目标</strong></p>

<p>落实在阶段1和2找出的一切可能性，消除了胡乱和目前不可行的想法，并磨练我们感觉最好的想法。</p>

<p>这些想法将引导阶段4原型的实施，并将与现有或潜在客户进行测试。</p>

<p><strong>原因</strong></p>

<p>不是每一个想法是可操作的或者是可行的，只有小部分能适应形势和问题的背景。探索许多替代解决方案有助于提高我们朝着正确的方向前进的信心。</p>

<p><strong>活动</strong></p>

<ul>
<li>确定思路，旨在以不同的方式解决同样的问题。</li>
<li>消除不能目前实行的解决办法。</li>
<li>投票支持好点子。</li>
<li>用故事情节表达的核心客户流。这可能是工作流或故事（从客户的角度来看），客户如何参与、了解并变得有动力来购买或使用某种产品或服务。</li>
</ul>


<p><strong>交付物</strong></p>

<ul>
<li><p><em>原型故事板</em>：一本漫画书风格的故事，移动客户通过前面定义的关键路径。故事情节是蓝图的原型，原型将在第4阶段创建。
<img src="http://robots.thoughtbot.com/images/the-product-design-sprint/storyboard.jpg" alt="" /></p></li>
<li><p><em>假设表</em>：一个列表包含所有内在的原型的假设，以及我们计划如何测试它们，验证这些假设的预期结果。
<img src="http://robots.thoughtbot.com/images/the-product-design-sprint/assumptions.jpg" alt="" /></p></li>
</ul>


<h5>阶段4：原型</h5>

<p><strong>目标</strong></p>

<p>建立一个原型，可以与现有或潜在客户进行测试。</p>

<p>设计原型来了解特定的未知和假设。其介质应当由时间以及学习目标来确定。纸，主题演讲，以及简单的HTML/ CSS等都是不错的原型媒体。</p>

<p>原型故事板和前三个阶段的Sprint应该使原型建设相当直截了当。不应该有什么导致很大的不确定性。</p>

<p><strong>原因</strong></p>

<p>原型是获得关于产品需要成为什么这一有价值的见解的一种非常低成本的方式。一旦我们知道什么可行，什么不可行，我们可以自信地投入时间和金钱，更长久地实施。</p>

<p><strong>活动</strong></p>

<ul>
<li>原型实现</li>
</ul>


<p><strong>交付物</strong></p>

<ul>
<li>可测试的原型。</li>
<li>一个测试计划。如果我们正在测试工作流程，我们也应该有一份结果列表，我们可以邀请我们的测试人员，一起参与实现我们的原型。</li>
</ul>


<h5>阶段5：测试与学习</h5>

<p><strong>目标</strong></p>

<p>与现有或潜在的客户一起测试原型。</p>

<p>与现有或潜在的客户来一起测试是重要的，因为他们是想要你的产品为他们工作，并带给他们价值的人。他们经历的问题和背景知识会影响您的产品与他们的交互，不是客户不会有。</p>

<p><strong>原因</strong></p>

<p>你的客户会告诉你他们所需要的产品。测试我们的想法可以帮助我们更多地了解我们以前知之甚少的事情，并让我们更清晰地了解哪些方向我们应该接下来进入。它也可以帮助我们纠正过程和避免制造错误的产品。</p>

<p><strong>活动</strong></p>

<ul>
<li>在客户与原型交互的时候，观察客户，和客户交谈。</li>
<li>在客户与竞争对手的产品进行互动的时候，观察客户，和客户交谈。</li>
</ul>


<p><strong>交付物</strong>
&ndash; 从我们的测试原型中收获的经验和教训的总结/报告。
&ndash; 一个超出了设计Sprint的发展计划。</p>

<h4>结束</h4>

<p>我们的产品设计Sprint过程已经被IDEO的<a href="http://www.ideo.com/work/human-centered-design-toolkit/">以人为本的设计工具包</a>和谷歌风投的<a href="http://www.designstaff.org/articles/product-design-sprint-2012-10-02.html">一系列博客文章</a>隆重通报，我们很感谢他们共享的信息。</p>

<p>我们希望我们做的工作对世界有正面影响。我们的目标不仅是制造“一个”的产品，而是要打造“正确”的产品。一个有意义的产品，真正满足人们的需求，并能够支持一个可行的业务。</p>

<p>我们认为，产品设计的Sprint和设计思想将帮助我们带来更多成功的产品和企业市场。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何成为一个伟大的开发者]]></title>
    <link href="http://lifuzu.com/blog/2014/01/19/be-a-great-developer/"/>
    <updated>2014-01-19T23:16:58-08:00</updated>
    <id>http://lifuzu.com/blog/2014/01/19/be-a-great-developer</id>
    <content type="html"><![CDATA[<p>原文地址：<a href="https://the-pastry-box-project.net/ed-finkler/2014-january-6">https://the-pastry-box-project.net/ed-finkler/2014-january-6</a></p>

<ul>
<li><p><a href="http://funkatron.com/posts/empathy-is-our-most-important-attribute.html">同理心</a>是你最重要的技能。把它应用在和你接触、或者和你的工作接触的每一个人身上。</p></li>
<li><p>谦卑与同理心携手并进。对你可能是错误的，保持开放的心态（甚至只是似然可能）。要知道，你将永远保持学习和提高。接受并立刻修改错误。</p></li>
<li><p>你越少怕做错，你越有信心。很多事情你都会错。你很少知道大多数的事情。其他人和你完全一样。拥抱它。不断学习，总是质疑，不断适应和成长。</p></li>
<li><p>知道你能做好什么，做不好什么。</p></li>
<li><p>如果你有一份喜欢的工作，而且收入不错，要懂得幸运。我们生活的这个时期，对开发者的需求超过了供给。不是所有人都这么幸运。</p></li>
<li><p>拒绝参与团伙。我们是社会性的动物，作为一个群组的一部分给了我们信心，但技术选择的战争会分散我们信心，让我们不能良好的工作和锻炼同理心。建立与我们有共同点的社区，拥抱让我们每个人有特点的多样性。使那些有兴趣参与的人感到安全、舒适。</p></li>
<li><p>使用你的技能，让人们的生活更好。</p></li>
<li><p>不要担心有多少人使用你做的东西。能帮助5个人都是令人难以置信。他们会记住你为他们做了什么。</p></li>
<li><p>让你周围的社区更好。你不需要去一些科技天才的魔术城去找重要的工作去做。你在哪里不要紧 &ndash; 重要的是你要在你生活的周围作出不同。现在是互联网，所以“在你身边”的人可能是在世界的另一边。</p></li>
<li><p>与你周围的人分享你学到的东西。请他们和你分享他们所学到的。</p></li>
<li><p>您选择技术和工艺，仅此而已，别人关心你做给他们的东西。作为一个音乐家，我看到很多人有很好的工具、喜欢争论设备，但很少人能完成一首歌曲。</p></li>
<li><p>极度怀疑地检视绝对声明。</p></li>
<li><p>如果没有健全的、合理的说法，放弃一项技术是懒惰的，而且容易出错。</p></li>
<li><p>要很小心参与X与Y的论战。他们很少值得你花时间。</p></li>
<li><p>学习新的技术和方法，要放轻松。保守地使用它们。</p></li>
<li><p>每星期拨出一点时间来了解新技术。甚至只是订阅每周聚集的通讯（如每周的（PHP|Python|JavaScript|等））可以引发对很酷的新事物的探索。</p></li>
<li><p>如果你去参加会议（你应该如果可以的话），尽量参加一两次你完全没有经验的技术会谈。找些你从来没有学过的一门语言，或者你完全没有经验的平台的初学者/介绍级演讲。即使你从来没有在生产中使用它，接触到不同的方法和技巧将使你成为一个更好的开发者。</p></li>
<li><p>任何技术都可以是正确的选择，这取决于项目的需求和团队的优势。</p></li>
<li><p>永远不要假设你知道做决定的原因，除非做这个决定的时候你在房间里。</p></li>
<li><p>始终牢记两组人：用户和你的团队的其他成员。他们是受你做出的决定影响的人。</p></li>
<li><p>沟通不畅会扼杀最有天赋的球队的效率。在有效的、结构化的沟通和文档下功夫。</p></li>
<li><p>对大家保持忠诚。不是品牌，不是公司，也不是技术。</p></li>
</ul>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Thoughs About Alias Settings in .bashrc]]></title>
    <link href="http://lifuzu.com/blog/2014/01/13/thoughs-about-alias-in-bashrc/"/>
    <updated>2014-01-13T21:24:27-08:00</updated>
    <id>http://lifuzu.com/blog/2014/01/13/thoughs-about-alias-in-bashrc</id>
    <content type="html"><![CDATA[<p>Sometimes, when we install a package, just as, tomcat, we need to append some lines in .bashrc to add and export the tomcat/bin in the system PATH, then source the entire .bashrc to enable it. It is some a little risky (when you forget append $PATH, :) ) and painful, especially when we try to automate the installation process.</p>

<p>When we have several machines, we always need to synchronize the .bashrc file among them. I hate to copy them when I have more than 3 boxes.</p>

<p>Then I have the below thoughs to simplify it, with a github repository. Of course, you don&rsquo;t need do these things manually again, Just try to clone the github repo at the bottom of this article.</p>

<p><strong>1</strong>. We can create a folder, name it as:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/.bashrc.d/
</span></code></pre></td></tr></table></div></figure>


<blockquote><p>inspired by rc.d, init.d, conf.d etc;</p></blockquote>

<p><strong>2</strong>. We create some files under the folder, name them as:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>~/.bashrc.d/linux/git.alias.bash
</span><span class='line'>~/.bashrc.d/linux/java.path.bash
</span><span class='line'>~/.bashrc.d/linux/editor.bash
</span></code></pre></td></tr></table></div></figure>


<p><strong>3</strong>. We add an entry point into ~/.bashrc:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">OS</span><span class="o">=</span><span class="k">$(</span> uname | tr <span class="s1">&#39;[:upper:]&#39;</span> <span class="s1">&#39;[:lower:]&#39;</span><span class="k">)</span>
</span><span class='line'><span class="k">if</span> <span class="o">[</span> -d <span class="nv">$HOME</span>/.bashrc.d <span class="o">]</span>; <span class="k">then</span>
</span><span class='line'><span class="k">  for </span>SCRIPT in <span class="k">$(</span> ls <span class="nv">$HOME</span>/.bashrc.d/<span class="k">${</span><span class="nv">OS</span><span class="k">}</span>/* <span class="k">)</span>; <span class="k">do</span>
</span><span class='line'>    . <span class="k">${</span><span class="nv">SCRIPT</span><span class="k">}</span>
</span><span class='line'>  <span class="k">done</span>
</span><span class='line'><span class="k">fi</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>4</strong>. Then we run the source command to enable them:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">source</span> ~/.bashrc
</span></code></pre></td></tr></table></div></figure>


<p><strong>5</strong>. Done!</p>

<p>Here is the repository:</p>

<p><a href="https://github.com/lifuzu/bashrc.d.git">https://github.com/lifuzu/bashrc.d.git</a></p>

<p>Run the command to clone it, fork it, and enjoy!</p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2014年要火的开发技术（二）]]></title>
    <link href="http://lifuzu.com/blog/2014/01/10/dev-tech-hot-2004-2/"/>
    <updated>2014-01-10T21:33:11-08:00</updated>
    <id>http://lifuzu.com/blog/2014/01/10/dev-tech-hot-2004-2</id>
    <content type="html"><![CDATA[<p>原文地址：<a href="http://java.dzone.com/articles/dev-tech-will-be-hot-2014">http://java.dzone.com/articles/dev-tech-will-be-hot-2014</a></p>

<p>这是第二部分内容，第一部分见<a href="http://lifuzu.com/blog/2014/01/09/dev-tech-hot-2004/">这里</a></p>

<h3>DigitalOcean</h3>

<p><img src="http://java.dzone.com/sites/all/files/digital%20ocean.png" alt="DigitalOcean" /></p>

<p>另一个兴风作浪的云平台是DigitalOcean，它在年初只拥有280台能上网的计算机，但现在却有了490K的网站，<a href="http://css.dzone.com/articles/digitalocean-growth-rate">增长速度比AWS更快</a>。</p>

<p>DigitalOcean以其低廉的价格和高性能，纯SSD的基础设施，作为一个坚固的立足点，继续在IaaS领域攻城掠地。他们智能的，面向开发人员的营销策略将在2014年为他们很好的服务，实际上，在2013年已经证明是有效的。</p>

<!--more-->


<h3>FoundationDB</h3>

<p><img src="http://java.dzone.com/sites/all/files/foundationdb.png" alt="FoundationDB" /></p>

<p>你听说过最新的流行语：<a href="http://java.dzone.com/articles/sql-new-nonosql">NoNoSQL</a>吗？这不是一个玩笑。一些NoSQL的用户也开始意识到，他们不希望尝试重新解决RDBMS多年前已经解决了的问题。在过去一年中，已经出现了显著回迁到关系数据库的潮流，我认为在2014年，纳入一些NoSQL的优势，同时保持关系的范式和ACID事务的数据库将获得显著增长，。</p>

<p>你不要错误地认为是Postgres，而是另外一个伟大的新型数据库应该在明年看到显著收获，这个数据库是FoundationDB。 FoundationDB是一个分布式数据库，它可以在都使用ACID事务的单一数据库中混合和匹配不同的模型。</p>

<h3>Chrome DevTools</h3>

<p><img src="http://java.dzone.com/sites/all/files/chromedevtools.png" alt="Chrome DevTools" /></p>

<p>这一个在Web开发人员已经广泛使用，但在2014年你应该从DevTools期待更厉害的杀手锏。只要看看那些他们已经添加的<a href="http://www.html5rocks.com/en/tutorials/developertools/mobile">远程调试和移动仿真功能</a>就知道了。</p>

<p><a href="http://alistapart.com/author/rmurphey">Rebecca Murphey</a>预测，很快DevTools基本上将成为一个IDE。</p>

<h3>asm.js</h3>

<p><img src="http://java.dzone.com/sites/all/files/asmjs.png" alt="asm.js" /></p>

<p>这是什么东西，让<a href="http://ejohn.org/blog/asmjs-javascript-compile-target">John Resig这么激动</a>？它只是一个工具，它显示了如何<a href="http://www.2ality.com/2013/02/asm-js.html">弥合JavaScript和本地代码之间的差距</a>，使网络应用程序完成以前，不适合使用JavaScript的计算密集型任务。如果你想知道是否“JavaScript的无处不在”是真的可能，那就没有比看<a href="http://asmjs.org/">asm.js</a>更合适的了。</p>

<h3>WebRTC</h3>

<p><img src="http://java.dzone.com/sites/all/files/webrtc.png" alt="WebRTC" /></p>

<p>我当然希望标准机构和浏览器制造商快速移动到<a href="http://www.webrtc.org/">WebRTC</a>。当它赶上并变得更加广泛，实时通信的JavaScript API将会打开的通信应用和网站特征的全新境界，我认为这将在2014年开始发生。做好准备。您的浏览器即将开始跟你说话。</p>

<h3>Web组件和CSS网格布局</h3>

<p><img src="http://java.dzone.com/sites/all/files/w3c.png" alt="Web组件和CSS网格布局" /></p>

<p>这一预测来自<a href="http://www.2ality.com/">Axel Rauschmayer</a>，最好的JavaScript新闻博客那里。首先是新的<a href="http://www.w3.org/TR/components-intro/">Web组件规范</a>，将引入一个组件模型为Web，包括装饰、模板和“<a href="http://www.w3.org/TR/components-intro/#shadow-dom-section">影子DOM</a>”，这听起来非常有用。</p>

<p>然后是<a href="http://dev.w3.org/csswg/css-grid/">CSS网格布局</a>模块，这将引入一个标准的方法，使得CSS能够驱动网格。它只是一个时间问题，实际上，我们已经有这样的东西了。正如你们许多人都知道，我们已经可以通过CSS框架得到CSS网格。</p>

<h3>Silex, Composer, and Slim</h3>

<p><img src="http://java.dzone.com/sites/all/files/silex.png" alt="Silex, Composer, and Slim" /></p>

<p>现在PHP的微框架非常火热。当我问<a href="http://www.lornajane.net/">Lorna Mitchell</a>，她在PHP方面的预测时，Lorna Mitchell说了很多。她还谈到<a href="http://getcomposer.org/">Composer</a>，这是一个PHP的依赖管理器，就像Ruby的bundler或者Node.js的NPM。</p>

<p>这些工具已经相当流行，但在2014年Composer，伴随着<a href="http://www.slimframework.com/">Slim</a>或<a href="http://silex.sensiolabs.org/">Silex</a>将可能成为开发PHP Web应用程序的首选工具。</p>

<h3>Pandas and Vincent</h3>

<p><img src="http://java.dzone.com/sites/all/files/pandas.png" alt="Pandas and Vincent" /></p>

<p>在Python的领地，<a href="http://www.mahdiyusuf.com/">Mahdi Yusuf</a>告诉我，两个Python库：<a href="http://pandas.pydata.org/">Pandas</a>和<a href="https://github.com/wrobstory/vincent">Vincent</a>将在2014年蓬勃发展。Pandas是一种数据结构和分析库，在Python社区备受尊敬。Vincent是一个工具，可以帮助您使用Vega可视化语法构建数据可视化。</p>

<p>Mahdi最近录制了一个<a href="https://www.neckbeardrepublic.com/screencasts/pandas-vincent">视频</a>介绍这两种技术，并且他也有一堆其他的视频在<a href="https://www.neckbeardrepublic.com/">Neckbeard Republic</a>，以提高你的Python技能。</p>

<h3>SignalR 2.0</h3>

<p><img src="http://java.dzone.com/sites/all/files/signalr.png" alt="SignalR 2.0" /></p>

<p><a href="http://blog.filipekberg.se/">Filip Ekberg</a>给.NET的读者一个建议。 SignalR的下一个主要的迭代版本已经发布了。因为它比较成熟，一定能在.NET社区找到更多的采用者。</p>

<p>SignalR是一个简化添加实时功能的Web应用程序的工具。你可以在<a href="http://www.asp.net/signalr/overview/signalr-20/getting-started-with-signalr-20/tutorial-getting-started-with-signalr-20">本教程</a>中熟悉SignalR2.0。</p>

<h3>CocoaPods和ReactiveCocoa</h3>

<p><img src="http://java.dzone.com/sites/all/files/cocoapods.png" alt="CocoaPods和ReactiveCocoa" /></p>

<p><a href="http://www.alexcurylo.com/blog/">Alex Curylo</a>给了我他在iOS的发展方面的预测。没有犹豫，他预测<a href="http://cocoapods.org/">CocoaPods</a>将占到主导地位。 CocoaPods又是我们的名单上的另一个依赖管理器（我看到了一个趋势。），和Alex不是唯一一个喜欢这个工具的。约翰·布兰科，另一DZONE的iOS MVB，现在正在他的所有项目使用它，这里是<a href="http://java.dzone.com/articles/concise-introduction-cocoapods">他对CocoPods的简单介绍</a>。</p>

<p>Alex还提到<a href="https://github.com/ReactiveCocoa/ReactiveCocoa">ReactiveCocoa</a>，一种<a href="http://en.wikipedia.org/wiki/Functional_reactive_programming">功能反应编程</a>框架，声称“提供的API能编写和转化价值流。”</p>

<h3>离线优先开发</h3>

<p><img src="http://java.dzone.com/sites/all/files/offlinejs.png" alt="离线优先开发" /></p>

<p>一年之前，移动优先发展是设计和UX的社区的焦点话题。我相信，在web开发中的下一个主要范式将是<a href="http://alistapart.com/article/offline-first">离线优先开发</a>。</p>

<p>像<a href="http://github.hubspot.com/offline/docs/welcome">Offline.js</a>这样的工具已经开始帮助开发人员开发离线优先的Web应用程序。作为用户，我想大家都明白，如果在2014年，更多的网站开始使用离线优先的开发方法的话，那还是多么棒的事。</p>

<p>看起来我已经在这个列表中提及了约31件事。如果其中任何一个适用于您的开发生态系统，一定要仔细看看，如果你还没有的话。</p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2014年要火的开发技术（一）]]></title>
    <link href="http://lifuzu.com/blog/2014/01/09/dev-tech-hot-2004/"/>
    <updated>2014-01-09T23:19:52-08:00</updated>
    <id>http://lifuzu.com/blog/2014/01/09/dev-tech-hot-2004</id>
    <content type="html"><![CDATA[<p>原文地址：<a href="http://java.dzone.com/articles/dev-tech-will-be-hot-2014">http://java.dzone.com/articles/dev-tech-will-be-hot-2014</a></p>

<p>大量的开发工具和技术今年已经采用了，有的已经出现了一段时间，但现在要准备进行大规模应用了。本文列出了30+的开发工具和技术，我认为将在2014年变的壮大。我收集的这些预测，其中一部分预测来自各种生态系统（Python、PHP、JS、Java和NET仅举几例）有影响力的开发者，这些预测应该被归类为他们的。但是，大部分的预测是我的。好吧，我们开始吧！</p>

<h3>Docker</h3>

<p><img src="http://java.dzone.com/sites/all/files/docker.png" alt="Docker" /></p>

<p>只有把头躲在沙子里的开发者没有听说过Docker或发现其超级受欢迎。事实上，它是如此受欢迎，是开源了它的公司，dotCloud，把它更名为Docker，我不经常看到一个公司的主打产品拥抱开源技术那么困难。</p>

<p>Docker是一个应用程序的可移植工具。该容器是轻量级的，与硬件无关，与平台无关。你可以在你的笔记本电脑建立一个，其部署到几乎任何生产环境。这真令人惊讶，这种想法虽然没有什么新意，但似乎Docker是执行便携功能比以前的任何工具，都好的工具。而现在，在它大肆宣传之下，它也有了背后支持的社区了。</p>

<p>我认为，Docker要把自己嵌入到最佳实践的开发和部署方式中，就像几年前Vagrant一样。</p>

<!--more-->


<h3>AngularJS</h3>

<p><img src="http://java.dzone.com/sites/all/files/angular.png" alt="AngularJS" /></p>

<p>这是另一种技术，全面超越了博客空间。它的<a href="http://angularjs.org/">谷歌血统</a>也没有破坏。这可能是开发者是如此渴望尝试的关键原因之一。 Ember.js在很多方面可能更容易，但现在AngularJS的普及与Ember相比，如日中天。</p>

<p>除非学习曲线变得太陡，我认为2014年将看到建立在Web开发社区的AngularJS的主导地位。了解为什么<a href="http://angular-tips.com/blog/2013/08/why-does-angular-dot-js-rock">AngularJS狂飙</a>。</p>

<h3>Ghost</h3>

<p><img src="http://java.dzone.com/sites/all/files/ghost_01.jpg" alt="Ghost" /></p>

<p>反朴归真，被称为“Ghost”的Node.js支持的博客平台已经在今年得到了很多的关注，它甚至刷新了一个博客平台应该如何构造的概念。创办人是前WordPress的UI部门领导，而现在他的任务是要做出一个平台，这个平台聚焦于拥有超极简单界面的博客。任何额外的东西由社区的插件提供。
我认为Ghost应该赶上目前的趋势，那就是：移动优先，简化网络设计，随着这波浪潮的到来，基于Node.js上的JavaScript的开发人员将会有宾至如归的感觉。</p>

<h3>Zurb Foundation 5</h3>

<p><img src="http://java.dzone.com/sites/all/files/foundation.png" alt="Zurb Foundation 5" /></p>

<p>Twitter的Bootstrap可能就是站在老将Zurb Foundation肩膀之上的，又迅速提升到CSS框架图的之上（不是有广告牌图表的CSS框架，但应该有！），但现在<a href="http://foundation.zurb.com/">Foundation</a>正卷土重来。 当开始被所有其他的网站使用时，Twitter的Bootstrap渐渐失去了光泽。我都不能数清楚有多少我看到的“停止使用Twitter的Bootstrap这么多了”的文章。</p>

<p>对于Zurb发布他们的框架而言，这是一个完美的机会，Zurb Foundation 5包括了很多Bootstrap不具备的性能相关的功能。我认为Twitter的Bootstrap可能仍然停留在那里，因为其知名度和易于使用（虽然Foundation也很常容易使用），但Foundation的增长肯定会在2014年超过Bootstrap。</p>

<h3>Grunt/Bower</h3>

<p><img src="http://java.dzone.com/sites/all/files/YEOMAN.png" alt="Grunt/Bower" /></p>

<p>我们还在说前端的东西，但不要担心，我们会谈到各种其他技术，马上。</p>

<p>Addy Osmani的Yeoman软件系统，其中包括Grunt和Bower，正迅速成为任务自动化和包管理的标准，服务于JavaScript系统，现在也支持其他语言。像Grunt，似乎已经是无处不在，但我希望它能进一步扩展到除JavaScript和Ruby之外的其他Web开发社区。</p>

<h3>Discourse</h3>

<p><img src="http://java.dzone.com/sites/all/files/discourse.png" alt="Discourse" /></p>

<p>Jeff Atwood的论坛得到重启，已经公开提供内容大约一年了，我希望他的团队在2014年真的能顺利运营。我已经看到了网上的ruby课程和Heroku采用的<a href="https://discussion.heroku.com/">Discourse平台</a>。一些功能是创新的，但也很直观。我喜欢那样，你可以看到有多少人点击你的主题、收到响应，实时更新和保存场景的功能都是首屈一指的。我希望很快建立和试驾我自己的Discourse论坛。</p>

<p>另外，Discourse团队除了自身的发展，还努力加强整个的Ruby生态系统，真是太棒了。</p>

<h3>Coinbase</h3>

<p><img src="http://java.dzone.com/sites/all/files/coinbase.png" alt="Coinbase" /></p>

<p>我这个月终于买了一些比特币。虽然过程并不快，它确实让我感到安全并有一种直观的用户体验。我购买的网站是<a href="http://coinbase.com/">Coinbase</a>，这个网站提供了比我的银行更多的安全措施！我从来没有见过那么重要的安全功能，高速的性能和出色的设计弥补了它的缺陷。总之，2014年，这个网站将成为是Bitcoin交易的中心。</p>

<h3>Steam Machines</h3>

<p><img src="http://java.dzone.com/sites/all/files/steam.png" alt="Steam Machines" /></p>

<p>不要关心什么Xbox One，不要在乎什么PS4。我在等待<a href="http://store.steampowered.com/livingroom/SteamMachines">这个</a>。Steam Machines上市可能不会如火如荼，要到2015年。但我认为，对于这一游戏机的新战略是要在2014年后期开始严重干扰游戏机市场。该开源操作系统将开创一系列新的定制，我们可以永远告别专有的游戏机了。另外，我有一堆从<a href="https://www.humblebundle.com/">Humble Indie Bundles</a>购买的游戏等待玩耍，想想试着连接他们到一个大电视上就让人高兴。</p>

<h3>Screenhero</h3>

<p><img src="http://java.dzone.com/sites/all/files/screenhero.png" alt="Screenhero" /></p>

<p>每个人都应该在自己的电脑上有一个屏幕共享应用程序。这是一个简单的方法来在很多方面进行合作，但最重要的是在写代码的时候。 <a href="http://screenhero.com/">Screenhero</a>已经开始快速发展，一个月内发布出几个更新了。现在，它的Windows版本和Mac版本一样好，你可以在Mac和PC之间共享屏幕！所有您需要做的只是注意一下键盘上的差异。</p>

<h3>StackEdit</h3>

<p><img src="http://java.dzone.com/sites/all/files/stackedit.png" alt="StackEdit" /></p>

<p><a href="https://stackedit.io">StackEdit</a>是，把手放下，我曾经使用过（也可能是我曾经使用过的最好的创作软件）的最好Markdown编辑器。令人惊奇的是，它是一个完全开放源码的Web应用程序，才出现仅仅一两个月。像Mou等的其他工具，在方便性和可用性上不能与StackEdit竞争。从现在开始，我将用它创作我所有的Markdown文档。</p>

<h3>FitBit</h3>

<p><img src="http://java.dzone.com/sites/all/files/fitbit.png" alt="FitBit" /></p>

<p>这个小小的<a href="http://www.fitbit.com/">智能腕带</a>已经有一年多了，但我认为2014年可以看到它在世界各地真正腾飞。它使健身追踪变得容易得多，这就是那种聪明的小工具，当人们遇到了麻烦，能够保持激励。</p>

<p>FitBit也说明了现在越来越难发现，这种需要制造实体产品的初创公司。我想了很多，这些硬件+软件创业公司往往比纯软件的初创公司要容易成功。</p>

<h3>Arduino/Espruino</h3>

<p><img src="http://java.dzone.com/sites/all/files/espruino.png" alt="Arduino/Espruino" /></p>

<p>FitBit很好地引出来2014年另一个重要的技术 &ndash; Arduino。它是一个开源的，硬件编程平台，FitBit使用它开发了新产品原型，目前它在几个初创公司和大量的家庭自动化编程项目中使用。</p>

<p>我希望看到大家日益重视硬件编程开发平台，这就是为什么我也觉得这个最近Kickstarter资助的、被称为Espruino的、基于JavaScript的一个Arduino类的平台，也将在2014年吸引更多的眼球的原因。</p>

<h3>OpenShift</h3>

<p><img src="http://java.dzone.com/sites/all/files/openshift.png" alt="OpenShift" /></p>

<p>虽然人气在几个PaaS提供商中逐渐消退（我不会指名道姓，你可以自己做谷歌趋势搜索），<a href="https://www.openshift.com/">OpenShift</a>绝对是PaaS蓄势待发的开源社区。它主要吸引人的是简单以及作为开源的灵活性。</p>

<p>此外，Redhat的OpenShift开发者是一个伟大的，互动的群体，因此，当一个热门的新东西，像Ghost被发布，他们就添加对它的支持，并写一本关于如何在他们的平台上部署的博客。我去试了试，很快就在OpenShift部署好了。</p>

<p>&lt;未完待续></p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[10种正在改变企业的现代绩效管理方式]]></title>
    <link href="http://lifuzu.com/blog/2014/01/07/10-ways-modern-enterprise-performance-management-changing-businesses/"/>
    <updated>2014-01-07T21:20:12-08:00</updated>
    <id>http://lifuzu.com/blog/2014/01/07/10-ways-modern-enterprise-performance-management-changing-businesses</id>
    <content type="html"><![CDATA[<p>原文地址：<a href="http://thenextweb.com/entrepreneur/2013/12/28/10-ways-modern-enterprise-performance-management-changing-businesses/">http://thenextweb.com/entrepreneur/2013/12/28/10-ways-modern-enterprise-performance-management-changing-businesses/</a></p>

<p><img src="http://cdn2.tnwcdn.com/wp-content/blogs.dir/1/files/2013/05/160620356-645x250.jpg" alt="10种正在改变企业的现代绩效管理方式" /></p>

<p>“这是90天前的数据，不过没关系。”</p>

<p>当你听到一个C级高管这么说的最后一次是什么时候？我的猜测是它已经有一段时间了，因为这些天，如果你没有来实时接触驱动业务的数据，这是几乎不可能有意义的结果，从而帮助你成长和与对手竞争。</p>

<p>不幸的是，在今天的企业里，这个问题是太普遍了，企业绩效管理（EPM）平台不能从当前和相关数据中产生可操作的结果。最重要的是，大多数EPM的实现仍然复杂和难以管理，并且要求超级用户为数据把关。没有一劳永逸的秘诀。</p>

<p>但是EPM是变化的，并且作为一个结果，它改变企业在世界各地的操作方式。因此，这里有10种方法，作为一种新的方式，正在全球范围内改变企业绩效管理业务的游戏规则。</p>

<!--more-->


<h3>1. 云计算优先成为新的标准</h3>

<p><a href="http://www.forbes.com/sites/louiscolumbus/2013/12/03/idcs-top-ten-technology-predictions-for-2014-cloud-spending-will-exceed-100b/">IDC的研究</a>预测，2014年云计算技术开支将增加25％的增长，达到了1000亿美元。随着进一步普及以及进一步专业化 &ndash; 而且因为供应商不断寻求提供更多的基础设施能力，云服务正日益具有差异化。</p>

<p>较好的公共云基础设施产生了更多的能力和可扩展的企业应用程序，亚马逊，谷歌和其他公司为企业在云上运行提供了更多的工具。 提供更好的云计算能力的EPM解决方案，将为企业在新的一年引领成长。</p>

<h3>2. 也不能忽视移动办公</h3>

<p>现在，劳动力是全球性和远程连接的，每时每刻。所以平板电脑和智能手机的增长预计将持续到明年，并不奇怪。<a href="http://thenextweb.com/apps/2013/10/31/optimize-mobile-apps-different-os/">移动现在是事实上的平台上</a>。商务人士和消费者都在吞噬数据，与往年不同，他们现在同样也产生数据。</p>

<p>EPM工具现在需要能够在线提供报告 &ndash; 在任何设备上。在未来的一年，没有设计为设备无关的技术将失去市场份额。</p>

<h3>3. 大数据转而专注于可执行性</h3>

<p>对任何EPM系统而言，大数据都是一个关键考虑因素 &ndash; 今天单独的数据运算能力是远远不够。决策者们现在正在寻找能够提供实时的、更精细、可操作的、更易于管理的应用程序。</p>

<p>预计云应用程序可以通过不同的数据流进行筛选，在金融领域广泛存在。</p>

<h3>4. 协作已经从笨拙的青春期涌现</h3>

<p>几年前，协作技术在企业中是新颖的，有点笨拙。但是，这已经成为历史。不包括协作功能的平台都要灭绝。</p>

<p>创新的技术，如<a href="https://www.yammer.com/">Yammer</a>和<a href="https://www.box.com/">Box</a>，使员工相互协作和共享信息成为关键业务功能，而不仅仅是新鲜的华而不实。 IDC还预计，到2016年，60％的财富500强企业将有社会功能的创新管理解决方案到位。</p>

<p>这也对EPM有意义：促使跨组织的协作的解决方案适合今天的企业，而那些没有这些功能的方案将没有地方可去。</p>

<h3>5. CFO们也越来越有影响力</h3>

<p>华尔街日报最近报道的CFO比以往任何时候有更大的发言权，他们确定公司在何处以及如何压上赌注。引用来自Gartner的最新研究，该杂志指出，CFO们现在比他们两年前有高出40％的影响力来决定IT投资。</p>

<p>因此，尽管CFO们在转变组织中是领导角色，许多人仍然在努力确定最佳做法来实施EPM解决方案，可以帮助他们充分利用他们越来越大的影响力。</p>

<h3>6. 上下文分析驱动的决策制定</h3>

<p>我们正在从一个有足够的日志分析时代，过渡到以商业的分析为视角的时代，后者可以预测现在正在发生什么。上下文和实时数据的重要性，现在是EPM的关键任务。</p>

<p>在未来一年，<a href="http://www.linkedin.com/today/post/article/20131210125224-1336307-big-idea-2014-the-warm-embrace-of-context?trk=prof-post">角色在上下文中明智地使用数据</a> 将开始得到应有的承认。</p>

<h3>7. 机器生成的数据现在是系统的一部分</h3>

<p>更多的数据连接到每一个系统，机器产生的和非结构化的数据包含了丰富的信息，EPM解决方案也需要考虑这个问题。 RFID标识，传感器数据和更多的数据来源将变得越来越重要。</p>

<h3>8. 企业技术创新将开始推动消费技术创新</h3>

<p>企业将成为创新的新来源。而在过去的IT消费化带动企业的发展，明年企业将开始带头。</p>

<p><a href="http://thenextweb.com/entrepreneur/2013/11/06/enterprise-cloud-will-kill-mobile-device-management/">云计算，移动和社交在企业规模的的交叉点</a>正在帮助在工作场所建立高可用的和用户友好的体验。企业应用程序的设计没有考虑到这些因素将不会被采纳。</p>

<h3>9. 竞争将推动技术的快速采用</h3>

<p>这对CFO们是一个机会，他们的系统已经过时，而且需要长达4个月完成预算的预算编制平台已经不能满足。根据由<a href="http://www.journalofaccountancy.com/Issues/2013/Oct/20137811.htm">美国生产力与质量中心的研究</a>，平均而言，采用滚动预测的公司每年可以节省他们的预算编制5到25天。</p>

<p>CFO们开始明白，目前的环境是“吃还是被吃”，如果他们不采用新技术，以减少他们花费规划的时候，他们会变得无关紧要。</p>

<h3>10. 敏捷总是赢</h3>

<p>在当今不断变化的市场，任何行业都没有灵丹妙药取得成功。说到底，工作就是不断寻找未来，并考虑下一步的行动。</p>

<p>有远见的CFO们将寻找EPM解决方案，就像他们做的 &ndash; 远远超过现在 &ndash; 如果情况改变，他们希望能够快速改变，适应新的条件下的解决方案。对于唯一不变的就是变化本身- 即使需要进行规划。</p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[开始的1000个用户比你想象的容易]]></title>
    <link href="http://lifuzu.com/blog/2014/01/07/the-first-1000-users-are-easier-then-you-think/"/>
    <updated>2014-01-07T00:15:20-08:00</updated>
    <id>http://lifuzu.com/blog/2014/01/07/the-first-1000-users-are-easier-then-you-think</id>
    <content type="html"><![CDATA[<p>原文地址：<a href="http://thenextweb.com/entrepreneur/2014/01/05/first-1000-users-easier-think/">http://thenextweb.com/entrepreneur/2014/01/05/first-1000-users-easier-think/</a></p>

<p><img src="http://cdn1.tnwcdn.com/wp-content/blogs.dir/1/files/2012/01/store-657x245.jpg" alt="The first 1,000 users are easier than you think " /></p>

<p>这可能听起来很奇怪，但创造一些伟大的事情是作为一个企业家最简单的部分。难的是让客户对你的产品感到兴奋，就像你自己那样。</p>

<p>获得开始的1000个用户是一道坎，大多数初创企业和小企业都知道。<a href="https://www.lob.com/">Lob</a>的团队，这是一家通过一个简单的API把商业印刷和邮件的基础架构设置到云中的公司，也遇到了这个同样的问题。</p>

<p>这里有一些简单的窍门，Lob团队用来吸引他们的开始1,000家客户，并保持公司的成长，远远超出了最初的规模：</p>

<!--more-->


<h3>1. 小处着眼</h3>

<p>“一个用户是非常强大的，”Lob的联合创始人Leore阿维达说。按照阿维达的说法，找到的第一个用户是用户购买过程中最重要的一步。</p>

<p>毕竟，企业需要坚实的基础。如果你没有一个好的、具有开拓精神的团队，你就不能开创公司。同样，你的第一个用户是你以后客户成功案例的基础。 “有一个小目标，让你的目光聚焦于你需要做的，”阿维达说。</p>

<h3>2. 给你的第一个用户最棒的体验</h3>

<p>别让客户在门口停留，这一点很重要，确保该用户在你的公司或产品中获得最佳体验。</p>

<p>“有时候，你需要做些不可扩展的东西来获得第一批客户使用你的产品，” Daniel 赵，Lob的运营官说。一旦你成长，你可能无法花一个小时的电话进行故障诊断;因为你的客户群很小，你可以提供额外的、客户喜爱的服务。</p>

<p>你需要去超越你的第一个用户，因为这个人可以帮助确定你公司的未来。真正喜欢产品的客户可以通过口耳相传，给你带来更多的客户，从而导致有机增长。Daniel 赵说，最棒的用户体验“可以确定其他的客户怎么来找你。”</p>

<h3>3. 发现现在需要你的客户</h3>

<p>今天你需要针对你的客户以及最初聚焦于那些需要你的产品或平台的客户。这有助于消除周期长而笨重的销售流程，你可以得到立竿见影的效果。</p>

<p>“大规模应用之后，人就太多了，客户可能需要六个月才能使用服务，”阿维达警告说。 “第一个客户能够隔天就注册成功。这会给你的下一个客户提供更多的杠杆作用。“</p>

<h3>4. 针对你的理想客户，并找到他们</h3>

<p>这个过程中，最重要的部分是，在选择服务你的首个客户之前要知道你的理想客户。你应该了解你的客户所需要的，什么样的价值你的产品可以带来，什么地方您的顾客愿意投入时间。</p>

<p>Lob团队花费了大量的时间在这个方面，并与开发人员保持在线和离线联系。 “你真的必须要积极主动。你需要真正了解你的客户，“阿维达说。</p>

<p>公司有时会花费更多的时间保持联系，并帮助开发人员推荐他们的产品。</p>

<p>“我们把自己放在了那里，以人为本，以帮助正在构建的潜在客户，”阿维达说， “你需要确保你是社区的一部分。”</p>

<h3>5. 识别您的壁垒</h3>

<p>每一个公司或产品都有一些障碍阻止用户签约。你需要了解为什么你的一些线索都没有转化为用户。</p>

<p>这可能是简单的，只要加强沟通，更好的联系。对于Lob，团队确保文档和产品信息是在该公司的网站上，很方便得到。</p>

<p>“你是产品的制造商，所以你忘记了理解产品有多难，不是每个人都会清楚地了解产品，“赵说。 “保证你的价值主张是具有前瞻性和中心。确保每个人都能够理解你做什么，以及它如何能够帮助他们的业务。“</p>

<h3>6. 分享你的成功和积极主动</h3>

<p>不要把好消息只给自己，与社区和潜在的客户分享！信任是一个很大的障碍，尤其是在互联网上。分享深入的个案研究，并展示哪些客户已经在使用你的平台。</p>

<p>“人们看到其他客户使用该平台，这是很好的验证，”赵说。</p>

<p>该公司可确保团队成员都永远在线，所以帮助对使用者触手可即。当一个新的顾客完成购买，他们尽量在五分钟内回复。他们还在用户注册或采取行动时发送电子邮件。</p>

<p>“这表明有人真的在乎，”阿维达说。 “这是把小事累加起来的效应。”</p>

<p>让你的开始1000个用户，不会在你的手指间溜走。通过使用一些简单的技巧，就能保证在未来，你的开始的1000个用户吸引到数千人。</p>

<p>你是怎么得到了你的第一个1000个用户？欢迎在评论中分享！</p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[在“品牌体验”的时代经营企业]]></title>
    <link href="http://lifuzu.com/blog/2014/01/07/operating-a-business-in-the-age-of-the-brand-experience/"/>
    <updated>2014-01-07T00:05:28-08:00</updated>
    <id>http://lifuzu.com/blog/2014/01/07/operating-a-business-in-the-age-of-the-brand-experience</id>
    <content type="html"><![CDATA[<p>原文地址：<a href="http://thenextweb.com/entrepreneur/2014/01/04/operating-business-age-brand-experience/">http://thenextweb.com/entrepreneur/2014/01/04/operating-business-age-brand-experience/</a></p>

<p><img src="http://cdn3.tnwcdn.com/wp-content/blogs.dir/1/files/2012/11/starbucks-645x250.jpg" alt="在“品牌体验”的时代经营企业" /></p>

<p>在过去三十年中，商业世界已经经历了显著的转变。传统的品牌理念已经远离实体，而迁移到虚拟世界。那些时代的卓越理念已经转变为被称为软件开发术语的“用户体验” &ndash; 客户体验的电子格式 &ndash; 来体现了。</p>

<p>不同的是，有人认为，一个“好”的用户体验和“坏”的用户体验，是一个公司的成功与失败的差别所在。因此，在蓬勃发展的数字化革命当中，用户体验成为关键。</p>

<p>但是，在过去的十年左右的时间里，伟大的用户体验似乎兜了一个圈。有一种回到实体世界的转变，所有的业务 &ndash; 产品，架构，印刷品，软件，移动应用，以及介于两者之间的所有东西都必须被视为一个统一的整体，从而使得企业获得成功。</p>

<p>我们如何发展到现在这个样子，什么使得企业向前发展，是一个迷人的故事。这个故事对那些愿意总结那些微妙的，但功能强大的经验的人而言，饱含教训。</p>

<p>“品牌”一词的传统含义出现在十九世纪末，在二十世纪的大部分时间里，发展缓慢但非常稳定。一个品牌是应用到一个实体的想法，最常见的是一种产品，但也可能是一个服务。一个品牌涵盖了一切产品或服务在理性和感性的层面上对客户的承诺。</p>

<!--more-->


<h3>进入个人电脑时代</h3>

<p>个人计算机在80年代初至90年代中期问世，从而，品牌的概念开始渗透到电子空间，即所谓的“虚拟世界”。</p>

<p>以前品牌应用到实体事物的概念得到了转移，转到了数字资产，如网站和操作系统。品牌的旧观念本身并没有消失，包括可口可乐和麦当劳，Tides和Chloroxes的世界仍然存在 &ndash; 但电子世界居于舞台中心了。</p>

<p>品牌的未来是虚拟和用户体验压倒一切。考虑“用户体验”这个词的词源是很重要的。它也不难，这是一个软件的词语，表示客户使用一个软件进行交互来达成一些要求的目标，理想情况下应该涉及购买产品的目标。</p>

<p>这种转变的两个主要例子是再熟悉不过的：苹果和亚马逊。在“疯狂伟大的”苹果操作系统和亚马逊的“粉碎 &ndash; 所有的竞争对手”在线市场改变了数字世界。 1999年左右，第三位选手出现了，谷歌推出了其简约的Web体验。
<img src="http://cdn0.tnwcdn.com/wp-content/blogs.dir/1/files/2013/12/Google-Logo.gif" alt="Google Logo" />
不久，互联网的所有复杂减化为一个白色的页面上的单选框。互联网，就像谷歌承诺的，可以是针对几个搜索词的简单价格和一个鼠标点击。这是最终的用户体验和几个数十亿美元的财富物化出来的白色屏幕上那个小盒子。</p>

<p>在此期间，新的动词进入了词典。商界领袖担忧，他们的公司将被“亚马逊化”。消费者掌握了“谷歌搜索”的艺术。突然间，用户体验变成了大家茶余饭后的谈资。</p>

<h3>飞去来器效应</h3>

<p>然后就出现了iPod和连接它的iTunes。仿佛被施了魔法，虚拟和实体再一次重逢。用户体验和品牌，就好像不是区别，或者相互排斥的东西，而只是同一个概念的不同方面。用户体验就是品牌体验，反之亦然。
<img src="http://cdn1.tnwcdn.com/wp-content/blogs.dir/1/files/2012/09/iPods.jpg" alt="IPod Logo" />
iPod不仅是一个美丽的实物产品，一个工业设计的符号。而且它的操作系统和非凡的iTunes完美地匹配了它的极简的设计。</p>

<p>走进一家新开的苹果零售店，就好像苹果的操作系统已经把“天才”驻留在蓝衫上，在零售体验，甚至在其门店非凡的架构设计中。如果一个人可以使用iPod，苹果承诺，就像可以浏览商店一样容易。</p>

<p>几乎在一夜之间，那些仅仅在几年之前鼓吹用户体验并告诫大家提防被“亚马逊化”的业务专家开始说被“苹果化”才是真正的威胁。今天，作为用户体验的典范，亚马逊和谷歌正在制造消费电子设备: Kindle和谷歌眼镜，还有其他。</p>

<p>同样，亚马逊的仓库和谷歌的山景城已经成为其母公司的实体延伸，就像苹果的零售店和Cupertino的总部似乎都体现了苹果的精髓。</p>

<h3>对商业的启示</h3>

<p>这种品牌体验的转变是一个有趣的事件，而今天的商界领袖要做出什么样的改变呢？对我来说，这意味着要保持领先的技术/内容，企业将不得不调整所有的品牌触点，包括实体的和围绕核心价值的品牌的数字表现。这就是“品牌体验”。</p>

<p>越来越多的技术创新将与新的硬件设备合并，来连接我们生活中完全不同的消费决策点，这就是人们经常谈论的“物联网”。每一个我们拥有的汽车、冰箱、酒窖、电视和设备都将联网，并通过智能手机，笔记本电脑，平板电脑或其他还没有发明出来的东西进行控制。</p>

<p>在这个世界里，实体和数字是一体的，品牌体验将成为主导。品牌体验的理念已经改变零售环境，它一定会很快进入餐馆和娱乐场所。</p>

<p>为了获得成功，在某些情况下获得生存，企业必须要学会从自己的虚拟和实体的基础设施中寻找价值。比较其他任何商店，苹果商店拥有单位平方尺的最高利润，即使是蒂芙尼公司。</p>

<p>提个醒，苹果没有在商店里卖钻石和铂金，它只是通过应用其特殊的“品牌体验”，以及它所做的一切，包括它的产品以及它品牌化的实体购物环境。</p>

<p>企业将同样必须制定一个在所有通路上统一的语音和语调。从本质上说，他们将需要创建一个品牌运营体系，在一台设备上工作的，也应该工作在所有其他设备上。这需要深刻的理解和赞赏公司的品牌支柱，这些支柱如何适用于各媒体，如何指导今后的迭代开发。</p>

<h3>那么，我们何去何从？</h3>

<p>进化到品牌体验的时代将会对全球很多的行业有益，很大程度上可以影响预测，以及一种21世纪事半功倍的效果。这些影响将波及在等式的两边，所有的必要的支持生态系统将扩展到零售，消费品，运输和建筑，以及在数字化设计和开发领域。</p>

<p>公司将不得不进行一次全方位关注，并认真思考如何精心打造品牌自身的个性，并被翻译成实体和数字化的东西，让客户可以立即识别出品牌运营体系,无论他们在哪里遇到它。这将需要前所未见的简化并精简到一定的程度。</p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gevent, Eventlet和Node.js的性能分析]]></title>
    <link href="http://lifuzu.com/blog/2014/01/05/performance-analysis-of-gevent-eventlet-and-nodejs/"/>
    <updated>2014-01-05T22:13:56-08:00</updated>
    <id>http://lifuzu.com/blog/2014/01/05/performance-analysis-of-gevent-eventlet-and-nodejs</id>
    <content type="html"><![CDATA[<p>原文地址：<a href="http://myprogrammingjourney.blogspot.com/2011/03/meet-my-three-new-friends-eve-eventlet.html">http://myprogrammingjourney.blogspot.com/2011/03/meet-my-three-new-friends-eve-eventlet.html</a></p>

<p>碰到了我的三个朋友：Eve (<a href="eventlet.net">Eventlet</a>)和他的小弟Geve(<a href="gevent.org">Gevent</a>)，以及Node(nodejs.org)。全部三个都承诺对于响应多个Web客户端的请求的可扩展性。Eve是第一个轻巧的、非阻塞I/O 的python网络库。Eve的灵感来自于一个兽名Twisted，后者也提供了非阻塞I/O，但很重量级，不易tame。因此Eve为下一代轻量级的，可扩展的网络库铺平了道路。Geve虽然开始时是一个更年轻和更小的Eve版本，随着一些重大的修改，现在也已经发展成为最强大的Python网络库。它可以毫不费力地处理来自Web客户端的多个并发请求，很容易理解和实现。现在，这些Python脚本可以用来设计网页爬虫，网络机器人或Python/WSGI服务器，设计者真的很高兴能使用这些库来把他们的应用程序提升到一个新的水平。</p>

<p>一个Python的Web应用程序都有两个方面：服务器编程（在Python中完成）和客户端编程（使用HTML，CSS和JavaScript来完成）。Node.js通过提供一个JavaScript的Web开发框架，内置了一个高效的连接服务器和客户端编程之间的的HTTP 服务器。这个服务器也是可扩展的，重量轻，提供异步，非阻塞I/O。Node.js服务器其实更优于它的对手Python。Node.js允许服务器和客户端脚本都使用JavaScript。现在，这点对许多JavaScript程序员来说是个好消息。他们曾经对不能控制服务器端编程有点困惑。Node.js提供的服务器是强大的，但框架非常简单，需要许多组件支持。但是，随着Node.js的日益普及，越来越多的人也没闲着，他们提供一些有效的框架来支持Node.js。<a href="http://expressjs.com/">Express</a>就是其中一种。在<a href="https://npmjs.org/">npm</a>资源库中人们可以找到一些真正有用的JavaScript模块，这些模块是其他人在面临同样问题时开发的。这些模块都是免费的有点像Python cheese shop（PyPi）。</p>

<!--more-->


<p>无论怎么样，我想使用Apache Benchmark测试这三个框架。就是利用这三个朋友创建三个简单的服务器，然后利用Apache Benchmark抛出多个并发请求，看他们如何响应。对于服务器而言，就是返回一个简单的 Hello World 字符串。看看我们的代码：</p>

<p>先来Gevent：</p>

<div><script src='https://gist.github.com/8278468.js?file=geve.py'></script>
<noscript><pre><code>import gevent
from gevent import wsgi,pool
#the application to handle the response  
def app(environ,start_response):
  start_response(&quot;200 OK&quot;,[(&quot;Content-Type&quot;,&quot;text/plain&quot;)])
  return &quot;Hello World\n&quot;
if __name__==&quot;__main__&quot;:
  print &quot;The sweet thing is running on http://localhost:8912/&quot;
  pool=gevent.pool.Pool() #A pool of greenlets.Each greenlets runs the above defined function app for a client request  
  server=wsgi.WSGIServer((&quot;localhost&quot;,8912),app,spawn=pool) #the server is created and runs multiple greenlets concurrently  
  server.serve_forever() #the server is made to run in loop</code></pre></noscript></div>


<p>保存上述脚本为geve.py，在终端执行“$python geve.py”，这将触发Gevent服务器，端口为8912。现在在另一个终端窗口运行：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ab -n 1000 -c 100 http://localhost:8912/</span></code></pre></td></tr></table></div></figure>


<p>上述命令运行用ab发出1000个请求（-n），100个并发请求（-c）到服务器。你可以改变的数字，这个取决于你的操作系统能力。检查以下行：“Time taken for tests:”，我这里的数字是：<strong>0.360</strong>秒。如下：</p>

<div><script src='https://gist.github.com/8278468.js?file=ab_gevent.log'></script>
<noscript><pre><code>$ sudo pip install gevent
$ ab -n 1000 -c 100 http://localhost:8912/
This is ApacheBench, Version 2.3 &lt;$Revision: 655654 $&gt;
Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Licensed to The Apache Software Foundation, http://www.apache.org/

Benchmarking localhost (be patient)
Completed 100 requests
...
Finished 1000 requests


Server Software:        
Server Hostname:        localhost
Server Port:            8912

Document Path:          /
Document Length:        12 bytes

Concurrency Level:      100
Time taken for tests:   0.360 seconds</code></pre></noscript></div>


<p>现在是Eventlet：</p>

<div><script src='https://gist.github.com/8278468.js?file=eve.py'></script>
<noscript><pre><code>import eventlet
from eventlet import wsgi
def app(environ,start_response):
  start_response(&quot;200 OK&quot;,[(&quot;Content-Type&quot;,&quot;text/plain&quot;)])
  return &quot;Hello World\n&quot;
if __name__==&quot;__main__&quot;:
  wsgi.server(eventlet.listen((&quot;localhost&quot;,6785)),app)</code></pre></noscript></div>


<p>保存为eve.py，然后用ab运行:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ab -n 1000 -c 100 http://localhost:6785/</span></code></pre></td></tr></table></div></figure>


<p>结果是<strong>0.639</strong>秒。（注意区别）</p>

<div><script src='https://gist.github.com/8278468.js?file=ab_eventlet.log'></script>
<noscript><pre><code>$ ab -n 1000 -c 100 http://localhost:6785/
This is ApacheBench, Version 2.3 &lt;$Revision: 655654 $&gt;
Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Licensed to The Apache Software Foundation, http://www.apache.org/

Benchmarking localhost (be patient)
Completed 100 requests
...
Finished 1000 requests


Server Software:        
Server Hostname:        localhost
Server Port:            6785

Document Path:          /
Document Length:        12 bytes

Concurrency Level:      100
Time taken for tests:   0.639 seconds</code></pre></noscript></div>


<p>最后但并非最不重要的Node.js：</p>

<div><script src='https://gist.github.com/8278468.js?file=node.js'></script>
<noscript><pre><code>var http=require(&quot;http&quot;);
http.createServer(function(req,res){
  res.writeHead(200,{&quot;Content-Type&quot;:&quot;text/plain&quot;});
  res.end(&quot;Hello World\n&quot;);
}).listen(9124,&quot;localhost&quot;);
console.log(&quot;The sweet thing is running on http://localhost:9124&quot;);</code></pre></noscript></div>


<p>其结果是<strong>0.186</strong>秒（好吧，这个是最好的结果）。</p>

<div><script src='https://gist.github.com/8278468.js?file=ab_nodejs.log'></script>
<noscript><pre><code>$ ab -n 1000 -c 100 http://localhost:9124/
This is ApacheBench, Version 2.3 &lt;$Revision: 655654 $&gt;
Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/
Licensed to The Apache Software Foundation, http://www.apache.org/

Benchmarking localhost (be patient)
Completed 100 requests
...
Finished 1000 requests


Server Software:        
Server Hostname:        localhost
Server Port:            9124

Document Path:          /
Document Length:        12 bytes

Concurrency Level:      100
Time taken for tests:   0.186 seconds</code></pre></noscript></div>


<p>该分析在Ubunut（12.04.3）上执行。这里是<a href="https://gist.github.com/lifuzu/8278468/raw/c92933b471c63ed2b607ad09551655ba3274392d/hardware.info">硬件</a>以及<a href="https://gist.github.com/lifuzu/8278468/raw/ddb00a3d17f951c61a5a3deda272dd337bd27859/software.info">软件</a>信息。欢迎留下评论和分享您的经验。</p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
</feed>
