<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Build and Release]]></title>
  <link href="http://lifuzu.com/atom.xml" rel="self"/>
  <link href="http://lifuzu.com/"/>
  <updated>2015-06-02T10:37:15-07:00</updated>
  <id>http://lifuzu.com/</id>
  <author>
    <name><![CDATA[Richard Lee]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Using Git Command to Find Build Failure Very Quickly]]></title>
    <link href="http://lifuzu.com/blog/2015/06/02/using-git-command-to-find-build-failure-very-quickly/"/>
    <updated>2015-06-02T10:32:09-07:00</updated>
    <id>http://lifuzu.com/blog/2015/06/02/using-git-command-to-find-build-failure-very-quickly</id>
    <content type="html"><![CDATA[<p>When some changes broke your build during the mid night, how to find the culprit of the failure very quickly? Like this:
<img src="https://lh3.googleusercontent.com/-20gdQ7Sswwk/VW3cw-UhgWI/AAAAAAAAC04/b3cysga0Cr8/s0/Screen+Shot+2015-06-02+at+9.39.06+AM.png" title="Screen Shot 2015-06-02 at 9.39.06 AM.png" alt="build failure history" /></p>

<p>If you are using git as your version control system, then the short answer is &lsquo;<strong>git bisect</strong>&rsquo;.</p>

<p>As the above screenshot, you know the latest good version is 4.7.0.310, and the earliest bad version is 4.7.0.311, so some changes between the two version failed the build. Then how to use &lsquo;git bisect&rsquo; to help us debug the issue very quickly?</p>

<!--more-->


<p>Firstly, checking out the source tree to an environment:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone ...</span></code></pre></td></tr></table></div></figure>


<p>Starting the git bisect command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git bisect start</span></code></pre></td></tr></table></div></figure>


<p>Marking the good version and the bad one with the tag name (or commit id):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git bisect good 4.7.0.310
</span><span class='line'>$ git bisect bad 4.7.0.311</span></code></pre></td></tr></table></div></figure>


<p>Then git bisect analyzes the changes between, checkout the middle one (bisected) to the current environment and wait for verification. What we need to do now is just to run the build command to get the build result for the snapshot:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./gradlew clean build</span></code></pre></td></tr></table></div></figure>


<p>If the build failed, then mark it bad:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git bisect bad</span></code></pre></td></tr></table></div></figure>


<p>Git should checkout another version between this one and the good one, bisectedly. Then what we need to do is to run the build command again to get the build result:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./gradlew clean build</span></code></pre></td></tr></table></div></figure>


<p>If the build is successful, then git should bisect to another version between this one and the latest verified bad one. Until git find which commit failed the build.</p>

<p>Assuming you mark the build is successful, and git find out which commit is the root cause, it should display the commit after the mark command immediately:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git bisect good
</span><span class='line'>f0810993941d6bc2f4985c9830780f5bc86e0f35 is the first bad commit
</span><span class='line'>commit f0810993941d6bc2f4985c9830780f5bc86e0f35
</span><span class='line'>Author: ABC &lt;abc@abc.com&gt;
</span><span class='line'>Date:   Tue Jun 2 15:14:09 2015 +0800
</span><span class='line'>
</span><span class='line'>    ABC-1234: move a function to another class to avoid ClassNotFound if API level &lt; 18
</span><span class='line'>
</span><span class='line'>:040000 040000 56a19c7814dea9aee78bf3453c223e428a31e451 29a6fbc67b3d1e521683739270b186a86f6f9240 M    abcmoduleA
</span><span class='line'>:040000 040000 f9045aaf28eef5c250d110c4580c76ed90a642eb 8ddeced2ceaa41a0d93ba8b1f6333976f6104342 M    abcmoduleB</span></code></pre></td></tr></table></div></figure>


<p>Done!</p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing With Hadoop on Dockerbase]]></title>
    <link href="http://lifuzu.com/blog/2015/02/03/playing-with-hadoop-on-dockerbase/"/>
    <updated>2015-02-03T21:52:03-08:00</updated>
    <id>http://lifuzu.com/blog/2015/02/03/playing-with-hadoop-on-dockerbase</id>
    <content type="html"><![CDATA[<p><img src="https://www.ombud.com/asset/3607" alt="Apache Hadoop Logo" />
Apache Hadoop is a map reduce computing environment, which provide a reliable, scalable and distributed computing environment to handle big data. This article introduce how to setup a Apache Hadoop Dockerbase image to play with the standalone operation of Hadoop on Docker.</p>

<!--more-->


<p><strong>Steps</strong>:</p>

<p><em>1</em>. Install Docker:
Install the latest version of Docker on Ubuntu:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -sSL https://get.docker.com/ubuntu/ | sudo sh
</span><span class='line'><span class="nv">$ </span>docker --version
</span></code></pre></td></tr></table></div></figure>


<p>For Microsoft Windows or Mac OS, there is a tool named <code>boot2docker</code> [1] need to be installed to provide a terminal to run the following commands. You can also get more information about other platform you are on from reference [2].</p>

<p><em>2</em>. Download Dockerbase image for Hadoop:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo docker run -it --rm --name dockerbase-devbase-hadoop dockerbase/devbase-hadoop
</span></code></pre></td></tr></table></div></figure>


<p>It takes a little bit time (depends on network speed) to download docker image from public Docker hub registry [3].</p>

<p><em>3</em>. Enter Docker image automatically after the above step, try the command <code>hadoop</code> to display usage documentation for the hadoop script:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>devbase@145878b9c8c7:~<span class="nv">$ </span>hadoop
</span><span class='line'>Usage: hadoop <span class="o">[</span>--config confdir<span class="o">]</span> COMMAND
</span><span class='line'>       where COMMAND is one of:
</span><span class='line'>  fs                   run a generic filesystem user client
</span><span class='line'>  version              print the version
</span><span class='line'>  jar &lt;jar&gt;            run a jar file
</span><span class='line'>  checknative <span class="o">[</span>-a|-h<span class="o">]</span>  check native hadoop and compression libraries availability
</span><span class='line'>  distcp &lt;srcurl&gt; &lt;desturl&gt; copy file or directories recursively
</span><span class='line'>  archive -archiveName NAME -p &lt;parent path&gt; &lt;src&gt;* &lt;dest&gt; create a hadoop archive
</span><span class='line'>  classpath            prints the class path needed to get the
</span><span class='line'>                       Hadoop jar and the required libraries
</span><span class='line'>  daemonlog            get/set the log level <span class="k">for </span>each daemon
</span><span class='line'> or
</span><span class='line'>  CLASSNAME            run the class named CLASSNAME
</span></code></pre></td></tr></table></div></figure>


<p><em>4</em>. The following example copies configuration files under the <code>hadoop</code> folder which we installed in <code>/usr/local</code>, then run the <code>hadoop</code> command to find every match of the given regular expression.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>devbase@145878b9c8c7:~<span class="nv">$ </span>mkdir input
</span><span class='line'>devbase@145878b9c8c7:~<span class="nv">$ </span>cp /usr/local/hadoop/etc/hadoop/*.xml input/
</span><span class='line'>devbase@145878b9c8c7:~<span class="nv">$ </span>hadoop jar /usr/local/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.6.0.jar grep input output <span class="s1">&#39;dfs[a-z.]+&#39;</span>
</span><span class='line'>15/02/03 17:49:21 INFO Configuration.deprecation: session.id is deprecated. Instead, use dfs.metrics.session-id
</span><span class='line'>15/02/03 17:49:21 INFO jvm.JvmMetrics: Initializing JVM Metrics with <span class="nv">processName</span><span class="o">=</span>JobTracker, <span class="nv">sessionId</span><span class="o">=</span>
</span><span class='line'>15/02/03 17:49:22 WARN mapreduce.JobSubmitter: No job jar file set.  User classes may not be found. See Job or Job#setJar<span class="o">(</span>String<span class="o">)</span>.
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p><em>5</em>. Display the matchs from the output folder:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>devbase@145878b9c8c7:~<span class="nv">$ </span>cat output/*
</span><span class='line'>1 dfsadmin
</span></code></pre></td></tr></table></div></figure>


<p><strong>References</strong>:</p>

<ol>
<li><a href="http://boot2docker.io/">http://boot2docker.io/</a></li>
<li><a href="https://docs.docker.com/installation/">https://docs.docker.com/installation/</a></li>
<li><a href="https://registry.hub.docker.com/u/dockerbase/devbase-hadoop/">https://registry.hub.docker.com/u/dockerbase/devbase-hadoop/</a></li>
<li><a href="http://hadoop.apache.org/">http://hadoop.apache.org/</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Familiar With HBase on Dockerbase]]></title>
    <link href="http://lifuzu.com/blog/2015/02/03/getting-familiar-with-hbase-on-dockerbase/"/>
    <updated>2015-02-03T21:34:36-08:00</updated>
    <id>http://lifuzu.com/blog/2015/02/03/getting-familiar-with-hbase-on-dockerbase</id>
    <content type="html"><![CDATA[<p><img src="http://doc.mapr.com/download/attachments/26982553/hbase_logo.png" alt="Apache HBase Logo" />
Apache HBase is a distributed, scalable, big data store. With Apache HBase, you can randomly access your big data, which support realtime read/write. You can get more information about Apache HBase from the reference list [3]. This article introduces how to setup a standalone HBase database with Dockerbase supported.</p>

<!--more-->


<p><strong>Steps</strong>:</p>

<p><em>1</em>. Install Docker:
Install the latest version of Docker on Ubuntu:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -sSL https://get.docker.com/ubuntu/ | sudo sh
</span><span class='line'><span class="nv">$ </span>docker --version
</span></code></pre></td></tr></table></div></figure>


<p>For Microsoft Windows or Mac OS, there is a tool named <code>boot2docker</code> [1] need to be installed to provide a terminal to run the following commands. You can also get more information about other platform you are on from reference [2].</p>

<p><em>2</em>. Clone the Dockerbase HBase image from the public Docker hub registry [4]:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo docker run -it --rm --name dockerbase-devbase-hbase dockerbase/devbase-hbase
</span></code></pre></td></tr></table></div></figure>


<p><em>3</em>. After pulling the image, the Dockerbase image will run automatically into the docker container (docker container just like a lightweight virtual machine), then you can run the following commands to start Apache HBase, and then launch the shell to run the HBase commands:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>devbase@0be9d4455f59:~<span class="nv">$ </span>sudo -E bash -c <span class="s1">&#39;/usr/local/hbase/bin/start-hbase.sh&#39;</span>
</span><span class='line'>devbase@0be9d4455f59:~<span class="nv">$ </span>hbase shell
</span><span class='line'>hbase<span class="o">(</span>main<span class="o">)</span>:001:0&gt; list
</span><span class='line'>TABLE
</span><span class='line'>
</span><span class='line'>2015-02-02 20:03:28,604 WARN  <span class="o">[</span>main<span class="o">]</span> util.NativeCodeLoader: Unable to load native-hadoop library <span class="k">for </span>your platform... using <span class="nb">builtin</span>-java classes where applicable
</span><span class='line'>0 row<span class="o">(</span>s<span class="o">)</span> in 1.1440 <span class="nv">seconds</span>
</span><span class='line'>
</span><span class='line'><span class="o">=</span>&gt; <span class="o">[]</span>
</span><span class='line'>hbase<span class="o">(</span>main<span class="o">)</span>:002:0&gt; create <span class="s1">&#39;test&#39;</span>, <span class="s1">&#39;cf&#39;</span>
</span><span class='line'>0 row<span class="o">(</span>s<span class="o">)</span> in 0.2630 <span class="nv">seconds</span>
</span><span class='line'>
</span><span class='line'><span class="o">=</span>&gt; Hbase::Table - <span class="nb">test</span>
</span><span class='line'>hbase<span class="o">(</span>main<span class="o">)</span>:003:0&gt; list <span class="s1">&#39;test&#39;</span>
</span><span class='line'>TABLE
</span><span class='line'><span class="nb">test</span>
</span><span class='line'>1 row<span class="o">(</span>s<span class="o">)</span> in 0.0030 <span class="nv">seconds</span>
</span><span class='line'>
</span><span class='line'><span class="o">=</span>&gt; <span class="o">[</span><span class="s2">&quot;test&quot;</span><span class="o">]</span>
</span><span class='line'>hbase<span class="o">(</span>main<span class="o">)</span>:004:0&gt; put <span class="s1">&#39;test&#39;</span>, <span class="s1">&#39;row1&#39;</span>, <span class="s1">&#39;cf:a&#39;</span>, <span class="s1">&#39;value1&#39;</span>
</span><span class='line'>0 row<span class="o">(</span>s<span class="o">)</span> in 0.0900 seconds
</span><span class='line'>
</span><span class='line'>hbase<span class="o">(</span>main<span class="o">)</span>:005:0&gt; get <span class="s1">&#39;test&#39;</span>, <span class="s1">&#39;row1&#39;</span>
</span><span class='line'>COLUMN                                               CELL
</span><span class='line'> cf:a                                                <span class="nv">timestamp</span><span class="o">=</span>1422907465167, <span class="nv">value</span><span class="o">=</span>value1
</span><span class='line'>1 row<span class="o">(</span>s<span class="o">)</span> in 0.0110 seconds
</span><span class='line'>
</span><span class='line'>hbase<span class="o">(</span>main<span class="o">)</span>:006:0&gt; disable <span class="s1">&#39;test&#39;</span>
</span><span class='line'>0 row<span class="o">(</span>s<span class="o">)</span> in 1.2890 seconds
</span><span class='line'>
</span><span class='line'>hbase<span class="o">(</span>main<span class="o">)</span>:007:0&gt; drop <span class="s1">&#39;test&#39;</span>
</span><span class='line'>0 row<span class="o">(</span>s<span class="o">)</span> in 0.2010 seconds
</span><span class='line'>hbase<span class="o">(</span>main<span class="o">)</span>:008:0&gt; quit
</span><span class='line'>devbase@0be9d4455f59:~<span class="nv">$ </span>sudo -E bash -c <span class="s1">&#39;/usr/local/hbase/bin/stop-hbase.sh&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>From the above commands, we list the tables in database, then <code>create</code> a table named &lsquo;test&rsquo;. We <code>put</code> some data into the table, then <code>get</code> it out with the <code>get</code> command. Before we <code>drop</code> the table, we have to <code>disable</code> it. The last step is to quit the Apache HBase shell.</p>

<p>You can find more Apache HBase shell commands from reference list [4] to practice in this Dockerbase image. Enjoy!</p>

<p><strong>References</strong>:</p>

<ol>
<li><a href="http://boot2docker.io/">http://boot2docker.io/</a></li>
<li><a href="https://docs.docker.com/installation/">https://docs.docker.com/installation/</a></li>
<li><a href="http://hbase.apache.org/">http://hbase.apache.org/</a></li>
<li><a href="https://registry.hub.docker.com/u/dockerbase/devbase-hbase/">https://registry.hub.docker.com/u/dockerbase/devbase-hbase/</a></li>
<li><a href="http://wiki.apache.org/hadoop/Hbase/Shell">http://wiki.apache.org/hadoop/Hbase/Shell</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started With Scala]]></title>
    <link href="http://lifuzu.com/blog/2015/01/31/getting-started-with-scala/"/>
    <updated>2015-01-31T21:58:42-08:00</updated>
    <id>http://lifuzu.com/blog/2015/01/31/getting-started-with-scala</id>
    <content type="html"><![CDATA[<p><img src="http://grab.by/grabs/d3bb7c13cd4b40142fab4a7eb0ef7155.png" alt="enter image description here" />
Have no any idea what to do today after dinner, although I have some homeworks need to submit soon, I still decided to try something new in a short time. I recalled I read an article yesterday on stackshare.io, it seems there is a company named instacarts tried Scala programming language to setup their development stack. I am very curious on the programming language, it seems someone said: &ldquo;Speaking More Than One Language Could Sharpen Your Brain.&rdquo;, how about Scala?</p>

<!-- more -->


<p><strong>Steps</strong>:</p>

<p><em>1</em>. Download the recent Scala SDK here:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget http://downloads.typesafe.com/scala/2.11.5/scala-2.11.5.tgz
</span></code></pre></td></tr></table></div></figure>


<p><em>2</em>. Uncompress the package, put the folder into <code>/usr/local</code>, add the path into system environment variable <code>PATH</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /usr/local
</span><span class='line'><span class="nv">$ </span>sudo tar -zxf ~/Downloads/scala-2.11.5.tgz
</span><span class='line'><span class="nv">$ </span>sudo ln -s scala-2.11.5 scala
</span><span class='line'><span class="nv">$ </span>vi ~/.bashrc
</span><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">SCALA_HOME</span><span class="o">=</span>/usr/local/scala
</span><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$SCALA_HOME</span>/bin
</span></code></pre></td></tr></table></div></figure>


<p><em>NOTE</em>: You can skip the above two steps with a full-fledged docker image, which even do not affect your local system, but allow you to try the following steps. Please see the instruction on how to download the docker image on Scala at the bottom.</p>

<p><em>3</em>. Open your perfered Editor, for me, it is sublime text and/or vi, type the followind code in:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">object</span> <span class="nc">HelloScala</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">main</span><span class="o">(</span><span class="n">args</span><span class="k">:</span> <span class="kt">Array</span><span class="o">[</span><span class="kt">String</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">println</span><span class="o">(</span><span class="s">&quot;Hello Scala!&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>then save the file as <code>helloscala.scala</code></p>

<p><em>NOTE</em>: If you do not want to type them in, please git clone the repository in my github here:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone https://github.com/lifuzu/HelloScala
</span></code></pre></td></tr></table></div></figure>


<p><em>4</em>. Compile and execute it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scalac HelloScala.scala
</span><span class='line'><span class="nv">$ </span>scala HelloScala
</span><span class='line'>Hello Scala!
</span></code></pre></td></tr></table></div></figure>


<p><em>5</em>. We can even ignore to add a method <code>main</code> to be act as the entry point of the program by extending object from <code>App</code>, like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">object</span> <span class="nc">HelloScala</span> <span class="k">extends</span> <span class="nc">App</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">println</span><span class="o">(</span><span class="s">&quot;Hello, Scala!&quot;</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Cool! You are almost done. Scala has two surprises here for you!</p>

<p><em>6</em>. The first surprise with Scala is we can easily to script it with bash shell script, like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="o">#!/</span><span class="n">bin</span><span class="o">/</span><span class="n">bash</span>
</span><span class='line'><span class="n">exec</span> <span class="n">scala</span> <span class="s">&quot;$0&quot;</span> <span class="s">&quot;$@&quot;</span>
</span><span class='line'><span class="o">!</span><span class="k">#</span>
</span><span class='line'><span class="k">object</span> <span class="nc">HelloScala</span> <span class="k">extends</span> <span class="nc">App</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">println</span><span class="o">(</span><span class="s">&quot;Hello, Scala!&quot;</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="nc">HelloScala</span><span class="o">.</span><span class="n">main</span><span class="o">(</span><span class="n">args</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Save it as <code>helloscala.sh</code>, then run it as:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chmod +x helloscala.sh
</span><span class='line'><span class="nv">$ </span>./helloscala.sh
</span></code></pre></td></tr></table></div></figure>


<p>OR</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bash helloscala.sh
</span></code></pre></td></tr></table></div></figure>


<p><em>7</em>. Scala provide a REPL interactive shell to allow developers to try some short experiments:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scala
</span><span class='line'>...
</span><span class='line'>scala&gt; object HelloScala extends App <span class="o">{</span>
</span><span class='line'>    |    println<span class="o">(</span><span class="s2">&quot;Hello, Scala!&quot;</span><span class="o">)</span>
</span><span class='line'>    |  <span class="o">}</span>
</span><span class='line'>defined object HelloScala
</span><span class='line'>
</span><span class='line'>scala&gt; HelloScala.main<span class="o">(</span>null<span class="o">)</span>
</span><span class='line'>Hello, Scala!
</span><span class='line'>
</span><span class='line'>scala&gt; :q
</span><span class='line'><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Dockerbase information</strong>:
If you are on Ubuntu, or other linux, please make sure your have <code>docker</code> command on your terminal, please try the command here:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker --version
</span><span class='line'>Docker version 1.4.1, build 5bc2ff8
</span></code></pre></td></tr></table></div></figure>


<p>You should get a version of docker above <code>1.2.0</code>, then run the command ( it will take a little bit time to download docker image at first time ):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it --rm --name dockerbase-devbase-scala dockerbase/devbase-scala
</span></code></pre></td></tr></table></div></figure>


<p><em>NOTE</em>: With the option <code>--rm</code>, docker will remove the container when it exits automatically. Please make sure you save your documents before type <code>exit</code> from docker container.</p>

<p>On Mac, please refer to the ref[2] for Boot2Docker.</p>

<p><strong>References</strong>:</p>

<ol>
<li><a href="https://registry.hub.docker.com/u/dockerbase/devbase-scala/">https://registry.hub.docker.com/u/dockerbase/devbase-scala/</a></li>
<li><a href="https://docs.docker.com/installation/mac/">https://docs.docker.com/installation/mac/</a></li>
<li><a href="http://www.scala-lang.org/documentation/getting-started.html">http://www.scala-lang.org/documentation/getting-started.html</a></li>
<li><a href="https://github.com/lifuzu/HelloScala">https://github.com/lifuzu/HelloScala</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Programming for Andorid: Synchronize Actions With Handler]]></title>
    <link href="http://lifuzu.com/blog/2015/01/19/programming-for-andorid-synchronize-actions-with-handler/"/>
    <updated>2015-01-19T20:32:10-08:00</updated>
    <id>http://lifuzu.com/blog/2015/01/19/programming-for-andorid-synchronize-actions-with-handler</id>
    <content type="html"><![CDATA[<p><img src="http://rxtracepz.dirkrodgersconsu.netdna-cdn.com/wp-content/uploads/2010/02/synchronized-swimmers.jpg" alt="enter image description here" /></p>

<p>Sometimes, we need to synchronize the actions in a series but not in parallel. For example, we need to download an image then display it on Google Gallery. It seems we cannot display a partial image during downloading. OK, there is another story, probably, we will mention later, for displaying image with a coarse one then detailed the clear picture. Now let&rsquo;s fix how to download an image then display it, without manual interference.</p>

<p>This program bases on the last one: <a href="http://lifuzu.com/blog/2015/01/16/programming-for-android-download/">Programming for Android: Download, Progressbar and FileProvider</a></p>

<!--more-->


<p><strong>Steps</strong>:</p>

<p><em>1</em>. Declare a handler and a message ID, which we need to indicate what action is completed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Handler</span> <span class="n">handler</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">DOWNLOAD_COMPLETED</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>2</em>. Send out the message, when the first action is completed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>                <span class="c1">// send message to trigger the following event</span>
</span><span class='line'>                <span class="n">Message</span> <span class="n">msg</span> <span class="o">=</span> <span class="n">Message</span><span class="o">.</span><span class="na">obtain</span><span class="o">();</span>
</span><span class='line'>                <span class="n">msg</span><span class="o">.</span><span class="na">what</span> <span class="o">=</span> <span class="n">DOWNLOAD_COMPLETED</span><span class="o">;</span>
</span><span class='line'>                <span class="n">handler</span><span class="o">.</span><span class="na">sendMessage</span><span class="o">(</span><span class="n">msg</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>3</em>. Handle the message, then trigger the following action(s):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="n">handler</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Handler</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">handleMessage</span><span class="o">(</span><span class="n">Message</span> <span class="n">msg</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">switch</span> <span class="o">(</span><span class="n">msg</span><span class="o">.</span><span class="na">what</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">case</span> <span class="nl">DOWNLOAD_COMPLETED:</span>
</span><span class='line'>                    <span class="n">startDisplay</span><span class="o">();</span>
</span><span class='line'>                    <span class="k">break</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can clone the entire source code <a href="https://github.com/lifuzu/FileProviderExample">here</a> [2].</p>

<p><strong>References</strong>:</p>

<ol>
<li><a href="http://stackoverflow.com/questions/4592716/multithreading-question">http://stackoverflow.com/questions/4592716/multithreading-question</a></li>
<li><a href="https://github.com/lifuzu/FileProviderExample">https://github.com/lifuzu/FileProviderExample</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Programming for Android: Download, Progressbar and FileProvider]]></title>
    <link href="http://lifuzu.com/blog/2015/01/16/programming-for-android-download/"/>
    <updated>2015-01-16T17:50:20-08:00</updated>
    <id>http://lifuzu.com/blog/2015/01/16/programming-for-android-download</id>
    <content type="html"><![CDATA[<p><img src="https://turbotax.intuit.com/handlebars/noncampaign/hp/images/melissa-tablet.jpg" alt="enter image description here" />
In this article, we try to download a file from Internet, show the progress of downloading, then share the file to gallery for displaying with FileProvider.</p>

<p><strong>Keywords</strong>: Android, Programming, Download, Image, Progressbar, FileProvider</p>

<p><strong>Prerequisites</strong>:</p>

<p><em>0</em>. Create an Android project with name: FileProviderExample, you can also clone this project directly from github here: [<a href="https://github.com/lifuzu/FileProviderExample">3</a>]</p>

<p><strong>Steps</strong>:</p>

<p><em>1</em>. Download</p>

<p>We intend to download an image file with foreground mode since we want to block the consequent actions until the download process is complete. If you try to download file(s) with background mode, please reference some other articles <a href="http://stackoverflow.com/questions/3028306/download-a-file-with-android-and-showing-the-progress-in-a-progressdialog">here</a></p>

<!--more-->


<p>Update the activity layout file <code>res/layout/activity_main.xml</code> to add a button for downloading:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Button</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="na">android:id=</span><span class="s">&quot;@+id/btnDownload&quot;</span>
</span><span class='line'>    <span class="na">android:onClick=</span><span class="s">&quot;startDownload&quot;</span>
</span><span class='line'>    <span class="na">android:text=</span><span class="s">&quot;Download Image&quot;</span><span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>With the above update, we need to define a function named <code>startDownload</code> to trigger the download process:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">startDownload</span><span class="o">(</span><span class="n">View</span> <span class="n">view</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">download</span><span class="o">(</span><span class="s">&quot;http://farm1.static.flickr.com/114/298125983_0e4bf66782_b.jpg&quot;</span><span class="o">,</span> <span class="s">&quot;abc.jpg&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here we download an image from the above URL, and save it to direct local path with the name <code>abc.jpg</code>.</p>

<p>We design the download interface with a simple way. For the download function, what we want is a URL then a local file path that we saved the URL:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">download</span><span class="o">(</span><span class="kd">final</span> <span class="n">String</span> <span class="n">strUrl</span><span class="o">,</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">fileName</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>With the <code>Thread</code> support, we create the download precedure:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">new</span> <span class="nf">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">Runnable</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">getFilesDir</span><span class="o">(),</span> <span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">strUrl</span><span class="o">);</span>
</span><span class='line'>                <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="s">&quot;FILE_NAME&quot;</span><span class="o">,</span> <span class="s">&quot;File name is &quot;</span> <span class="o">+</span> <span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>                <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="s">&quot;FILE_URL&quot;</span><span class="o">,</span> <span class="s">&quot;File URL is &quot;</span> <span class="o">+</span> <span class="n">url</span><span class="o">);</span>
</span><span class='line'>                <span class="n">URLConnection</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">url</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
</span><span class='line'>                <span class="n">connection</span><span class="o">.</span><span class="na">connect</span><span class="o">();</span>
</span><span class='line'>                <span class="c1">// get the file length</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">fileLength</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">getContentLength</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">// download the file</span>
</span><span class='line'>                <span class="n">InputStream</span> <span class="n">input</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedInputStream</span><span class="o">(</span><span class="n">url</span><span class="o">.</span><span class="na">openStream</span><span class="o">());</span>
</span><span class='line'>                <span class="n">OutputStream</span> <span class="n">output</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="kt">byte</span> <span class="n">data</span><span class="o">[]</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">1024</span><span class="o">];</span>
</span><span class='line'>                <span class="kt">long</span> <span class="n">total</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">count</span><span class="o">;</span>
</span><span class='line'>                <span class="k">while</span> <span class="o">((</span><span class="n">count</span> <span class="o">=</span> <span class="n">input</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">data</span><span class="o">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">total</span> <span class="o">+=</span> <span class="n">count</span><span class="o">;</span>
</span><span class='line'>                    <span class="c1">// increase progress bar here</span>
</span><span class='line'>                    <span class="c1">// write data into file</span>
</span><span class='line'>                    <span class="n">output</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">count</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">// flush output and close streams</span>
</span><span class='line'>                <span class="n">output</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'>                <span class="n">output</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>                <span class="n">input</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>                <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="s">&quot;ERROR ON DOWNLOADING FILES&quot;</span><span class="o">,</span> <span class="s">&quot;ERROR IS&quot;</span> <span class="o">+</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}).</span><span class="na">start</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>From the above code, we save the file just direct local path, without any more directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>            <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">getFilesDir</span><span class="o">(),</span> <span class="n">fileName</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then we call <code>URLConnection</code> to connect the URL which we want to download:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>                <span class="n">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">strUrl</span><span class="o">);</span>
</span><span class='line'>                <span class="n">URLConnection</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">url</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
</span><span class='line'>                <span class="n">connection</span><span class="o">.</span><span class="na">connect</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>Read the input stream write to output stream recursively, until the input stream reach the end:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>                <span class="n">InputStream</span> <span class="n">input</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedInputStream</span><span class="o">(</span><span class="n">url</span><span class="o">.</span><span class="na">openStream</span><span class="o">());</span>
</span><span class='line'>                <span class="n">OutputStream</span> <span class="n">output</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="kt">byte</span> <span class="n">data</span><span class="o">[]</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">1024</span><span class="o">];</span>
</span><span class='line'>                <span class="kt">long</span> <span class="n">total</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">count</span><span class="o">;</span>
</span><span class='line'>                <span class="k">while</span> <span class="o">((</span><span class="n">count</span> <span class="o">=</span> <span class="n">input</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">data</span><span class="o">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">total</span> <span class="o">+=</span> <span class="n">count</span><span class="o">;</span>
</span><span class='line'>                    <span class="n">output</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">count</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then flush the output incase some data left in memory, and close the streams:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>                <span class="n">output</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'>                <span class="n">output</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>                <span class="n">input</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>One more thing before compiling a successful application is to check permission, we need an Internet permission to download the image. We need to add the permission into <code>manifests/AndroidManifest.xml</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.INTERNET&quot;</span><span class="nt">&gt;&lt;/uses-permission&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>To verify the download function, run the application on Android device, click the button <code>DOWNLOAD IMAGE</code>
<img src="https://lh4.googleusercontent.com/ttxff19bogmzdV1aX7HC-JsiB4w0irGnqvj1Z3JPf-4=s600" title="Screen Shot 2015-01-16 at 10.08.35 AM.png" alt="enter image description here" />
Nothing seems happen, since we do not have any vision way to indicate the download progress is completed right now. For verification, we need adb to enter Android file system to have a file check.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>adb devices
</span><span class='line'><span class="nv">$ </span>adb shell
</span><span class='line'>root@vbox86tp:/ <span class="c">#  ls /data/data/com.example.rlee.fileproviderexample/files/</span>
</span><span class='line'>abc.jpg
</span></code></pre></td></tr></table></div></figure>


<p>Cool, the file <code>abc.jpg</code> is downloaded from the URL <code>http://farm1.static.flickr.com/114/298125983_0e4bf66782_b.jpg</code>. You even would like to pull the file into desktop then have an exact content check:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>adb pull /data/data/com.example.rlee.fileproviderexample/files/abc.jpg
</span></code></pre></td></tr></table></div></figure>


<p>Then open it in File Explorer (like Finder for Mac OS), and open the URL in brower (like Chrome) to have a comparison.</p>

<p><em>2</em>. Progressbar to show the status of download</p>

<p>To display the status of downloading, we need ProgressDialog component, which will show a progress indicator and an optional text message or view.</p>

<p>We need add a declaration for the ProgressDialog in the class <code>MainActivity</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// Progress Bar</span>
</span><span class='line'><span class="n">ProgressDialog</span> <span class="n">progressDialog</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Initialize the variable with activity instance under the function <code>onCreate</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="n">progressDialog</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProgressDialog</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>When we start to download the image, we need to set the initial state for the progress bar:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="n">progressDialog</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">&quot;Downloading Image ...&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">progressDialog</span><span class="o">.</span><span class="na">setMessage</span><span class="o">(</span><span class="s">&quot;Download in progress ...&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">progressDialog</span><span class="o">.</span><span class="na">setProgressStyle</span><span class="o">(</span><span class="n">progressDialog</span><span class="o">.</span><span class="na">STYLE_HORIZONTAL</span><span class="o">);</span>
</span><span class='line'>    <span class="n">progressDialog</span><span class="o">.</span><span class="na">setProgress</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>    <span class="n">progressDialog</span><span class="o">.</span><span class="na">setMax</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>
</span><span class='line'>    <span class="n">progressDialog</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>And we have the image size which we will download:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>                <span class="c1">// get the file length</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">fileLength</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">getContentLength</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>After we read and write some partial data, we update the state for progress bar:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>                    <span class="c1">// increase progress bar here</span>
</span><span class='line'>                    <span class="n">progressDialog</span><span class="o">.</span><span class="na">setProgress</span><span class="o">((</span><span class="kt">int</span><span class="o">)(</span><span class="n">total</span><span class="o">*</span><span class="mi">100</span><span class="o">)/</span><span class="n">fileLength</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>At last, when we complete the download, we dismiss the progress bar:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>                <span class="c1">// dismiss the progress bar</span>
</span><span class='line'>                <span class="n">progressDialog</span><span class="o">.</span><span class="na">dismiss</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>To verify the progress bar, try to find a big jpg image file on Internet, then replace the URL in download function.
Run the application on Android device, click the button <code>DOWNLOAD IMAGE</code> again, you should see the progressbar like this:
<img src="https://lh4.googleusercontent.com/-dqDPYup6e6w/VLlh3vI0zlI/AAAAAAAACuE/kbQ1Gxy6Kv0/s600/Screen+Shot+2015-01-16+at+11.08.44+AM.png" title="Screen Shot 2015-01-16 at 11.08.44 AM.png" alt="enter image description here" /></p>

<p><em>3</em>. Show the file with FileProvider</p>

<p>Android do NOT allow apps to access the private folder of another application. To share our downloaded image, we have to offer the image to other applications from our side. With FileProvider, we can share the file in my own app domain to other apps.</p>

<p>For FileProvider, we need to add the provider element in android manifest file <code>manifests/AndroidManifest.xml</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>    <span class="nt">&lt;provider</span>
</span><span class='line'>        <span class="na">android:authorities=</span><span class="s">&quot;com.example.rlee.fileproviderexample.fileprovider&quot;</span>
</span><span class='line'>        <span class="na">android:name=</span><span class="s">&quot;android.support.v4.content.FileProvider&quot;</span>
</span><span class='line'>        <span class="na">android:grantUriPermissions=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>        <span class="na">android:exported=</span><span class="s">&quot;false&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;meta-data</span>
</span><span class='line'>            <span class="na">android:name=</span><span class="s">&quot;android.support.FILE_PROVIDER_PATHS&quot;</span>
</span><span class='line'>            <span class="na">android:resource=</span><span class="s">&quot;@xml/filepaths&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/provider&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>then add a new file under <code>res/xml</code> with the name <code>filepaths.xml</code> (create the xml folder if it does not exist), with the content:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;paths</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;files-path</span> <span class="na">path=</span><span class="s">&quot;.&quot;</span> <span class="na">name=</span><span class="s">&quot;image&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/paths&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Add another button to trigger an intent to display the image in <code>res/layout/activity_main.xml</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Button</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="na">android:id=</span><span class="s">&quot;@+id/btnDisplay&quot;</span>
</span><span class='line'>    <span class="na">android:onClick=</span><span class="s">&quot;startDisplay&quot;</span>
</span><span class='line'>    <span class="na">android:text=</span><span class="s">&quot;Display Image......&quot;</span><span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the function <code>startDisplay</code>, which defined in the above code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">startDisplay</span><span class="o">(</span><span class="n">View</span> <span class="n">view</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// show jpg in gallery</span>
</span><span class='line'>    <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">getFilesDir</span><span class="o">(),</span> <span class="s">&quot;abc.jpg&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Uri</span> <span class="n">fileUri</span> <span class="o">=</span> <span class="n">FileProvider</span><span class="o">.</span><span class="na">getUriForFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;com.example.rlee.fileproviderexample.fileprovider&quot;</span><span class="o">,</span> <span class="n">file</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="n">Intent</span><span class="o">.</span><span class="na">ACTION_VIEW</span><span class="o">);</span>
</span><span class='line'>    <span class="n">intent</span><span class="o">.</span><span class="na">setDataAndType</span><span class="o">(</span><span class="n">fileUri</span><span class="o">,</span> <span class="s">&quot;image/*&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">intent</span><span class="o">.</span><span class="na">addFlags</span><span class="o">(</span>
</span><span class='line'>            <span class="n">Intent</span><span class="o">.</span><span class="na">FLAG_GRANT_READ_URI_PERMISSION</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="s">&quot;FILE_URI&quot;</span><span class="o">,</span> <span class="s">&quot;File Uri is &quot;</span> <span class="o">+</span> <span class="n">Uri</span><span class="o">.</span><span class="na">fromFile</span><span class="o">(</span><span class="n">file</span><span class="o">));</span>
</span><span class='line'>    <span class="n">startActivity</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>To verify the display function, run the application on Android device, click the button <code>DISPLAY IMAGE ......</code>
<img src="https://lh5.googleusercontent.com/-9CgNpo_-BFI/VLlT17IEKMI/AAAAAAAACtc/O2ec7Ia5Uj0/s600/Screen+Shot+2015-01-16+at+10.08.35+AM.png" title="Screen Shot 2015-01-16 at 10.08.35 AM.png" alt="enter image description here" />
Then the image will be displayed by the Android Gallery application:
<img src="https://lh6.googleusercontent.com/-X3R3BNX123M/VLlUKn-K1EI/AAAAAAAACto/IHuToVCF8wI/s600/Screen+Shot+2015-01-16+at+10.08.56+AM.png" title="Screen Shot 2015-01-16 at 10.08.56 AM.png" alt="enter image description here" /></p>

<p>If you have any question, please add comments below or submit issues <a href="https://github.com/lifuzu/FileProviderExample/issues">here</a>.</p>

<p>Have fun to try!</p>

<p><strong>Tips</strong>:
<a href="https://www.genymotion.com/?utm_source=dlvr.it&amp;utm_medium=twitter#!/product">Genymotion</a> might be your friend.</p>

<p><strong>References</strong>:</p>

<ol>
<li><a href="https://developer.android.com/training/secure-file-sharing/setup-sharing.html">https://developer.android.com/training/secure-file-sharing/setup-sharing.html</a></li>
<li><a href="https://developer.android.com/training/secure-file-sharing/share-file.html">https://developer.android.com/training/secure-file-sharing/share-file.html</a></li>
<li><a href="https://github.com/lifuzu/FileProviderExample">https://github.com/lifuzu/FileProviderExample</a></li>
<li><a href="http://stackoverflow.com/questions/3028306/download-a-file-with-android-and-showing-the-progress-in-a-progressdialog">http://stackoverflow.com/questions/3028306/download-a-file-with-android-and-showing-the-progress-in-a-progressdialog</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Design a Reuse and 'De-use' Modularized Software System]]></title>
    <link href="http://lifuzu.com/blog/2015/01/14/design-a-reuse-and-de-use-modularized-software-system/"/>
    <updated>2015-01-14T09:49:13-08:00</updated>
    <id>http://lifuzu.com/blog/2015/01/14/design-a-reuse-and-de-use-modularized-software-system</id>
    <content type="html"><![CDATA[<p><img src="http://www.edmentum.com/sites/edmentum.com/files/solutions/content/building_0.jpg" alt="enter image description here" /></p>

<h2>Design a reuse and &lsquo;de-use&rsquo; modularized software system</h2>

<p><strong>Keywords</strong>: reuse, &lsquo;de-use&rsquo;, minimum equipped interface (MEI), strong cohesion, loose coupling, software engineering</p>

<p>Most of the task on software design are to analyze requirements, decompose functionalities and connect the parts of artifacts to fulfill customer requirements.</p>

<p>This time we focus on decomposition of functionalities. Why we need to decompose the requirements to each small module or package, one of the reasons is to reuse them, another reason, I think, is to &lsquo;de-use&rsquo; them. When we do not need any of modules, we can separate them from system very easily, which also provide much convenience for testing. We can test each of the seperated modules, packages or interfaces isolated, without interference between each other.</p>

<p>The goal of the software design, include architectural design and detail design, is to decompose functionalities with the characteristics of strong cohesive, and loose coupled, which means we need a complete, but most minimal system function set. Interface is a very important element between two systems to access those functionalities, in addition to deployment environment. In fact, we can treat the environment as the interface between system and the system host. So we need a minimum equipped interface (MEI), which refers to Minimum Viable Product (MVP) definition.</p>

<p>To achieve the goal, besides an elegant design blueprint, functional prototyping, we also need supports from configuration management and testing. We should have many different configuration profiles to include or exclude the modules according to the reuse and &lsquo;de-use&rsquo; specifications, which we planned in design. Testing should have different test scenarios to verify and/or validate the interfaces, which are exported by modules or packages according the configuration profiles.</p>

<p>Succeed to DCOM and CORBA, the popular technology so far for designing a strong cohesive and loose coupled interface on cloud is REST, which based on the simple HTTP protocol verbs (GET, PUT, POST, DELETE). REST API is an analogous to SQL for interaction between systems on cloud, the latter provides several common verbs to query and manipulate data with relational database, such as SELECT, INSERT, UPDATE, DELETE, etc.</p>

<p>In a conclusion, as the main task for design, we need to decompose functionalities in order to reuse and &lsquo;de-use&rsquo; modules, which act as a container to host functions. The design goal is to make functionality as most as strong cohesive, and loose coupled. We can leverage configuration management and testing to achieve the design goal. REST interface provides a good practice for designing a strong cohesive, and loose coupled cloud system.</p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Mongo Database Master Slave Replication]]></title>
    <link href="http://lifuzu.com/blog/2015/01/07/setup-mongo-database-master-slave-replication/"/>
    <updated>2015-01-07T13:58:40-08:00</updated>
    <id>http://lifuzu.com/blog/2015/01/07/setup-mongo-database-master-slave-replication</id>
    <content type="html"><![CDATA[<p><img src="http://tapainc.com/images/MongoDB.png" alt="enter image description here" /></p>

<p><strong>Prerequisites</strong>:</p>

<p>You need know the IP or hostname of the Mongo database which should be acted as a master, and you can ping the port 27017 from the mongo database which should be acted as a slave.</p>

<p>Here are some commands might be helpful:</p>

<ul>
<li>To know the external IP of the server:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl http://checkip.dyndns.org/</span></code></pre></td></tr></table></div></figure>


<ul>
<li>To ping the server which you want to connect, on the specific port ( for example: 27017 ):</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ telnet 1.2.3.4 27017</span></code></pre></td></tr></table></div></figure>


<p><strong>Practices</strong>:</p>

<p>Machine A (Master):
Run Mongo Daemon as master:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mongod --master
</span></code></pre></td></tr></table></div></figure>


<p>Machine B (Slave):
If mongod is running, which is the default behavior when installed, you should stop it before the following steps:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Stop the mongodb which installed by default</span>
</span><span class='line'><span class="nv">$ </span>sudo stop mongodb
</span></code></pre></td></tr></table></div></figure>


<p>Run Mongo Daemon as slave:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mongod --slave
</span></code></pre></td></tr></table></div></figure>


<p>Probably you need to specify the dbpath, in case you have any disk space limitation:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo mongod --slave --dbpath /data/mongodb/
</span></code></pre></td></tr></table></div></figure>


<p>Run <code>mongo</code> to open a mongo shell, then config for replication:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; use <span class="nb">local</span>
</span><span class='line'>&gt; db.sources.find<span class="o">()</span>
</span><span class='line'>&gt; db.sources.insert<span class="o">(</span> <span class="o">{</span> host: &lt;masterhostname&gt; &lt;,only: databasename&gt; <span class="o">}</span> <span class="o">)</span>;
</span></code></pre></td></tr></table></div></figure>


<p>Then you run <code>show dbs</code> in the mongo shell:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; show dbs
</span></code></pre></td></tr></table></div></figure>


<p>You will find the databasename which we typed behind the <code>only</code> key above displayed.</p>

<p>You may need to run the command multiple times to make sure the replication is going on. For example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; show dbs
</span><span class='line'>databasename    17.9453125GB
</span><span class='line'><span class="nb">local   </span>0.078125GB
</span><span class='line'>&gt; show dbs
</span><span class='line'>databasename    19.9443359375GB
</span></code></pre></td></tr></table></div></figure>


<p>You can also run the following commands to show the information of the replication on master and slave side:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Master side:</span>
</span><span class='line'>&gt; rs.printReplicationInfo<span class="o">()</span> <span class="c"># replace &#39;rs&#39; to &#39;db&#39; for the version prior to 2.6</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Slave side:</span>
</span><span class='line'>&gt; rs.printSlaveReplicationInfo<span class="o">()</span> <span class="c"># same thing as the above command, you need to replace &#39;rs&#39; to &#39;db&#39; if you run the mongodb which version prior to 2.6</span>
</span></code></pre></td></tr></table></div></figure>


<p>Besides, you can run the following command to get a defail status of the server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.serverStatus<span class="o">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>You might neet to run resync to recover replication:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; use admin
</span><span class='line'>&gt; db.runCommand<span class="o">(</span> <span class="o">{</span> resync: 1 <span class="o">}</span> <span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>References</strong>:</p>

<ol>
<li><a href="http://docs.mongodb.org/manual/core/master-slave/">http://docs.mongodb.org/manual/core/master-slave/</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Gollum]]></title>
    <link href="http://lifuzu.com/blog/2014/08/22/install-gollum/"/>
    <updated>2014-08-22T11:57:46-07:00</updated>
    <id>http://lifuzu.com/blog/2014/08/22/install-gollum</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-DUpioC7fb_I/U_eSdHggv1I/AAAAAAAACYU/4VJAsLqqCSE/s600/Screen+Shot+2014-08-22+at+11.56.27+AM.png" title="Screen Shot 2014-08-22 at 11.56.27 AM.png" alt="gollum snapshot" /></p>

<p>Gollum is a simple wiki system built on top of Git.</p>

<p>Gollum wikis are simply Git repositories that adhere to a specific format. Gollum pages may be written in a variety of formats and can be edited in a number of ways depending on your needs. You can edit your wiki locally:</p>

<ul>
<li>With your favorite text editor or IDE (changes will be visible after committing).</li>
<li>With the built-in web interface.</li>
<li>With the Gollum Ruby API.</li>
</ul>


<p>Here are steps to install gollum.</p>

<!-- more -->


<h3>Install some dependencies:</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install libicu-dev</span></code></pre></td></tr></table></div></figure>


<h3>Install Gollum with RubyGems:</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install gollum</span></code></pre></td></tr></table></div></figure>


<h3>Install some text format</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install redcarpet
</span><span class='line'>gem install github-markdown</span></code></pre></td></tr></table></div></figure>


<h3>Create a local git repo on host</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir repos/gollum
</span><span class='line'>cd repos/gollum
</span><span class='line'>git init .</span></code></pre></td></tr></table></div></figure>


<h3>Run the gollum</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gollum</span></code></pre></td></tr></table></div></figure>


<p>This will start up a web server running the Gollum frontend and you can view and edit your wiki at <a href="http://">http://</a><code>&lt;host&gt;</code>:4567.</p>

<h3>BUILDING THE GEM FROM MASTER</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem uninstall -aIx gollum
</span><span class='line'>$ git clone https://github.com/gollum/gollum.git
</span><span class='line'>$ cd gollum
</span><span class='line'>gollum$ rake build
</span><span class='line'>gollum$ gem install --no-ri --no-rdoc pkg/gollum*.gem</span></code></pre></td></tr></table></div></figure>


<h3>RUN THE TESTS</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bundle install
</span><span class='line'>$ bundle exec rake test</span></code></pre></td></tr></table></div></figure>


<h3>RUNNING WITH UPSTART</h3>

<p>Create a wrapper to include environment information:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rvm alias create mygollum ruby-2.1.2@mygollum
</span><span class='line'>$ rvm alias list
</span><span class='line'># $HOME/.rvm/wrappers/mygollum/gollum</span></code></pre></td></tr></table></div></figure>


<p>Create a config file under /etc/init, name it <code>gollum.cong</code>, as:
<a href="https://gist.github.com/lifuzu/31af0dc859bf9bfb6da5">https://gist.github.com/lifuzu/31af0dc859bf9bfb6da5</a>
Start/Stop the service:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sudo start gollum
</span><span class='line'>$ sudo stop gollum</span></code></pre></td></tr></table></div></figure>


<p>You can get the log file at /var/log/upstart/gollum.log to analyze:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vi /var/log/upstart/gollum.log </span></code></pre></td></tr></table></div></figure>


<h3>RUNNING WITH NGINX</h3>

<p>Create a subdomain like &lsquo;gollum.weimed.com&rsquo; point to your server IP;
Create a nginx configuration file, as /etc/nginx/sites-available/stackedit.weimed.com:
<a href="https://gist.github.com/lifuzu/2f2ce9095ba4a6969b2c">https://gist.github.com/lifuzu/2f2ce9095ba4a6969b2c</a>
Create a symbolic link to enable it</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo ln -s /etc/nginx/sites-available/gollum.weimed.com /etc/nginx/sites-enabled/gollum.weimed.com</span></code></pre></td></tr></table></div></figure>


<p>Check the configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo nginx -t
</span><span class='line'>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
</span><span class='line'>nginx: configuration file /etc/nginx/nginx.conf test is successful</span></code></pre></td></tr></table></div></figure>


<p>Reload the configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo service nginx reload</span></code></pre></td></tr></table></div></figure>


<p>You should see: <a href="http://gollum.weimed.com/">http://gollum.weimed.com/</a></p>

<h3>AUTH</h3>

<p>TODO, please refer to [5], [6]</p>

<h3>References:</h3>

<ol>
<li><a href="https://github.com/gollum/gollum">https://github.com/gollum/gollum</a></li>
<li><a href="https://gist.github.com/leon/2643936">https://gist.github.com/leon/2643936</a></li>
<li><a href="http://rvm.io/integration/init-d">http://rvm.io/integration/init-d</a></li>
<li><a href="https://github.com/rvm/rvm-site-setup/blob/master/conf/smfbot.conf">https://github.com/rvm/rvm-site-setup/blob/master/conf/smfbot.conf</a></li>
<li><a href="http://www.mfoot.com/blog/2013/05/19/setting-up-a-personal-wiki-with-aws-and-gollum/">http://www.mfoot.com/blog/2013/05/19/setting-up-a-personal-wiki-with-aws-and-gollum/</a></li>
<li><a href="https://github.com/roman/rack-auth">https://github.com/roman/rack-auth</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Nodejs Using NVM]]></title>
    <link href="http://lifuzu.com/blog/2014/08/20/install-nodejs-using-nvm/"/>
    <updated>2014-08-20T11:44:12-07:00</updated>
    <id>http://lifuzu.com/blog/2014/08/20/install-nodejs-using-nvm</id>
    <content type="html"><![CDATA[<p><img src="https://lh3.googleusercontent.com/-1_vzgrh5dnI/U_Tq8koEceI/AAAAAAAACYA/S8xhWfrGSoE/s600/Screen+Shot+2014-08-20+at+11.36.59+AM.png" title="Screen Shot 2014-08-20 at 11.36.59 AM.png" alt="enter image description here" /></p>

<p>An alternative to installing Node.js through apt is to use a specially designed tool called nvm, which stands for &ldquo;Node.js version manager&rdquo;.</p>

<p>Using nvm, you can install multiple, self-contained versions of Node.js which will allow you to control your environment easier. It will give you on-demand access to the newest versions of Node.js, but will also allow you to target previous releases that your app may depend on.</p>

<!-- more -->


<h3>Install prerequisite package</h3>

<p>To start off, we&rsquo;ll need to get the software packages from our Ubuntu repositories that will allow us to build source packages. The nvm script will leverage these tools to build the necessary components:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install build-essential libssl-dev</span></code></pre></td></tr></table></div></figure>


<h3>Install nvm</h3>

<p>Once the prerequisite packages are installed, you can pull down the nvm installation script from the project&rsquo;s GitHub page. The version number may be different, but in general, you can download and install it with the following syntax:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl https://raw.githubusercontent.com/creationix/nvm/v0.13.1/install.sh | bash</span></code></pre></td></tr></table></div></figure>


<p>This will download the script and run it. It will install the software into a subdirectory of your home directory at ~/.nvm. It will also add the necessary lines to your ~/.profile file to use the file.</p>

<p>To gain access to the nvm functionality, you&rsquo;ll need to log out and log back in again, or you can source the ~/.profile file so that your current session knows about the changes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>source ~/.profile</span></code></pre></td></tr></table></div></figure>


<p>Now that you have nvm installed, you can install isolated Node.js versions.</p>

<h3>Install nodejs</h3>

<p>To find out the versions of Node.js that are available for installation, you can type:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nvm ls-remote
</span><span class='line'>. . .
</span><span class='line'> v0.11.6
</span><span class='line'> v0.11.7
</span><span class='line'> v0.11.8
</span><span class='line'> v0.11.9
</span><span class='line'>v0.11.10
</span><span class='line'>v0.11.11
</span><span class='line'>v0.11.12
</span><span class='line'>v0.11.13</span></code></pre></td></tr></table></div></figure>


<p>As you can see, the newest version at the time of this writing is v0.11.13. You can install that by typing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nvm install 0.11.13</span></code></pre></td></tr></table></div></figure>


<p>Usually, nvm will switch to use the most recently installed version. You can explicitly tell nvm to use the version we just downloaded by typing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nvm use 0.11.13</span></code></pre></td></tr></table></div></figure>


<p>When you install Node.js using nvm, the executable is called node. You can see the version currently being used by the shell by typing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ node -v
</span><span class='line'>v.0.11.13
</span><span class='line'>$ npm -v
</span><span class='line'>1.4.9</span></code></pre></td></tr></table></div></figure>


<p>If you have multiple Node.js versions, you can see what is installed by typing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ nvm ls
</span><span class='line'>-&gt;  v0.11.13
</span><span class='line'>      system</span></code></pre></td></tr></table></div></figure>


<p>If you wish to default one of the versions, you can type:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ nvm alias default 0.11.13</span></code></pre></td></tr></table></div></figure>


<p>This version will be automatically selected when a new session spawns. You can also reference it by the alias like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ nvm use default</span></code></pre></td></tr></table></div></figure>


<p>Each version of Node.js will keep track of its own packages and has npm available to manage these.</p>

<h3>Install nodejs packages with npm</h3>

<p>You can have npm install packages to the Node.js project&rsquo;s ./node_modules directory by using the normal format:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ npm install express</span></code></pre></td></tr></table></div></figure>


<p>If you&rsquo;d like to install it globally (available to the other projects using the same Node.js version), you can add the -g flag:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ npm install -g express</span></code></pre></td></tr></table></div></figure>


<p>This will install the package in:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>~/.nvm/node_version/lib/node_modules/package_name</span></code></pre></td></tr></table></div></figure>


<p>Installing globally will let you run the commands from the command line, but you&rsquo;ll have to use link the package into your local sphere to require it from within a program:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm link express</span></code></pre></td></tr></table></div></figure>


<p>You can learn more about the options available to you with nvm by typing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nvm help</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>

<h3>Reference:</h3>

<ol>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-an-ubuntu-14-04-server">https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-an-ubuntu-14-04-server</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[加入 Apple iOS 开发者计划]]></title>
    <link href="http://lifuzu.com/blog/2014/08/17/join-apple-ios-program/"/>
    <updated>2014-08-17T10:05:48-07:00</updated>
    <id>http://lifuzu.com/blog/2014/08/17/join-apple-ios-program</id>
    <content type="html"><![CDATA[<h1>起步</h1>

<p>学习开发 iOS 应用程序的第一步是理解注册为 Apple 开发者和 iOS 开发者计划会员的不同。然后决定你在什么时候付费加入 iOS 开发者计划。本章就来谈论一下 Apple 开发者和 iOS 开发者计划的差别，大概需要的费用以及加入开发者计划的好处。最后，一步步告诉大家怎么样加入这些计划成为会员。</p>

<h3>注册成为 Apple 开发者</h3>

<p>注册成为 Apple 开发者不需要费用，很简单，访问以下链接：</p>

<p><a href="http://developer.apple.com/programs/register/">http://developer.apple.com/programs/register/</a></p>

<p>然后按照要求一步步开始注册。
使用 Apple ID 进行注册，这个 Apple ID 就是用来在 iTunes 或者 Apple Store 上面购买商品的账号。
完成这个注册，就可以获得一些开发者资源，例如在线文档，教程等等。开发者也能够下载旧版的 iOS 开发包（SDK），以及 Xcode 开发环境（IDE）。</p>

<!-- more -->


<h3>下载 Xcode 6 (Beta) IDE 和 iOS 8 SDK</h3>

<p>最新版的 iOS SDK 和 Xcode 可以在 Apple App Store 上面免费下载。鉴于支持 Swift 的 Xcode
6 还是 Beta 版本，我们需要在以下这个网址下载：</p>

<p><a href="https://developer.apple.com/xcode/downloads/">https://developer.apple.com/xcode/downloads/</a></p>

<p>因为这些工具是免费的，那还需要升级加入 iOS 开发者计划吗？是不是保持为 Apple 开发者就足够了。鉴于此，全面理解 iOS 开发者计划是很重要的。</p>

<h3>iOS 开发者计划</h3>

<p>加入 iOS 开发者计划会员费为每年99美元。前面说过，iOS 开发者计划会员可以下载最新版的 iOS SDK 以及 Xcode 开发环境。而且，iOS 开发者计划会员还有以下几点关键好处：</p>

<ol>
<li><p>iOS 开发者计划会员可以创建证书和配置文件，以便在真实设备（而不是虚拟机）上测试应用程序。虽然 Xcode 包含了设备模拟器，允许很大部分的测试在上面运行，然而还是有一部分功能，例如定位跟踪，以及设备移动，只能够在真实设备上全面测试。特别重要的是，iCloud 的访问，提醒和应用内购买，只能当应用程序在物理设备上运行时进行测试。</p></li>
<li><p>更重要的是，iOS 开发者计划的会员可以不受限制地访问全系列与最新的 iOS SDK 和对应的指南和教程，有机会获得来自苹果的 iOS 技术支持工程师的技术支持（虽然每年的费用仅仅包括两个支持事件报告）。</p></li>
<li><p>目前iOS开发者计划中最重要的好处是，必须成为成员才可以在 App Store 中的发布为了出售或免费下载的应用程序。</p></li>
</ol>


<p>显然，在你的应用程序上传 App Store 在某一点之前，iOS开发者计划的成员资格将被要求。唯一的问题是，什么时候注册。</p>

<h3>什么时候注册 iOS 开发者计划</h3>

<p>很明显，iOS 开发者计划的会员有很多好处，而且最终，必须成为会员才能够开始销售应用程序。至于是否现在缴纳报名费或以后，主要视乎个别情况而定。如果你仍然在学习开发 iOS 应用程序的早期阶段，或者还没有拿出一个很好的主意开发应用程序，你就只是需要注册 Apple 开发者。随着你的技能水平的提高，你的想法，应用开发初具规模，到那个时候就可以加入了iOS 开发者计划了。毕竟，日后总是可以报名加入开发者计划的。
另一方面，如果你有对自己有信心，你的应用程序准备发布或你知道需要在物理设备上测试一个的应用程序的功能，而不是能在模拟器里测试了，那么就加入开发者计划吧，宜早不宜迟。</p>

<h3>加入 iOS 开发者计划</h3>

<p>如果你的目标是为您的雇主开发 iOS 应用程序，首先需要检查你们公司是否已经拥有会员资格。如果已经拥有，请与你的公司的程序管理员联系，让他们从 iOS 开发者计划会员中心给你发送邀请，来加入团队。一旦他们这样做了，苹果会发送邮件告知你已经被邀请加入，邮件中含有一个链接，点击链接来激活你的会员资格。如果你或你的公司不是 iOS 开发者计划会员，您可以在网上报名参加：</p>

<p><a href="https://developer.apple.com/programs/ios/">https://developer.apple.com/programs/ios/</a></p>

<p><img src="https://lh4.googleusercontent.com/-B_5q_23G9eo/U-ccIbGr89I/AAAAAAAACVE/dLyAUC2dJGs/s600/Screen+Shot+2014-08-09+at+11.58.29+PM.png" title="Screen Shot 2014-08-09 at 11.58.29 PM.png" alt="enter image description here" /></p>

<p>点击按钮“Enroll Now”，你会看到以下界面：
<img src="https://lh5.googleusercontent.com/-qEoXluyTXdk/U-ccuPCliyI/AAAAAAAACVQ/o2zVICVQLTI/s600/Screen+Shot+2014-08-09+at+11.58.35+PM.png" title="Screen Shot 2014-08-09 at 11.58.35 PM.png" alt="enter image description here" /></p>

<p>继续点击按钮“Continue”：
<img src="https://lh5.googleusercontent.com/-gqQyEfGBRrY/U-cdG8Te43I/AAAAAAAACVg/sKKoDloLZbE/s600/Screen+Shot+2014-08-10+at+12.00.51+AM.png" title="Screen Shot 2014-08-10 at 12.00.51 AM.png" alt="enter image description here" /></p>

<p>选择已有的 Apple ID 或者创建一个新的账号。如果是创建一个新的账号，之后的界面需要输入一些个人信息。之后，你会看到以下界面，点击按钮“Continue”：
<img src="https://lh4.googleusercontent.com/-4BqH51hVbOo/U-cd-8GVBLI/AAAAAAAACV0/w5FhDRnCFXE/s600/Screen+Shot+2014-08-10+at+12.06.14+AM.png" title="Screen Shot 2014-08-10 at 12.06.14 AM.png" alt="enter image description here" /></p>

<p>你需要按照要求选择适合自己的选项，例如，是个人开发者，还是公司开发者：
<img src="https://lh4.googleusercontent.com/-Pic2Qq9Hj3E/U-hl0oX9c6I/AAAAAAAACWs/PHmdeRviXoA/s600/Screen+Shot+2014-08-10+at+12.35.48+AM.png" title="Screen Shot 2014-08-10 at 12.35.48 AM.png" alt="enter image description here" /></p>

<p>继续按照屏幕提示进行，直至完成付费。</p>

<p>现在你需要等待申请批准，账号被激活。</p>

<p>在你等待的这个时间，你可以用你申请时使用的账号和密码登录会员中心：</p>

<p><a href="http://developer.apple.com/membercenter">http://developer.apple.com/membercenter</a></p>

<p>登录以后，点击网页上方“Your Account”，将会显示你之前的申请状态为“Enrollment Pending”：
<img src="https://lh4.googleusercontent.com/--zjVcNRCKCM/U-hmxO7TivI/AAAAAAAACXE/HwSXSe2ATOA/s600/Screen+Shot+2014-08-10+at+11.45.23+PM.png" title="Screen Shot 2014-08-10 at 11.45.23 PM.png" alt="enter image description here" /></p>

<p>当你收到账号激活的邮件，再次登录进会员中心，你就能看到很多的选择，以及资源显示出来，如下图所示：</p>

<p><img src="https://lh6.googleusercontent.com/-EpxJlJRDOU4/U-6dsYX-ccI/AAAAAAAACXk/_m28-ERYSeY/s600/Screen+Shot+2014-08-15+at+4.53.34+PM.png" title="Screen Shot 2014-08-15 at 4.53.34 PM.png" alt="register iOS program done" /></p>

<h3>小结</h3>

<p>准备 iOS 应用程序开发的一个重要步骤就是注册成为 Apple 开发者，以及在必要时刻升级为 iOS 的开发者计划会员。本章概述了以上两种计划的不同，提供了如何加入计划的步骤，以及简要的描述了注册的步骤。</p>

<p>下一步是下载 iOS SDK 和Xcode 6（Beta）开发环境。</p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing With Gerrit Jira Plugin]]></title>
    <link href="http://lifuzu.com/blog/2014/08/05/playing-with-gerrit-jira-plugin/"/>
    <updated>2014-08-05T11:05:16-07:00</updated>
    <id>http://lifuzu.com/blog/2014/08/05/playing-with-gerrit-jira-plugin</id>
    <content type="html"><![CDATA[<p><img src="https://lh5.googleusercontent.com/dDJ6IKUAZN5IZMlt8CmQic457z5BKfJ4WdqXrH2sf5s=s650" title="Gerrit" alt="Gerrit" /></p>

<h3>Build and Setup</h3>

<p><strong>1</strong>. Clone the Gerrit source:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone https://gerrit.googlesource.com/gerrit
</span></code></pre></td></tr></table></div></figure>


<p><strong>2</strong>. Checkout to version 2.8 (2.8 is the latest stable version), include to update submodules:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>gerrit
</span><span class='line'><span class="nv">$ </span>git checkout -b stable-2.8 stable-2.8
</span><span class='line'><span class="nv">$ </span>git submodule update --init --rebase <span class="c"># commands, please referece to git submodule</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>3</strong>. Clone buck, buck is the build system for the latest Gerrit, then build it with ant (&lsquo;sudo apt-get install ant&rsquo;):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone https://gerrit.googlesource.com/buck
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>buck
</span><span class='line'><span class="nv">$ </span>ant
</span></code></pre></td></tr></table></div></figure>


<p><strong>4</strong>. Install buck to be accessed globally:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir ~/bin
</span><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span>~/bin:<span class="nv">$PATH</span>
</span><span class='line'><span class="nv">$ </span>ln -s <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/bin/buck ~/bin/
</span><span class='line'><span class="nv">$ </span>ln -s <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/bin/buckd ~/bin/
</span><span class='line'><span class="nv">$ </span>which buck
</span></code></pre></td></tr></table></div></figure>


<p><strong>5</strong>. Build Gerrit:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>gerrit
</span><span class='line'><span class="nv">$ </span>buck build gerrit
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><strong>NOTE:</strong> The gerrit.war will be generated here: buck-out/gen/gerrit.war</p></blockquote>

<p><strong>6</strong>. Build extension, plugin, GWT API jar files, and install them:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>buck build api
</span><span class='line'><span class="nv">$ </span>buck build api_install
</span></code></pre></td></tr></table></div></figure>


<p><strong>7</strong>. Build all core plugins (optional):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>buck build plugins:core
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><strong>NOTE:</strong> All core plugins will be generated here: buck-out/gen/plugins/&lt;name&gt;/&lt;name&gt;.jar</p></blockquote>

<p><strong>8</strong>. Clone the hooks-its, and hooks-jira projects:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone https://gerrit.googlesource.com/plugins/hooks-its plugins/hooks-its
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>plugins/hooks-its
</span><span class='line'><span class="nv">$ </span>git checkout -b v2.8 origin/stable-2.8
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ../..
</span><span class='line'><span class="nv">$ </span>git clone https://gerrit.googlesource.com/plugins/hooks-jira plugins/hooks-jira
</span></code></pre></td></tr></table></div></figure>


<p><strong>9</strong>. Modify the pom.xml files under plugins/hooks-its AND plugins/hooks-its/hooks-its:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>plugins/hooks-its
</span><span class='line'><span class="nv">$ </span>git diff
</span><span class='line'>diff --git a/hooks-its/pom.xml b/hooks-its/pom.xml
</span><span class='line'>index a206459..75e11dc 100644
</span><span class='line'>--- a/hooks-its/pom.xml
</span><span class='line'>+++ b/hooks-its/pom.xml
</span><span class='line'>@@ -22,7 +22,7 @@ limitations under the License.
</span><span class='line'>   &lt;parent&gt;
</span><span class='line'>     &lt;groupId&gt;com.googlesource.gerrit.plugins.its&lt;/groupId&gt;
</span><span class='line'>     &lt;artifactId&gt;hooks-its-parent&lt;/artifactId&gt;
</span><span class='line'>-    &lt;version&gt;2.9-SNAPSHOT&lt;/version&gt;
</span><span class='line'>+    &lt;version&gt;2.8&lt;/version&gt;
</span><span class='line'>   &lt;/parent&gt;
</span><span class='line'>   &lt;artifactId&gt;hooks-its&lt;/artifactId&gt;
</span><span class='line'>   &lt;name&gt;Gerrit Code Review - Commit validation and Workflow&lt;/name&gt;
</span><span class='line'>diff --git a/pom.xml b/pom.xml
</span><span class='line'>index 600bff9..995d008 100644
</span><span class='line'>--- a/pom.xml
</span><span class='line'>+++ b/pom.xml
</span><span class='line'>@@ -22,7 +22,7 @@ limitations under the License.
</span><span class='line'>   &lt;groupId&gt;com.googlesource.gerrit.plugins.its&lt;/groupId&gt;
</span><span class='line'>   &lt;artifactId&gt;hooks-its-parent&lt;/artifactId&gt;
</span><span class='line'>   &lt;packaging&gt;pom&lt;/packaging&gt;
</span><span class='line'>-  &lt;version&gt;2.9-SNAPSHOT&lt;/version&gt;
</span><span class='line'>+  &lt;version&gt;2.8&lt;/version&gt;
</span><span class='line'>
</span><span class='line'>   &lt;name&gt;Gerrit Code Review - Issue tracker support&lt;/name&gt;
</span></code></pre></td></tr></table></div></figure>


<p><strong>10</strong>. Build the hooks-its:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>plugins/hooks-its
</span><span class='line'><span class="nv">$ </span>mvn -DskipTests -Dmaven.test.skip<span class="o">=</span><span class="nb">true </span>package install
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><strong>NOTE:</strong> The hooks-its-2.8.jar will be generated here: hooks-its/target/hooks-its-2.8.jar
<strong>NOTE</strong>: If don&rsquo;t skip tests, run with the command: <code>mvn clean package install</code>, then will fail on test case!
<strong>NOTE</strong>: Gerrit select BUCK as its new build system, for new plugin, please reference to the following <em>NOTES</em> #5</p></blockquote>

<p><strong>11</strong>. Modify the pom.xml files under plugins/hooks-jira:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>plugins/hooks-jira
</span><span class='line'><span class="nv">$ </span>git diff
</span><span class='line'>diff --git a/pom.xml b/pom.xml
</span><span class='line'>index 7b04c60..8f60c78 100644
</span><span class='line'>--- a/pom.xml
</span><span class='line'>+++ b/pom.xml
</span><span class='line'>@@ -20,7 +20,7 @@ limitations under the License.
</span><span class='line'>   &lt;parent&gt;
</span><span class='line'>     &lt;groupId&gt;com.googlesource.gerrit.plugins.its&lt;/groupId&gt;
</span><span class='line'>     &lt;artifactId&gt;hooks-its-parent&lt;/artifactId&gt;
</span><span class='line'>-    &lt;version&gt;2.9-SNAPSHOT&lt;/version&gt;
</span><span class='line'>+    &lt;version&gt;2.8&lt;/version&gt;
</span><span class='line'>   &lt;/parent&gt;
</span><span class='line'>   &lt;artifactId&gt;hooks-jira&lt;/artifactId&gt;
</span><span class='line'>   &lt;packaging&gt;jar&lt;/packaging&gt;
</span></code></pre></td></tr></table></div></figure>


<p><strong>12</strong>. Build the hooks-jira:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>plugins/hooks-jira
</span><span class='line'><span class="nv">$ </span>mvn clean package
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><strong>NOTE:</strong> The hooks-jira-2.8.jar will be generated here: target/hooks-jira-2.8.jar</p></blockquote>

<p><strong>13</strong>. Copy the following jar files to the <code>plugin</code> folder under the Gerrit installation path on remote server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>hooks-its-2.8.jar
</span><span class='line'>hooks-jira-2.8.jar
</span></code></pre></td></tr></table></div></figure>


<p>For example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scp hooks-its/target/hooks-its-2.8.jar ../hooks-jira/target/hooks-jira-2.8.jar gerrit2@review.example.co:/home/gerrit2/review_site/plugins
</span></code></pre></td></tr></table></div></figure>


<p><strong>14</strong>. Add a new file etc/its/action.config under the Gerrit installation path on remote server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>rule <span class="s2">&quot;merged&quot;</span><span class="o">]</span>
</span><span class='line'>        event-type <span class="o">=</span> change-merged
</span><span class='line'>        <span class="nv">action</span> <span class="o">=</span> add-standard-comment
</span><span class='line'><span class="o">[</span>rule <span class="s2">&quot;comment&quot;</span><span class="o">]</span>
</span><span class='line'>        event-type <span class="o">=</span> comment-added
</span><span class='line'>        <span class="nv">action</span> <span class="o">=</span> add-standard-comment
</span><span class='line'><span class="o">[</span>rule <span class="s2">&quot;patch-set&quot;</span><span class="o">]</span>
</span><span class='line'>        event-type <span class="o">=</span> patchset-created
</span><span class='line'>        <span class="nv">action</span> <span class="o">=</span> add-standard-comment
</span><span class='line'><span class="o">[</span>rule <span class="s2">&quot;ref-updated&quot;</span><span class="o">]</span>
</span><span class='line'>        event-type <span class="o">=</span> ref-updated
</span><span class='line'>        <span class="nv">action</span> <span class="o">=</span> add-standard-comment
</span></code></pre></td></tr></table></div></figure>


<p><strong>15</strong>. Run the Gerrit initial installation command on remote server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>java -jar gerrit-2.8.war init -d review_site
</span><span class='line'>
</span><span class='line'>*** Gerrit Code Review 2.8
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>*** Git Repositories
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Location of Git repositories   <span class="o">[</span>git<span class="o">]</span>:
</span><span class='line'>
</span><span class='line'>*** SQL Database
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Database server <span class="nb">type</span>           <span class="o">[</span>mysql<span class="o">]</span>:
</span><span class='line'>Server hostname                <span class="o">[</span>localhost<span class="o">]</span>:
</span><span class='line'>Server port                    <span class="o">[(</span>mysql default<span class="o">)]</span>:
</span><span class='line'>Database name                  <span class="o">[</span>reviewdb<span class="o">]</span>:
</span><span class='line'>Database username              <span class="o">[</span>gerrit2<span class="o">]</span>:
</span><span class='line'>Change gerrit2<span class="s1">&#39;s password      [y/N]?</span>
</span><span class='line'>
</span><span class='line'><span class="s1">*** User Authentication</span>
</span><span class='line'><span class="s1">***</span>
</span><span class='line'>
</span><span class='line'><span class="s1">Authentication method          [DEVELOPMENT_BECOME_ANY_ACCOUNT/?]:</span>
</span><span class='line'>
</span><span class='line'><span class="s1">*** Email Delivery</span>
</span><span class='line'><span class="s1">***</span>
</span><span class='line'>
</span><span class='line'><span class="s1">SMTP server hostname           [localhost]:</span>
</span><span class='line'><span class="s1">SMTP server port               [(default)]:</span>
</span><span class='line'><span class="s1">SMTP encryption                [NONE/?]:</span>
</span><span class='line'><span class="s1">SMTP username                  [gerrit2]:</span>
</span><span class='line'><span class="s1">Change gerrit2&#39;</span>s password      <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>
</span><span class='line'>*** Container Process
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Run as                         <span class="o">[</span>gerrit2<span class="o">]</span>:
</span><span class='line'>Java runtime                   <span class="o">[</span>C:<span class="se">\P</span>rogram Files <span class="o">(</span>x86<span class="o">)</span><span class="se">\J</span>ava<span class="se">\j</span>re7<span class="o">]</span>:
</span><span class='line'>Upgrade c:<span class="se">\U</span>sers<span class="se">\g</span>errit2<span class="se">\g</span>errit<span class="se">\b</span>in<span class="se">\g</span>errit.war <span class="o">[</span>Y/n<span class="o">]</span>?
</span><span class='line'>Copying gerrit-2.8.war to c:<span class="se">\U</span>sers<span class="se">\g</span>errit2<span class="se">\g</span>errit<span class="se">\b</span>in<span class="se">\g</span>errit.war
</span><span class='line'>
</span><span class='line'>*** SSH Daemon
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Listen on address              <span class="o">[</span>*<span class="o">]</span>:
</span><span class='line'>Listen on port                 <span class="o">[</span>29418<span class="o">]</span>:
</span><span class='line'>
</span><span class='line'>*** HTTP Daemon
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Behind reverse proxy           <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Use SSL <span class="o">(</span>https://<span class="o">)</span>             <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Listen on address              <span class="o">[</span>*<span class="o">]</span>:
</span><span class='line'>Listen on port                 <span class="o">[</span>8080<span class="o">]</span>:
</span><span class='line'>Canonical URL                  <span class="o">[</span>http://review.example.com:8080/<span class="o">]</span>:
</span><span class='line'>
</span><span class='line'>*** Plugins
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Install plugin reviewnotes version v2.8 <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Install plugin download-commands version v2.8 <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Install plugin replication version v2.8 <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Install plugin commit-message-length-validator version v2.8 <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>*** Jira connectivity
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Jira URL <span class="o">(</span>empty to skip<span class="o">)</span>       <span class="o">[</span>https://jira.example.com/<span class="o">]</span>:
</span><span class='line'>Jira username                  <span class="o">[</span>jira-robot<span class="o">]</span>:
</span><span class='line'>Change jira-robot<span class="err">&#39;</span>s password        <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Test connectivity to https://jira.example.com <span class="o">[</span>y/N<span class="o">]</span>? y
</span><span class='line'>Checking Jira connectivity ... <span class="o">[</span>OK<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>*** Jira issue-tracking association
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Jira issue-Id regex            <span class="o">[([</span>A-Z<span class="o">]</span>+-<span class="o">[</span>0-9<span class="o">]</span>+<span class="o">)]</span>:
</span><span class='line'>Issue-id enforced in commit message <span class="o">[</span>MANDATORY/?<span class="o">]</span>:?
</span><span class='line'>Supported options are:
</span><span class='line'>           mandatory
</span><span class='line'>           suggested
</span><span class='line'>           optional
</span><span class='line'>Issue-id enforced in commit message <span class="o">[</span>MANDATORY/?<span class="o">]</span>: suggested
</span><span class='line'>Initialized C:<span class="se">\U</span>sers<span class="se">\g</span>errit2<span class="se">\g</span>errit
</span></code></pre></td></tr></table></div></figure>


<p><strong>16</strong>. Restart gerrit-jetty service:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo service gerrit-jetty.sh restart
</span></code></pre></td></tr></table></div></figure>


<p><strong>17</strong>. Done!</p>

<h3>NOTES:</h3>

<p><em>1</em>. Download Gerrit here: <a href="http://gerrit-releases.storage.googleapis.com/index.html">http://gerrit-releases.storage.googleapis.com/index.html</a></p>

<p><em>2</em>. The file review_site/etc/gerrit.config should look like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>jira<span class="o">]</span>
</span><span class='line'>        <span class="nv">url</span> <span class="o">=</span> http://review.example.com:8080
</span><span class='line'>        <span class="nv">username</span> <span class="o">=</span> jira-robot
</span><span class='line'>        <span class="nv">commentOnRefUpdatedGitWeb</span> <span class="o">=</span> <span class="nb">false</span>   <span class="c"># to comment gitweb comments on jira</span>
</span><span class='line'><span class="o">[</span>commentLink <span class="s2">&quot;jira&quot;</span><span class="o">]</span>
</span><span class='line'>        <span class="nv">match</span> <span class="o">=</span> <span class="o">([</span>A-Z<span class="o">]</span>+-<span class="o">[</span>0-9<span class="o">]</span>+<span class="o">)</span>
</span><span class='line'>        <span class="nv">html</span> <span class="o">=</span> &lt;a <span class="nv">href</span><span class="o">=</span><span class="se">\&quot;</span>http://jira.example.com:8080/browse/<span class="nv">$1</span><span class="se">\&quot;</span>&gt;<span class="nv">$1</span>&lt;/a&gt;
</span><span class='line'>        <span class="nv">association</span> <span class="o">=</span> SUGGESTED
</span></code></pre></td></tr></table></div></figure>


<p><em>3</em>. If we just want to parse the jira id on the subject of the git comments, then here is the diff:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>diff --git a/hooks-its/src/main/java/com/googlesource/gerrit/plugins/hooks/util/
</span><span class='line'>index a04b175..3d56426 100644
</span><span class='line'>--- a/hooks-its/src/main/java/com/googlesource/gerrit/plugins/hooks/util/CommitM
</span><span class='line'>+++ b/hooks-its/src/main/java/com/googlesource/gerrit/plugins/hooks/util/CommitM
</span><span class='line'>@@ -31,7 +31,7 @@ public class CommitMessageFetcher <span class="o">{</span>
</span><span class='line'>       RevWalk <span class="nv">revWalk</span> <span class="o">=</span> new RevWalk<span class="o">(</span>repo<span class="o">)</span>;
</span><span class='line'>       RevCommit <span class="nv">commit</span> <span class="o">=</span> revWalk.parseCommit<span class="o">(</span>ObjectId.fromString<span class="o">(</span>commitId<span class="o">))</span>;
</span><span class='line'>
</span><span class='line'>-      <span class="k">return </span>commit.getFullMessage<span class="o">()</span>;
</span><span class='line'>+      <span class="k">return </span>commit.getShortMessage<span class="o">()</span>;
</span><span class='line'>     <span class="o">}</span> finally <span class="o">{</span>
</span><span class='line'>       repo.close<span class="o">()</span>;
</span><span class='line'>     <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>4</em>. Get the log message from jetty/logs on Gerrit server.
<em>5</em>. Gerrit choose BUCK as its new build system, so for the new plugin, the build steps should be (take cookbook-plugin as an example):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>buck build plugins/cookbook-plugin
</span></code></pre></td></tr></table></div></figure>


<p>The output is created in: buck-out/gen/plugins/cookbook-plugin/cookbook-plugin.jar</p>

<h3>References:</h3>

<p><em>1</em>. <a href="https://groups.google.com/forum/#!msg/repo-discuss/GSyHMeaCyyw/cJGunFcNc4oJ">https://groups.google.com/forum/#!msg/repo-discuss/GSyHMeaCyyw/cJGunFcNc4oJ</a>
<em>2</em>. <a href="https://gerrit-review.googlesource.com/Documentation/dev-buck.html">https://gerrit-review.googlesource.com/Documentation/dev-buck.html</a></p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing With Jenkins Create Job]]></title>
    <link href="http://lifuzu.com/blog/2014/04/24/playing-with-jenkins-create-job/"/>
    <updated>2014-04-24T22:08:09-07:00</updated>
    <id>http://lifuzu.com/blog/2014/04/24/playing-with-jenkins-create-job</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-iwPM2DPUvJY/U0Y1mjJ70WI/AAAAAAAAB4g/ZOmWzMCL-_0/s0/jenkins_feature.jpg" title="jenkins_feature.jpg" alt="Jenkins logo" /></p>

<h2>create new job from templates</h2>

<p>In this article, we will talk about how to create a Jenkins job with a template by some commands.</p>

<h3>Instructions</h3>

<p><em>1</em>. Get the Jenkins CLI client package</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget http://jenkins/jnlpJars/jenkins-cli.jar</span></code></pre></td></tr></table></div></figure>


<p><em>2</em>. Check which commands supported by the client package [Exception <em>1</em>,<em>2</em>]</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ help</span></code></pre></td></tr></table></div></figure>


<p><em>3</em>. List all jobs under the view: tools</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ list-jobs tools</span></code></pre></td></tr></table></div></figure>


<p><em>4</em>. Get the configuration of the job: template</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ get-job template &gt; template.xml</span></code></pre></td></tr></table></div></figure>


<p><em>5</em>. Create a new job based on the configuration</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ create-job new_job_name &lt; new_job_name.xml</span></code></pre></td></tr></table></div></figure>


<p><em>6</em>. Run groovy script</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ groovy scripts/add_job_to_view.groovy</span></code></pre></td></tr></table></div></figure>


<p>If there are any parameters in the script, just as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>import jenkins.model.*
</span><span class='line'>
</span><span class='line'>if (args.length != 2 ) {
</span><span class='line'>  println "Error on arguments!"
</span><span class='line'>}
</span><span class='line'>def jobName  = args[0] ?: 'a_job'
</span><span class='line'>def viewName = args[1] ?: 'a_view'
</span><span class='line'>
</span><span class='line'>println jobName + ' ' + viewName
</span><span class='line'>
</span><span class='line'>def v = Jenkins.instance.getView(viewName)
</span><span class='line'>def i = Jenkins.instance.getItemByFullName(jobName)
</span><span class='line'>if (v && i) {
</span><span class='line'>  v.add(i)
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>pass the parameters as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ groovy scripts/add_job_to_view.groovy JOB_NAME VIEM_NAME</span></code></pre></td></tr></table></div></figure>


<p><em>7</em>. Build a job</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ build new_job_name</span></code></pre></td></tr></table></div></figure>


<p><em>8</em>. Diable a job</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ disable-job new_job_name</span></code></pre></td></tr></table></div></figure>


<h3>Exceptions:</h3>

<p><em>1</em>. Description:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Exception in thread "main" java.io.IOException: No X-Jenkins-CLI2-Port among [null, Vary, Date, Content-Length, Keep-Alive, Set-Cookie, Connection, Content-Type, X-Powered-By, Server]
</span><span class='line'>  at hudson.cli.CLI.getCliTcpPort(CLI.java:281)
</span><span class='line'>  at hudson.cli.CLI.&lt;init&gt;(CLI.java:128)
</span><span class='line'>  at hudson.cli.CLIConnectionFactory.connect(CLIConnectionFactory.java:72)
</span><span class='line'>  at hudson.cli.CLI._main(CLI.java:449)
</span><span class='line'>  at hudson.cli.CLI.main(CLI.java:378)
</span><span class='line'>  Suppressed: java.io.EOFException: unexpected stream termination
</span><span class='line'>      at hudson.remoting.ClassicCommandTransport.create(ClassicCommandTransport.java:100)
</span><span class='line'>      at hudson.remoting.Channel.&lt;init&gt;(Channel.java:392)
</span><span class='line'>      at hudson.remoting.Channel.&lt;init&gt;(Channel.java:388)
</span><span class='line'>      at hudson.remoting.Channel.&lt;init&gt;(Channel.java:349)
</span><span class='line'>      at hudson.remoting.Channel.&lt;init&gt;(Channel.java:345)
</span><span class='line'>      at hudson.remoting.Channel.&lt;init&gt;(Channel.java:333)
</span><span class='line'>      at hudson.cli.CLI.connectViaHttp(CLI.java:159)
</span><span class='line'>      at hudson.cli.CLI.&lt;init&gt;(CLI.java:132)
</span><span class='line'>      ... 3 more</span></code></pre></td></tr></table></div></figure>


<h4>Solution: check the port which Jenkins is running on, put 8080 on URL should fix, just as:</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins:8080/ help</span></code></pre></td></tr></table></div></figure>


<p><em>2</em>. Description:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Failed to authenticate with your SSH keys.
</span><span class='line'>hudson.security.AccessDeniedException2: anonymous is missing the ExtendedRead permission
</span><span class='line'>  at hudson.security.ACL.checkPermission(ACL.java:54)
</span><span class='line'>  at hudson.model.AbstractItem.checkPermission(AbstractItem.java:441)
</span><span class='line'>  at hudson.cli.GetJobCommand.run(GetJobCommand.java:46)
</span><span class='line'>  at hudson.cli.CLICommand.main(CLICommand.java:229)
</span><span class='line'>  at hudson.cli.CliManagerImpl.main(CliManagerImpl.java:92)
</span><span class='line'>  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
</span><span class='line'>  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
</span><span class='line'>  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
</span><span class='line'>  at java.lang.reflect.Method.invoke(Method.java:616)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.perform(RemoteInvocationHandler.java:275)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.call(RemoteInvocationHandler.java:256)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.call(RemoteInvocationHandler.java:215)
</span><span class='line'>  at hudson.remoting.UserRequest.perform(UserRequest.java:118)
</span><span class='line'>  at hudson.remoting.UserRequest.perform(UserRequest.java:48)
</span><span class='line'>  at hudson.remoting.Request$2.run(Request.java:326)
</span><span class='line'>  at hudson.remoting.InterceptingExecutorService$1.call(InterceptingExecutorService.java:72)
</span><span class='line'>  at hudson.cli.CliManagerImpl$1.call(CliManagerImpl.java:63)
</span><span class='line'>  at hudson.remoting.InterceptingExecutorService$2.call(InterceptingExecutorService.java:95)
</span><span class='line'>  at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
</span><span class='line'>  at java.util.concurrent.FutureTask.run(FutureTask.java:166)
</span><span class='line'>  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
</span><span class='line'>  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
</span><span class='line'>  at java.lang.Thread.run(Thread.java:679)</span></code></pre></td></tr></table></div></figure>


<h4>Solution: add client public ssh key to the Jenkins server at: <code>http://jenkins/user/USERNAME/configure</code> | <code>SSH Public Keys</code>.</h4>

<p><em>3</em>. Description:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hudson.security.AccessDeniedException2: &lt;USERNAME&gt; is missing the Job/ExtendedRead permission
</span><span class='line'>  at hudson.security.ACL.checkPermission(ACL.java:54)
</span><span class='line'>  at hudson.model.AbstractItem.checkPermission(AbstractItem.java:446)
</span><span class='line'>  at hudson.cli.GetJobCommand.run(GetJobCommand.java:46)
</span><span class='line'>  at hudson.cli.CLICommand.main(CLICommand.java:234)
</span><span class='line'>  at hudson.cli.CliManagerImpl.main(CliManagerImpl.java:92)
</span><span class='line'>  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
</span><span class='line'>  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
</span><span class='line'>  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
</span><span class='line'>  at java.lang.reflect.Method.invoke(Method.java:606)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.perform(RemoteInvocationHandler.java:300)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.call(RemoteInvocationHandler.java:281)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.call(RemoteInvocationHandler.java:240)
</span><span class='line'>  at hudson.remoting.UserRequest.perform(UserRequest.java:118)
</span><span class='line'>  at hudson.remoting.UserRequest.perform(UserRequest.java:48)
</span><span class='line'>  at hudson.remoting.Request$2.run(Request.java:328)
</span><span class='line'>  at hudson.remoting.InterceptingExecutorService$1.call(InterceptingExecutorService.java:72)
</span><span class='line'>  at hudson.cli.CliManagerImpl$1.call(CliManagerImpl.java:63)
</span><span class='line'>  at hudson.remoting.InterceptingExecutorService$2.call(InterceptingExecutorService.java:95)
</span><span class='line'>  at jenkins.util.ContextResettingExecutorService$2.call(ContextResettingExecutorService.java:46)
</span><span class='line'>  at java.util.concurrent.FutureTask.run(FutureTask.java:262)
</span><span class='line'>  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
</span><span class='line'>  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
</span><span class='line'>  at java.lang.Thread.run(Thread.java:745)</span></code></pre></td></tr></table></div></figure>


<h4>Solution: Jenkins server &ndash;> Manage Jenkins &ndash;> Configure Global Security to add <USERNAME> related permissions.</h4>

<h3>References:</h3>

<ol>
<li><a href="http://www.blackpepper.co.uk/generating-new-jenkins-jobs-from-templates-and-parameterised-builds/">http://www.blackpepper.co.uk/generating-new-jenkins-jobs-from-templates-and-parameterised-builds/</a></li>
<li><a href="http://javadoc.jenkins-ci.org/jenkins/model/Jenkins.html">http://javadoc.jenkins-ci.org/jenkins/model/Jenkins.html</a></li>
<li><a href="https://github.com/jenkinsci/jenkins">https://github.com/jenkinsci/jenkins</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing With Git Submodule]]></title>
    <link href="http://lifuzu.com/blog/2014/04/24/playing-with-git-submodule/"/>
    <updated>2014-04-24T22:01:03-07:00</updated>
    <id>http://lifuzu.com/blog/2014/04/24/playing-with-git-submodule</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-GW4P0d8zZdM/U1nrsDaCgiI/AAAAAAAAB5I/4mTt3xjfmFo/s0/xlotte-git.jpg" title="xlotte-git.jpg" alt="enter image description here" /></p>

<h3>Intructions:</h3>

<ul>
<li>add a submodule</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git submodule add -b BRANCH ssh://REPO_URL/REPO_PATH SUBMODULE_PATH
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;add a submodule at SUBMODULE_PATH&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>clone the project with submodule(s)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone ssh://REPO_URL/REPO_PATH PROJECT
</span><span class='line'><span class="nb">cd </span>PROJECT
</span><span class='line'><span class="nv">$ </span>git submodule update --init --rebase
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>get submodule status</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git submodule status
</span><span class='line'><span class="nv">$ </span>git submodule foreach git branch -a
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>checkout all submodule to a branch defined in .gitmodule (which means we specify the branch when we add the submodule with &lsquo;-b BRANCH&rsquo;)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git submodule foreach -q --recursive <span class="s1">&#39;branch=&quot;$(git config -f $toplevel/.gitmodules submodule.$name.branch)&quot;; git checkout $branch&#39;</span>
</span><span class='line'><span class="c"># OR a short version</span>
</span><span class='line'><span class="nv">$ </span>git submodule foreach git checkout master
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>pull the latest master for all of the submodule</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git submodule -q foreach git pull -q origin master
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>develop in submodule</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Make your changes in submoduleA</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>submoduleA
</span><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;Updated the submoduleA&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push origin BRANCH
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>sync to project</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>PROJECT
</span><span class='line'><span class="nv">$ </span>git pull
</span><span class='line'><span class="nv">$ </span>git submodule update --rebase
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>manually update the project to track submodule (Gerrit submodule description commit the track automatically)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>PROJECT
</span><span class='line'><span class="nv">$ </span>git add submoduleA
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;Updated submodule a.&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push origin BRANCH_NAME
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>deinit, and remove a submodule</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git submodule deinit SUBMODULE_PATH
</span><span class='line'><span class="nv">$ </span>git rm SUBMODULE_PATH
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;remove the submodule at SUBMODULE_PATH&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>References:</h3>

<ol>
<li><a href="http://git-scm.com/docs/git-submodule">http://git-scm.com/docs/git-submodule</a></li>
<li><a href="http://git-scm.com/docs/git-rm.html">http://git-scm.com/docs/git-rm.html</a></li>
<li><a href="http://stackoverflow.com/questions/8642668/how-to-make-submodule-with-detached-head-to-be-attached-to-actual-head">http://stackoverflow.com/questions/8642668/how-to-make-submodule-with-detached-head-to-be-attached-to-actual-head</a></li>
<li><a href="http://www.vogella.com/tutorials/Git/article.html#submodules">http://www.vogella.com/tutorials/Git/article.html#submodules</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rename Repository on Gerrit]]></title>
    <link href="http://lifuzu.com/blog/2014/04/09/rename-repository-on-gerrit/"/>
    <updated>2014-04-09T22:42:53-07:00</updated>
    <id>http://lifuzu.com/blog/2014/04/09/rename-repository-on-gerrit</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-_03bVFvmzzg/U0YvHJPBLCI/AAAAAAAAB4M/SSKXyOR_T3U/s0/diffymute-300x279.png" title="diffymute-300x279.png" alt="Gerrit icon" /></p>

<h3>Instructions:</h3>

<p><em>1</em>. Move the repository folder on server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># on gerrit server</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> <span class="nv">$site_path</span>/git;
</span><span class='line'><span class="nv">$ </span>mv old_name.git new_name.git
</span></code></pre></td></tr></table></div></figure>


<p><em>2</em>. Flush the caches on server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># On another client image:</span>
</span><span class='line'><span class="nv">$ </span>ssh -p 29418 gerrit.server.com gerrit flush-caches
</span></code></pre></td></tr></table></div></figure>


<p><em>3</em>. Run sql statement to update the changes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># On another client image (need &quot;Access Database&quot; capability):</span>
</span><span class='line'><span class="nv">$ </span>ssh -p 29418 gerrit.server.com gerrit gsql <span class="o">[</span>Enter<span class="o">]</span>
</span><span class='line'>gerrit&gt; USE <span class="o">{</span>Database<span class="o">}</span>;
</span><span class='line'>gerrit&gt; SELECT * FROM changes WHERE <span class="nv">dest_project_name</span> <span class="o">=</span> <span class="s1">&#39;old_name&#39;</span>;
</span><span class='line'><span class="c"># if have more than 1, run the following command to update, otherwise, quit with \q;</span>
</span><span class='line'>gerrit&gt; UPDATE changes SET <span class="nv">dest_project_name</span> <span class="o">=</span> <span class="s1">&#39;new_name&#39;</span> WHERE
</span><span class='line'><span class="nv">dest_project_name</span> <span class="o">=</span> <span class="s1">&#39;old_name&#39;</span>;
</span><span class='line'>gerrit&gt; <span class="se">\q</span>
</span></code></pre></td></tr></table></div></figure>


<h3>References:</h3>

<ol>
<li><a href="https://groups.google.com/forum/#!topic/repo-discuss/ltIxBipUPKI">https://groups.google.com/forum/#!topic/repo-discuss/ltIxBipUPKI</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Migrate Svn to Git]]></title>
    <link href="http://lifuzu.com/blog/2014/04/09/migrate-svn-to-git/"/>
    <updated>2014-04-09T22:21:27-07:00</updated>
    <id>http://lifuzu.com/blog/2014/04/09/migrate-svn-to-git</id>
    <content type="html"><![CDATA[<p><img src="https://lh6.googleusercontent.com/-zWvC0T4xLUM/U0YqARAy3HI/AAAAAAAAB34/N0PazinANn0/s0/svn_to_git-860x200.png" title="svn_to_git-860x200.png" alt="migrate svn to git" /></p>

<h3>Instructions:</h3>

<p><em>1</em>. Check out the source tree from SVN server with svn command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>svn co http://my-project.googlecode.com/svn/trunk
</span></code></pre></td></tr></table></div></figure>


<p><em>2</em>. Generate an users.txt with the command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>svn log ^/ --xml | grep -P <span class="s2">&quot;^&lt;author&quot;</span> | sort -u | <span class="se">\</span>
</span><span class='line'>      perl -pe <span class="s1">&#39;s/&lt;author&gt;(.*?)&lt;\/author&gt;/$1 = /&#39;</span> &gt; users.txt
</span></code></pre></td></tr></table></div></figure>


<p>   and following the formatting:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='text'><span class='line'>schacon = Scott Chacon &lt;schacon@geemail.com&gt;
</span><span class='line'>selse = Someo Nelse &lt;selse@geemail.com&gt;
</span></code></pre></td></tr></table></div></figure>


<p><strong>NOTE</strong>: You can try the script to generate authors list automatically: <a href="https://gist.github.com/lifuzu/9081923#file-findauthors-sh">https://gist.github.com/lifuzu/9081923#file-findauthors-sh</a></p>

<p><em>3</em>. Once the users.txt is ready, then checkout the source tree again with the command &lsquo;git svn clone&rsquo;:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git svn clone http://my-project.googlecode.com/svn/ <span class="se">\</span>
</span><span class='line'>      --authors-file<span class="o">=</span>users.txt --no-metadata -s my_project
</span></code></pre></td></tr></table></div></figure>


<p><em>4</em>. To move the tags to be proper Git tags, run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git <span class="k">for</span>-each-ref refs/remotes/tags | cut -d / -f 4- | grep -v @ | <span class="k">while </span><span class="nb">read </span>tagname; <span class="k">do </span>git tag <span class="s2">&quot;$tagname&quot;</span> <span class="s2">&quot;tags/$tagname&quot;</span>; git branch -r -d <span class="s2">&quot;tags/$tagname&quot;</span>; <span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>5</em>. To move the rest of the references under refs/remotes to be local branches:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git <span class="k">for</span>-each-ref refs/remotes | cut -d / -f 3- | grep -v @ | <span class="k">while </span><span class="nb">read </span>branchname; <span class="k">do </span>git branch <span class="s2">&quot;$branchname&quot;</span> <span class="s2">&quot;refs/remotes/$branchname&quot;</span>; git branch -r -d <span class="s2">&quot;$branchname&quot;</span>; <span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>6</em>. Adding the git server as a remote:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git remote add origin git@my-git-server:myrepository.git
</span></code></pre></td></tr></table></div></figure>


<p><em>7</em>. Push all your branches and tags to go up:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git push origin --all
</span><span class='line'><span class="nv">$ </span>git push origin --tags
</span></code></pre></td></tr></table></div></figure>


<p><em>8</em>. Update the changes from SVN (before you update, please cleanup your local workspace)</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git svn fetch
</span><span class='line'>...
</span><span class='line'><span class="nv">r81152</span> <span class="o">=</span> c2465633b56d16081334336ee87d506b97d10449 <span class="o">(</span>refs/remotes/git-svn<span class="o">)</span>
</span><span class='line'><span class="nv">$ </span>git checkout master
</span><span class='line'><span class="nv">$ </span>git merge remotes/git-svn
</span></code></pre></td></tr></table></div></figure>


<p><strong>NOTE</strong>: Sometimes when you run <code>git svn fetch</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>...
</span><span class='line'><span class="nv">r81217</span> <span class="o">=</span> eb79c770f852f6158a583bb17a8c1a326f7b4e03 <span class="o">(</span>refs/remotes/trunk<span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then you need to run:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git checkout master
</span><span class='line'><span class="nv">$ </span>git merge remotes/trunk
</span></code></pre></td></tr></table></div></figure>


<p><em>9</em>. Then check them into GIT</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git log <span class="c"># should have some changes merged from SVN</span>
</span><span class='line'><span class="nv">$ </span>git push origin master
</span></code></pre></td></tr></table></div></figure>


<p><em>10</em>. If you have a temporary migration branch you modified something on that, then you need rebase the changes on master to migration:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git checkout migration
</span><span class='line'><span class="nv">$ </span>git rebase master  <span class="c"># fix the conflicts if have</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>11</em>. Finally, you need merge the changes on migration, fast forward, since you have rebased.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git checkout master
</span><span class='line'><span class="nv">$ </span>git merge migration
</span></code></pre></td></tr></table></div></figure>


<p>That is it!</p>

<h3>Reference:</h3>

<ol>
<li><a href="http://git-scm.com/book/en/Git-and-Other-Systems-Migrating-to-Git">http://git-scm.com/book/en/Git-and-Other-Systems-Migrating-to-Git</a></li>
<li><a href="http://git-scm.com/book/ch3-6.html">http://git-scm.com/book/ch3-6.html</a></li>
<li><a href="http://stackoverflow.com/questions/16565991/keep-svn-repository-in-sync-with-git-one">http://stackoverflow.com/questions/16565991/keep-svn-repository-in-sync-with-git-one</a></li>
<li><a href="http://stackoverflow.com/questions/5241898/is-a-bidrectional-git-svn-sync-both-writable-possible">http://stackoverflow.com/questions/5241898/is-a-bidrectional-git-svn-sync-both-writable-possible</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如果瀑布是一次出差，那么敏捷是一段旅行]]></title>
    <link href="http://lifuzu.com/blog/2014/02/13/waterfall-is-trip-agile-is-journey/"/>
    <updated>2014-02-13T11:03:12-08:00</updated>
    <id>http://lifuzu.com/blog/2014/02/13/waterfall-is-trip-agile-is-journey</id>
    <content type="html"><![CDATA[<p>原文地址：<a href="http://theadaptivepm.wordpress.com/2013/09/10/if-waterfall-is-a-trip-then-agile-is-a-journey/">http://theadaptivepm.wordpress.com/2013/09/10/if-waterfall-is-a-trip-then-agile-is-a-journey/</a>
<img src="http://cdn.moj.managementisajourney.com/wp-content/uploads/2013/04/Road-Journey.jpg" alt="road journey" />
一个项目就像是从一个海岸前往另一个海岸开车的旅程。很少有一些比喻能这样形象地表示瀑布/传统和敏捷项目管理方法之间的意识形态差异。</p>

<!--more-->


<p>对于一个瀑布/传统项目，主要关注的是如何在时间和预算下到达目的地（仅仅那个目标）。因此，此行的每一步都在计划中详细列出，在行程开始前，酒店要预订，地图要标记，车子要准备等等。每天行驶的距离和地图上的标记进行比较，以校验进度。各天花费的金额与项目的预算进行比较，以确保成本是在容许的范围内，等等。而此行程组织者的任务是确保在过程中这两个指标没有偏离预定的轨道。</p>

<p>听起来并没有很多的乐趣，试图驾驶横越全国并坚持预计的行程计划，同时处理势必会发生的这样那样无数的问题，并纠正偏差就已经让人神经崩溃，真的！然而，对那些经常旅行的人（如卡车司机），通过标准化和可重复性使效率最高是首选策略。</p>

<p>相比之下，一个敏捷项目中，虽然目的是重要的，但在旅途中所学到的东西也是很重要的。因此，一个敏捷项目可能有固定的预算和时间的限制，留给旅游团队来决定每天从A点到B点最好的路程，在给定的时间和预算范围内。如果这是以前做过旅行的团队的第一次尝试 &ndash; 作为产品开发的副产品 &ndash; 显得尤为重要。</p>

<p>把执行项目看作为一个旅程，而不是出差可以允许很多事情发生。首先，我们都知道，一个漫长的行程从来没有按计划进行的。轮胎爆掉，汽车故障，道路封闭，绕路，还有其他许多的干扰都会在前进的道路显现出来。因此，让团队根据当前行驶状况进行预测和调整行程是一个更现实的总体行程。其次，如果团队进展比原计划提前，或者他们觉得学习对于旅途取得全面成功有利，团队可以决定绕道而行，沿途观看景点和获得经验，这些都不是最初设想作为计划的一部分。第三，踏上旅途，比按照预先计划好的行程更有趣和有参与感，这有助于保持团队合作精神和完善结果。最后，如果团队 &ndash; 与旅程的老板 &ndash; 认识到有一个不同的但比之前预想的更好的目的地，那就是此行的一个完全可以接受的结果，只要目的符合旅行的宗旨（和合理的费用） 。</p>

<p>这并不是说一个旅程不会完成沿途的重要里程碑，或者说团队因为他们认为合适就可能改变目的地。即使是家庭度假也会有一定的约束和指标。然而，通过将尽可能多的价值放在成功到达目的地的同时，在旅程中取得经验，一个项目很可能会产生一个至少与最初提出的交付物同样重要的：一个踊跃参与和高度活力的团队，这将大大激励下一次的旅程！</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raft - Distributed Consensus Protocol]]></title>
    <link href="http://lifuzu.com/blog/2014/01/25/raft-distributed-consensus-protocol/"/>
    <updated>2014-01-25T11:52:13-08:00</updated>
    <id>http://lifuzu.com/blog/2014/01/25/raft-distributed-consensus-protocol</id>
    <content type="html"><![CDATA[<p>Rafe is a distributed consensus protocol, which allows a collection of processes to maintain consistency even in the face of multiple node failure. The two main tenants of the protocol are leader election and log replication.</p>

<!-- more -->


<h3>Learn Notes</h3>

<h4>Raft &ndash; Distributed Consensus</h4>

<ul>
<li>State

<ul>
<li>Follower

<ul>
<li>up to Candidate, if it can&rsquo;t hear from leader (i.e. stop receiving heartbeats)</li>
<li>all nodes initial state</li>
</ul>
</li>
<li>Condidate

<ul>
<li>up to Leader, if it gets votes from a majority of nodes</li>
<li>down to Follower, if it gets &ldquo;Request Vote&rdquo;</li>
</ul>
</li>
<li>Leader

<ul>
<li>down to follower, when it sees the higher election term</li>
<li>all changes to the system go through the leader</li>
<li>only one in a system</li>
</ul>
</li>
</ul>
</li>
<li>Activity

<ul>
<li>Leader Election

<ul>
<li>1. send &lsquo;Request Vote&rsquo; by Candidate</li>
<li>2. if the receiving node hasn&rsquo;t voted yet in this term then it votes for the candidate</li>
<li>3. then the node resets its election timeout</li>
<li>4. once a candidate has a majority of votes</li>
<li>5. it becomes leader</li>
</ul>
</li>
<li>Log Replication

<ul>
<li>1. a client send a change to the leader</li>
<li>2. the change is appended to the leader&rsquo;s log, uncommited</li>
<li>3. the change is sent/replicate to the followers on the next heartbeat</li>
<li>4. an entry is committed on leader once a majority of followers acknowledge it</li>
<li>5. the leader notifies the followers than the entry is committed</li>
<li>6. a response is sent to the client</li>
</ul>
</li>
</ul>
</li>
<li>Message

<ul>
<li>Append Entries

<ul>
<li>Original from Leader</li>
<li>Respond by Followers</li>
<li>In a intervals specified by the heartbeat timeout</li>
</ul>
</li>
<li>Request Vote

<ul>
<li>Original from Candidate</li>
<li>Votes by the receiving nodes (one for each node, at same term)</li>
<li>Immediately</li>
</ul>
</li>
</ul>
</li>
<li>Timeout

<ul>
<li>Election Timeout

<ul>
<li>the amount of time a follower waits until becoming a candidate</li>
<li>randomized to be between 150ms and 300ms</li>
<li>doesn&rsquo;t occur on Leader</li>
</ul>
</li>
<li>Heatbeat Timeout

<ul>
<li>should be shorter than Election Timeout</li>
<li>occurs on all nodes</li>
</ul>
</li>
</ul>
</li>
<li>Guarantee

<ul>
<li>because: requiring a majority of votes</li>
<li>only one leader can be elected per term</li>
</ul>
</li>
</ul>


<h3>JSON expression</h3>

<p>Here is a json, try to express the node to communicate with Raft protocol:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
</pre></td><td class='code'><pre><code class='json'><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="nt">&quot;message_type&quot;</span><span class="p">:</span> <span class="p">[</span>
</span><span class='line'>    <span class="s2">&quot;REQUEST_VOTE&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;VOTE&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;APPEND_ENTRIES&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="s2">&quot;RESPOND_to_append_entries&quot;</span>
</span><span class='line'>  <span class="p">],</span>
</span><span class='line'>  <span class="nt">&quot;heartbeat&quot;</span><span class="p">:</span> <span class="mi">100</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;election&quot;</span><span class="p">:</span> <span class="s2">&quot;random_time(150-300ms)&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;name&quot;</span><span class="p">:</span> <span class="s2">&quot;random_string&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;state&quot;</span><span class="p">:</span> <span class="s2">&quot;follower&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;send_message&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;to&quot;</span><span class="p">:</span> <span class="s2">&quot;who&quot;</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;type&quot;</span><span class="p">:</span> <span class="s2">&quot;message_type&quot;</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nt">&quot;reset_timeout&quot;</span><span class="p">:</span> <span class="s2">&quot;timeout_type: heartbeat|election&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;stop_election&quot;</span><span class="p">:</span> <span class="s2">&quot;&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;leader&quot;</span><span class="p">:</span> <span class="s2">&quot;who&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nt">&quot;term&quot;</span><span class="p">:</span> <span class="p">{</span>
</span><span class='line'>    <span class="nt">&quot;no&quot;</span><span class="p">:</span> <span class="mi">0</span><span class="p">,</span>
</span><span class='line'>    <span class="nt">&quot;vote_count&quot;</span><span class="p">:</span> <span class="mi">1</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Reference:</h3>

<ol>
<li><a href="https://ramcloud.stanford.edu/wiki/download/attachments/11370504/raft.pdf">https://ramcloud.stanford.edu/wiki/download/attachments/11370504/raft.pdf</a></li>
<li><a href="http://thesecretlivesofdata.com/raft/">http://thesecretlivesofdata.com/raft/</a></li>
</ol>


<blockquote><p>Supported by <a href="http://sourceforge.net/projects/freeplane/">FreePlane</a>, a great mind map editor.
Supported by <a href="http://jsoneditoronline.org/">JSON Editor Online</a>.
Supported by <a href="https://github.com/neocotic/html.md">HTML to MD</a>.
Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[产品设计冲刺：为期五天的创业配方]]></title>
    <link href="http://lifuzu.com/blog/2014/01/22/produc-design-sprint/"/>
    <updated>2014-01-22T22:31:40-08:00</updated>
    <id>http://lifuzu.com/blog/2014/01/22/produc-design-sprint</id>
    <content type="html"><![CDATA[<p>原文地址：<a href="http://www.designstaff.org/articles/product-design-sprint-2012-10-02.html">http://www.designstaff.org/articles/product-design-sprint-2012-10-02.html</a></p>

<p>在谷歌风险投资公司，我们每天都与创业公司做产品设计工作。由于我们行动迅速 ，他们也希望能迅速行动，我们优化了一些过程，可以让我们在五天以内见到良好的效果。我们把它叫做一个产品设计的冲刺，这个相当不错，它可以让你不再抓狂并加速已经进行中的项目。</p>

<p>我已经策划并运行了40几个这样的冲刺，先是在谷歌内部的团队，现在在谷歌风险投资公司投资的一些初创公司。给你一个直观的样子，这里是我们与<a href="http://custommade.com/">CustomMade</a>做了一个项目：</p>

<iframe width="560" height="315" src="http://lifuzu.com//www.youtube.com/embed/qvdO0G4uQgc" frameborder="0" allowfullscreen></iframe>




<!-- more -->


<hr />

<p>在接下来的几个帖子，我将分享一个DIY指南，你可以运行你自己的设计冲刺。</p>

<p><a href="http://www.designstaff.org/articles/product-design-sprint-2-2012-10-09.html">冲刺前：准备</a>
获取你需要的人和事物。</p>

<p><a href="http://www.designstaff.org/articles/product-design-sprint-day-1-understand-2012-10-16.html">第1天：了解</a>
通过研究，竞争审查，战略演习，深入到设计问题。</p>

<p><a href="http://www.designstaff.org/articles/product-design-sprint-day-2-diverge-2012-10-26.html">第2天：发散</a>
迅速获取尽可能多的解决方案。</p>

<p><a href="http://www.designstaff.org/articles/product-design-sprint-day-3-decide-2012-11-20.html">第3天：确定</a>
选择最好的想法，构想出一个用户的故事。</p>

<p><a href="http://www.designstaff.org/articles/product-design-sprint-day-4-prototype-2013-01-07.html">第4天：原型</a>
建立一个快速和不需要整洁的原型，展示给用户。</p>

<p><a href="http://www.designstaff.org/articles/product-design-sprint-day-5-validate-2013-03-07.html">第5天：验证</a>
展示原型到真实使用的人群（换句话说，你的公司之外的人），看看什么行得通，什么行不通。</p>

<hr />

<p>如果你之前已经听说过这个模型，好吧，你是对的。它基于由<a href="http://www.ideo.com/">IDEO</a>公司及<a href="http://dschool.stanford.edu/">斯坦福大学的设计学院</a>倡导的<a href="http://en.wikipedia.org/wiki/Design_thinking">设计思维</a>结构。不过，在过去的几年里，我做过一些过程的尝试和调整。我要分享的版本对初创公司效果特别好。</p>

<h3>头脑风暴不起什么作用</h3>

<p>我有很长时间对过程痴迷。几年前，我在谷歌尝试开始了产品设计过程。起初我召开集思广益研讨会，灵感来自<a href="http://blogs.hbr.org/cs/2012/09/the_secret_phrase_top_innovato.html">IDEO的方法</a>。</p>

<p>小组集思广益，每个人都想出来想法，是一个很大的乐趣。研讨会结束时，我们会很疲倦，但精神状态很好，我们自豪地拥有一大堆的即时贴。但是，我们想出来的新的想法并没有到任何地方去。这并不是说我们想出来的是愚蠢的想法 &ndash; 实际上大多数的想法是相当不错的。可是偏偏，从别的地方来会得到更好的想法。但是在哪儿呢？</p>

<p>根据我的经验，最成功的创意往往来自于个人，而不是群体。这些想法是一些个人埋头工作得到的。我意识到这一点之前，我召开了很多的研讨会，所以如果它从一开始对你而言似乎很明显，我希望你就跳过这章。</p>

<p>更糟糕的是，我的研讨班以协商一致的方式选择获胜的想法。但共识并不总是挑大胆的创意，独特的创意，或与设计完整性的想法。共识趋向于妥协。</p>

<p>当然，还有很多好东西，在研讨会正在运用：聚焦团队在一个项目上，审议一系列的想法，而不只是一个，致力于用纸收集想法，等等。但我还是觉得我的方法从根本上有缺陷。我是通过集思广益得到好的但未必是伟大的想法，然后通过协商一致选择获奖者。我知道，这不工作，而是在那时，我不知道该怎么办好。</p>

<h3>约束的神奇之处</h3>

<p>有一天，在我自己的设计项目中，我发现了一些事情。最好的工作发生在短时间，特别是要有一个期限。</p>

<p>其中一个例子是Gmail的优先收件箱，我们度过了四个星期，试验不同的设计原型。有数百内部测试用户签署了协议，每个星期去尝试新的实验版本，所以我必须迅速采取动作。四个星期之后，我想通了这个事情的来龙去脉，并保持单兵奋战几个月。</p>

<p>另一个例子是成为Google+视频群聊的项目。它开始只作为一个副项目，由斯德哥尔摩办公室的2个Google员工发起。我只是参观了两天，然后我尽量快地设计，最后，我们有了一个工作原型，我们可以开始用它来召开我们的团队会议。</p>

<p>在这两种情况下，我的工作更有效率，比我以往任何时候都好，无论是正常地一天一天的例行工作或任何我的头脑风暴研讨会。那么有什么不同呢？我用时间去关注和开发我自己的想法，而不是叫喊和袖手旁观，就像我在一个小组集体讨论那样。</p>

<p>但我仍然没有太多时间。我负担不了过多地想法或陷入紧急但不重要的问题，这是我经常在正常工作日做的样子。其他人，我找来帮助我地 &ndash; 工程师和产品经理 &ndash; 也都聚焦于这个项目。</p>

<p>神奇的东西就是一个紧迫的时间限制下的单独的工作，原型化和快速的用户反馈。</p>

<h3>调整IDEO式的研讨，适应谷歌工作</h3>

<p>我决定尝试把IDEO风格的“怎么我们才能可能”研讨会联系起来，以几天不间断的时间进行设计，执行最好的想法。在这第一个冲刺中，设计师Jason Cornwell粗粗加工的想法就成为<a href="http://gmailblog.blogspot.com/2011/05/introducing-people-widget.html">Gmail人群小工具</a>。我知道我是在正确的轨道上。</p>

<p>我在谷歌把全部时间用来关注各个团队运行的设计冲刺。我从组创意切换到个人的想法，给人们更多的时间开发这些想法，然后获得反馈。我尝试了一堆批评和决策的练习，不依赖于共识，并且还选择少量的一些效果最好的。</p>

<p>我得到了很多的实践：我在谷歌从一个团队跳到另一个团队，几天或一周的时间，领导了像Chrome浏览器，谷歌广告，电子商务，应用程序，搜索和谷歌X的冲刺。真是令人兴奋。该设计被推广，许多团队开始在自己内部尝试运行。</p>

<h3>速度快10倍：在初创公司运行设计冲刺</h3>

<p>当我加入谷歌风险投资公司，我想我有了全部的计划好的冲刺。但我很快就意识到我仍然有很多东西要学习。这个过程必须改变以反映像谷歌这样的一家大公司，与我们投资组成的初创公司之间的差异。例如，在谷歌，很容易抓到三个或四个设计师在一起设计几天。在初创公司，他们可能会幸运地有一个。因此，我们需要设计和修正流程，让工程师和CEO们能购轻易地做到，就像设计师做的那样。</p>

<p>初创公司希望很快得到他们的产品，然后学习怎么工作，但那样需要昂贵的付出 &ndash; 你必须编写更多的代码，修复更多的Bug，并处理比用原型更多的问题。因此，我们进一步压缩了冲刺周期，以使公司更快地得到反馈。我赞成快速和粗糙<a href="http://keynotopia.com/guides/">主题原型</a>，不喜欢需要打磨的的Photoshop实体模型。迈克尔·马戈利斯用他的<a href="http://www.designstaff.org/articles/rapid-user-research-2012-09-19.html">快如闪电</a>的<a href="http://www.designstaff.org/articles/recruiting-how-to-find-great-participants-for-your-user-study-2012-02-22.html">研究</a><a href="http://www.designstaff.org/articles/get-better-data-from-user-studies-interviewing-tips-2012-03-07.html">技术</a>，帮我们得到隔天的反馈。</p>

<p>我们还在学习，但是我们已经运行足够冲刺，这使我们有信心知道这个过程会运作良好。</p>

<p>请继续关注本系列，并且请给我们你的想法 &ndash; 我一直在寻找更多的技巧来改善我们现在做的事情。你用什么流程获得了良好的设计效果？有什么可以帮助您的公司先人一步？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[产品设计Sprint]]></title>
    <link href="http://lifuzu.com/blog/2014/01/21/product-design-sprint/"/>
    <updated>2014-01-21T11:22:14-08:00</updated>
    <id>http://lifuzu.com/blog/2014/01/21/product-design-sprint</id>
    <content type="html"><![CDATA[<p>原文地址：<a href="http://robots.thoughtbot.com/the-product-design-sprint">http://robots.thoughtbot.com/the-product-design-sprint</a></p>

<p>产品设计Sprint是一个5个阶段的演习，使用设计思维，减少内在风险，把产品成功推向市场。到目前为止，我们已经做了六大产品的设计Sprint，并使得他们成为我们咨询活动预设的一部分。</p>

<p>参加一个以设计Sprint为定向的团队，旨在努力达成明确清晰的目标。开始一个新的功能，工作流程，产品，业务或解决一个现有产品的问题，Sprint都是有用的出发点。</p>

<p>集设计Sprint和设计思想到我们的产品开发过程中，使我们与我们的目标保持一致，并帮助我们明智地投资我们的时间和金钱。</p>

<h3>设计思想</h3>

<p><a href="http://en.wikipedia.org/wiki/Design_thinking">设计思想</a>结合换位思考，创造力和理性来解决以人为本的问题。它是设计Sprint建立的基础。</p>

<h4>换位思考</h4>

<p>有了设计思想，我们用换位思考的方法，通过我们客户的眼睛看世界，了解他们碰到的问题。这些问题可能涉及到技术，金融，政治，宗教，人，社会和文化等等。我们的工作就是要全面地理解这些问题，在一个更适用的环境下，开发出一套强化的、脉络清晰的架构。</p>

<p>除了从我们自己的角度，我们的目标是尽可能多地理解其他人的观点，以更好地使我们的理解多元化。</p>

<p>换位思考是第1阶段（理解）的首要重点和第5阶段（测试和学习）的主要部分。我们的目标应该是为人类解决问题和制造产品，要始终保持换位思考。</p>

<h4>创造力</h4>

<p>创意是机会的发现。我们运用创造力来产生洞察力和解决方案的概念。</p>

<p>最有创意的解决方案是由独到的见解和交叉的视角启发的。换位思考，如上所述，让我们具有理解不同的观点和更具创造性的能力。</p>

<p>合作激发创造力。更多的观点，想法和见解导致更多的机会。</p>

<p>创意是第2阶段（发散）的焦点，但存在于所有阶段（开发原型，测试/面试，研究/观察，创造实验等）</p>

<h4>理性</h4>

<p>我们使用理性，通过实验，测试和定性/定量的测量，以找到适应问题背景的解决方案。这是第3阶段（汇流）和第5阶段（测试和学习）的主要焦点。</p>

<p>设计思想也应该渗透我们所有的设计Sprint过程中，从工程设计到营销到业务发展。在复杂的商业生态系统中，设计思想可以作为一种全面的方法来促进和维护与客户的共生关系。</p>

<!-- more -->


<h4>Sprint阶段</h4>

<p>一个典型的项目开始的Sprint的长度为5天，每一天代表一个不同的阶段。</p>

<p>这个时间表不是刚性的，要适应问题的特定需求。例如，某些阶段可能需要超过一整天的时间而其他可能需要较少。</p>

<p>其目的是把开发一个产品或功能的想法变成一个原型，可以进行测试，以帮助我们弥补我们风险最大的知识空白，有效或无效我们风险最大的假设，并指导今后的工作。
<img src="http://robots.thoughtbot.com/images/the-product-design-sprint/sprint-phases.png" alt="Sprint Phase" /></p>

<h5>阶段1：理解</h5>

<p><strong>目标</strong></p>

<p>建立一个工作背景的共识，包括问题，业务，客户，价值主张，以及如何定义成功。</p>

<p>这一阶段的结束，我们也希望能够发现一些最大的风险，并开始制定计划来减少他们。</p>

<p><strong>原因</strong></p>

<p>共同的理解，授权每个人的决策和对项目的贡献。</p>

<p>了解我们的风险，使我们能够规避风险，并避免投入时间和金钱到那些未知或假设的东西上。</p>

<p><strong>活动</strong></p>

<ul>
<li>定义商业机会。</li>
<li>定义客户。</li>
<li>定义问题。</li>
<li>定义价值主张（为什么人们会支付你？）。</li>
<li>定义特定于上下文的术语（这将作为一个字典）。</li>
<li>讨论短期和长期业务目标（前景是什么？）。</li>
<li>收集和分析现有的研究。</li>
<li>填写商业模式蓝图（这应该要不断地重新审议）。</li>
<li>分析我们的竞争产品。</li>
<li>收集其他人士/产品解决相似或类似问题的灵感和翔实的例子。</li>
<li>如果有一个现有的网站/应用程序，绘制出的界面。</li>
<li>当他们提出讨论，在墙上或用即时贴在板上捕获假设和未知。以后我们可以重温这堵墙，把相关项目组织在一起，制定计划，消除未知的风险和解决风险的假设。</li>
</ul>


<p>所有这些定义都有望改变，因为我们不断向前发展，并会了解更多。</p>

<p><strong>交付物</strong></p>

<ul>
<li>笔记和文档，记录我们整天讨论的定义和目标。这些笔记应提供一个可靠的参考，并能帮助后来入职的同事。</li>
<li>一个发起下一阶段Sprint的计划。</li>
</ul>


<h5>阶段2：发散</h5>

<p><strong>目标</strong></p>

<p>产生见解和可能的解决方案，以解决我们客户的问题。</p>

<p>探索解决问题的尽可能多的方式，不管如何是否现实，可行的，或者可用的。</p>

<p><strong>原因</strong></p>

<p>这个阶段产生的机会，使我们能够评估并合理消除选项，并识别潜在的可行的解决方案，以向前迈进。这一阶段对创新和市场细分也是至关重要的。</p>

<p><strong>活动</strong></p>

<ul>
<li>不断地问，“我们这样，可能会怎样&hellip;&hellip;”。</li>
<li>产生，发展和交流新的想法。</li>
<li>快速迭代的单个草图。</li>
<li>组织草图在白板上。</li>
<li>思维导图，单独地，并／或者作为一个组。</li>
</ul>


<p><strong>交付物</strong></p>

<ul>
<li><p><em>关键路径图</em>：突出了故事中最关键的手边的难题。你的客户在哪里开始，在哪里他们应该结束了，一路上什么需要做什么？
<img src="http://robots.thoughtbot.com/images/the-product-design-sprint/criticalpath.jpg" alt="" /></p></li>
<li><p><em>原型目标</em>：我们想更多地了解什么？哪些假设我们需要搞清楚？</p></li>
</ul>


<h5>阶段3：汇集</h5>

<p><strong>目标</strong></p>

<p>落实在阶段1和2找出的一切可能性，消除了胡乱和目前不可行的想法，并磨练我们感觉最好的想法。</p>

<p>这些想法将引导阶段4原型的实施，并将与现有或潜在客户进行测试。</p>

<p><strong>原因</strong></p>

<p>不是每一个想法是可操作的或者是可行的，只有小部分能适应形势和问题的背景。探索许多替代解决方案有助于提高我们朝着正确的方向前进的信心。</p>

<p><strong>活动</strong></p>

<ul>
<li>确定思路，旨在以不同的方式解决同样的问题。</li>
<li>消除不能目前实行的解决办法。</li>
<li>投票支持好点子。</li>
<li>用故事情节表达的核心客户流。这可能是工作流或故事（从客户的角度来看），客户如何参与、了解并变得有动力来购买或使用某种产品或服务。</li>
</ul>


<p><strong>交付物</strong></p>

<ul>
<li><p><em>原型故事板</em>：一本漫画书风格的故事，移动客户通过前面定义的关键路径。故事情节是蓝图的原型，原型将在第4阶段创建。
<img src="http://robots.thoughtbot.com/images/the-product-design-sprint/storyboard.jpg" alt="" /></p></li>
<li><p><em>假设表</em>：一个列表包含所有内在的原型的假设，以及我们计划如何测试它们，验证这些假设的预期结果。
<img src="http://robots.thoughtbot.com/images/the-product-design-sprint/assumptions.jpg" alt="" /></p></li>
</ul>


<h5>阶段4：原型</h5>

<p><strong>目标</strong></p>

<p>建立一个原型，可以与现有或潜在客户进行测试。</p>

<p>设计原型来了解特定的未知和假设。其介质应当由时间以及学习目标来确定。纸，主题演讲，以及简单的HTML/ CSS等都是不错的原型媒体。</p>

<p>原型故事板和前三个阶段的Sprint应该使原型建设相当直截了当。不应该有什么导致很大的不确定性。</p>

<p><strong>原因</strong></p>

<p>原型是获得关于产品需要成为什么这一有价值的见解的一种非常低成本的方式。一旦我们知道什么可行，什么不可行，我们可以自信地投入时间和金钱，更长久地实施。</p>

<p><strong>活动</strong></p>

<ul>
<li>原型实现</li>
</ul>


<p><strong>交付物</strong></p>

<ul>
<li>可测试的原型。</li>
<li>一个测试计划。如果我们正在测试工作流程，我们也应该有一份结果列表，我们可以邀请我们的测试人员，一起参与实现我们的原型。</li>
</ul>


<h5>阶段5：测试与学习</h5>

<p><strong>目标</strong></p>

<p>与现有或潜在的客户一起测试原型。</p>

<p>与现有或潜在的客户来一起测试是重要的，因为他们是想要你的产品为他们工作，并带给他们价值的人。他们经历的问题和背景知识会影响您的产品与他们的交互，不是客户不会有。</p>

<p><strong>原因</strong></p>

<p>你的客户会告诉你他们所需要的产品。测试我们的想法可以帮助我们更多地了解我们以前知之甚少的事情，并让我们更清晰地了解哪些方向我们应该接下来进入。它也可以帮助我们纠正过程和避免制造错误的产品。</p>

<p><strong>活动</strong></p>

<ul>
<li>在客户与原型交互的时候，观察客户，和客户交谈。</li>
<li>在客户与竞争对手的产品进行互动的时候，观察客户，和客户交谈。</li>
</ul>


<p><strong>交付物</strong>
&ndash; 从我们的测试原型中收获的经验和教训的总结/报告。
&ndash; 一个超出了设计Sprint的发展计划。</p>

<h4>结束</h4>

<p>我们的产品设计Sprint过程已经被IDEO的<a href="http://www.ideo.com/work/human-centered-design-toolkit/">以人为本的设计工具包</a>和谷歌风投的<a href="http://www.designstaff.org/articles/product-design-sprint-2012-10-02.html">一系列博客文章</a>隆重通报，我们很感谢他们共享的信息。</p>

<p>我们希望我们做的工作对世界有正面影响。我们的目标不仅是制造“一个”的产品，而是要打造“正确”的产品。一个有意义的产品，真正满足人们的需求，并能够支持一个可行的业务。</p>

<p>我们认为，产品设计的Sprint和设计思想将帮助我们带来更多成功的产品和企业市场。</p>
]]></content>
  </entry>
  
</feed>
