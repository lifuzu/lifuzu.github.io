<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Build and Release]]></title>
  <link href="http://lifuzu.com/atom.xml" rel="self"/>
  <link href="http://lifuzu.com/"/>
  <updated>2016-03-11T09:59:36-08:00</updated>
  <id>http://lifuzu.com/</id>
  <author>
    <name><![CDATA[Richard Lee]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Playing With Ansible to Manage Build Pool]]></title>
    <link href="http://lifuzu.com/blog/2016/03/06/playing-with-ansible-to-manage-build-pool/"/>
    <updated>2016-03-06T23:30:26-08:00</updated>
    <id>http://lifuzu.com/blog/2016/03/06/playing-with-ansible-to-manage-build-pool</id>
    <content type="html"><![CDATA[<p><img src="https://lh3.googleusercontent.com/-5avk7kTPus4/Vt0q8cKjYhI/AAAAAAAAEBU/3hJt7LybC-w/s600/ansible.png" title="ansible.png" alt="Ansible" /></p>

<p>Ansible is one of the best configuration management system, together with Puppet, Chef, and etc. Ansible makes IT deployment automatic and easy. With Ansible, deploying application, managing systems is becoming easier than ever, as well as building a strong foundation for DevOps.</p>

<p>This article use Ansible to config and manage Xcode build pool step by step.</p>

<!-- more -->


<h3>Install ansible on Ubuntu</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo apt-get install software-properties-common
</span><span class='line'>$ sudo apt-add-repository ppa:ansible/ansible
</span><span class='line'>$ sudo apt-get update
</span><span class='line'>$ sudo apt-get install ansible</span></code></pre></td></tr></table></div></figure>


<h3>Install brew on Mac OS X server</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"</span></code></pre></td></tr></table></div></figure>


<h3>Install ansible on all of the server</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ brew install ansible</span></code></pre></td></tr></table></div></figure>


<h3>Connect all clients from a machine (called controller) which you are using to control all clients</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh-genkey -t rsa -b 2048
</span><span class='line'>$ ssh-copy-id &lt;client_username&gt;@&lt;client_server_address&gt;</span></code></pre></td></tr></table></div></figure>


<p>for example (for every client):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ssh-copy-id admin@imac-1.local</span></code></pre></td></tr></table></div></figure>


<h3>Create hosts document under <code>/etc/ansible/hosts</code> on the controller</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[office:vars]
</span><span class='line'>admin_user=admin
</span><span class='line'>
</span><span class='line'>[sandbox]
</span><span class='line'>imac-1.local
</span><span class='line'>
</span><span class='line'>[office]
</span><span class='line'>imac-1.local
</span><span class='line'>imac-2.local</span></code></pre></td></tr></table></div></figure>


<h3>Config scp over ssh <code>/etc/ansible/ansible.cfg</code> (ref #3)</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>[ssh_connection]
</span><span class='line'>scp_if_ssh=True</span></code></pre></td></tr></table></div></figure>


<h3>Try to connect all of the clients</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible -i hosts ubuntuservers -m ping -u build # specify hosts file
</span><span class='line'># OR
</span><span class='line'>$ ansible all -m ping -u admin
</span><span class='line'>imac-1.local | success &gt;&gt; {
</span><span class='line'>    "changed": false, 
</span><span class='line'>    "ping": "pong"
</span><span class='line'>}
</span><span class='line'>
</span><span class='line'>imac-2.local | success &gt;&gt; {
</span><span class='line'>    "changed": false, 
</span><span class='line'>    "ping": "pong"
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>cool, looks good for now!</p>

<h3>Create a playbook named <code>hello-ansible.yml</code> under the current folder</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>- hosts: all
</span><span class='line'>  remote_user: admin
</span><span class='line'>  gather_facts: False
</span><span class='line'>  tasks:
</span><span class='line'>    - name: print to stdout
</span><span class='line'>      command: echo "Hello"
</span><span class='line'>      register: hello
</span><span class='line'>
</span><span class='line'>    - debug: msg=""
</span><span class='line'>
</span><span class='line'>    - name: print Java version
</span><span class='line'>      shell: "java -version 2&gt;&1"
</span><span class='line'>      register: java_version
</span><span class='line'>
</span><span class='line'>    - debug: msg=""</span></code></pre></td></tr></table></div></figure>


<h3>Run the playbook we created above</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible-playbook hello-ansible.yml</span></code></pre></td></tr></table></div></figure>


<p>It should print a lot of outputs, including:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>...
</span><span class='line'>TASK: [debug msg=""] ************************************************* 
</span><span class='line'>ok: [imac-1.local] =&gt; {
</span><span class='line'>    "msg": "{u'changed': True, u'end': u'2015-10-22 14:21:08.740247', u'stdout': u'Hello', u'cmd': [u'echo', u'Hello'], u'start': u'2015-10-22 14:21:08.734848', u'delta': u'0:00:00.005399', u'stderr': u'', u'rc': 0, 'invocation': {'module_name': 'command', 'module_args': 'echo Hello'}, 'stdout_lines': [u'Hello']}"
</span><span class='line'>}
</span><span class='line'>ok: [imac-2.local] =&gt; {
</span><span class='line'>    "msg": "{u'changed': True, u'end': u'2015-10-22 14:21:08.742023', u'stdout': u'Hello', u'cmd': [u'echo', u'Hello'], u'start': u'2015-10-22 14:21:08.736217', u'delta': u'0:00:00.005806', u'stderr': u'', u'rc': 0, 'invocation': {'module_name': 'command', 'module_args': 'echo Hello'}, 'stdout_lines': [u'Hello']}"
</span><span class='line'>}
</span><span class='line'>...
</span><span class='line'>TASK: [debug msg=""] ***************************** 
</span><span class='line'>ok: [imac-1.local] =&gt; {
</span><span class='line'>    "msg": "[u'java version 1.8.0_45', u'Java(TM) SE Runtime Environment (build 1.8.0_45-b14)', u'Java HotSpot(TM) 64-Bit Server VM (build 25.45-b02, mixed mode)']"
</span><span class='line'>}
</span><span class='line'>ok: [imac-2.local] =&gt; {
</span><span class='line'>    "msg": "[u'java version 1.8.0_45', u'Java(TM) SE Runtime Environment (build 1.8.0_45-b14)', u'Java HotSpot(TM) 64-Bit Server VM (build 25.45-b02, mixed mode)']"
</span><span class='line'>}
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<p>OR</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible-playbook -i hosts macports.yaml -K</span></code></pre></td></tr></table></div></figure>


<p><code>-i</code> specify hosts file, and <code>-K</code> ask for sudo password.</p>

<h3>Create a git repo to store the playbooks</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git init .
</span><span class='line'>$ git add .
</span><span class='line'>$ git config --global user.email "&lt;your@email.address&gt;"
</span><span class='line'>$ git config --global user.name "&lt;Your Name&gt;"
</span><span class='line'>$ git commit
</span><span class='line'>$ git remote add origin &lt;git_repo&gt;
</span><span class='line'>$ git push origin master</span></code></pre></td></tr></table></div></figure>


<p>OK, we start to figure out how to manage Xcode from now.</p>

<h3>Create a playbook for xcode-install</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>- hosts: all
</span><span class='line'>  remote_user: jenkins-admin
</span><span class='line'>  gather_facts: False
</span><span class='line'>  tasks:
</span><span class='line'>    - name: install xcode-install
</span><span class='line'>      gem:  name=xcode-install state=present</span></code></pre></td></tr></table></div></figure>


<p>name it as <code>xcode-install.yaml</code></p>

<p>TODO:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ softwareupdate -l
</span><span class='line'>$ softwareupdate -i -a
</span><span class='line'>$ xcode-install list
</span><span class='line'>$ xcode-install install 7.1
</span><span class='line'>$ ...</span></code></pre></td></tr></table></div></figure>


<h3>Reuse the shared module, Ansible call it <code>Role</code> (ref #4)</h3>

<p>&ldquo;Roles in Ansible build on the idea of include files and combine them to form clean, reusable abstractions – they allow you to focus more on the big picture and only dive down into the details when needed.&rdquo;</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo ansible-galaxy install smola.java  # see readme at ref #5</span></code></pre></td></tr></table></div></figure>


<p>then create playbook <code>java.yml</code> with the following content:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>---
</span><span class='line'>- hosts: ubuntuservers
</span><span class='line'>  remote_user: build
</span><span class='line'>  sudo: True
</span><span class='line'>  vars:
</span><span class='line'>    java_packages:
</span><span class='line'>      - oracle-java6-installer
</span><span class='line'>      - oracle-java6-set-default
</span><span class='line'>
</span><span class='line'>  roles:
</span><span class='line'>    - { role: smola.java }</span></code></pre></td></tr></table></div></figure>


<p>run the command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ansible-playbook -i hosts java.yml</span></code></pre></td></tr></table></div></figure>


<h3>References:</h3>

<ol>
<li><a href="http://brew.sh/">http://brew.sh/</a></li>
<li><a href="https://github.com/ideasonpurpose/ansible-playbooks">https://github.com/ideasonpurpose/ansible-playbooks</a></li>
<li><a href="http://stackoverflow.com/questions/23899028/ansible-failed-to-transfer-file-to">http://stackoverflow.com/questions/23899028/ansible-failed-to-transfer-file-to</a></li>
<li><a href="http://docs.ansible.com/ansible/playbooks_roles.html">http://docs.ansible.com/ansible/playbooks_roles.html</a></li>
<li><a href="https://github.com/smola/ansible-java-role">https://github.com/smola/ansible-java-role</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Libxmljs Failed on Macosx]]></title>
    <link href="http://lifuzu.com/blog/2016/01/01/install-libxmljs-failed-on-macosx/"/>
    <updated>2016-01-01T15:59:11-08:00</updated>
    <id>http://lifuzu.com/blog/2016/01/01/install-libxmljs-failed-on-macosx</id>
    <content type="html"><![CDATA[<p>Today I am trying to install osmosis on macosx</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm i --save osmosis</span></code></pre></td></tr></table></div></figure>


<p>libxmljs is one of the dependency of it, which is failed during installing, here is the error log:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>...
</span><span class='line'>3 warnings generated.
</span><span class='line'>  CC(target) Release/obj.target/libxml/vendor/libxml/xpointer.o
</span><span class='line'>  LIBTOOL-STATIC Release/xml.a
</span><span class='line'>libtool: unrecognized option `-static'
</span><span class='line'>libtool: Try `libtool --help' for more information.
</span><span class='line'>make: *** [Release/xml.a] Error 1
</span><span class='line'>gyp ERR! build error 
</span><span class='line'>gyp ERR! stack Error: `make` failed with exit code: 2
</span><span class='line'>...</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<p>Search with Google, found some cues, but not total same. I remember I installed libtool with port to fix a build error before, so the root cause should be two different libtools installed on my macosx:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ which -a libtool
</span><span class='line'>/usr/local/bin/libtool
</span><span class='line'>/usr/bin/libtool</span></code></pre></td></tr></table></div></figure>


<p>Verify if installed with <code>port</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ port installed
</span><span class='line'>The following ports are currently installed:
</span><span class='line'>  ...
</span><span class='line'>  libtool @2.4.6_2 (active)
</span><span class='line'>  ...</span></code></pre></td></tr></table></div></figure>


<p>Uninstall the one which <code>port</code> installed:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo port uninstall libtool</span></code></pre></td></tr></table></div></figure>


<p>Then try to compile libxmljs component:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>...
</span><span class='line'>3 warnings generated.
</span><span class='line'>  CC(target) Release/obj.target/libxml/vendor/libxml/xpointer.o
</span><span class='line'>  LIBTOOL-STATIC Release/xml.a
</span><span class='line'>  CXX(target) Release/obj.target/xmljs/src/libxmljs.o
</span><span class='line'>  CXX(target) Release/obj.target/xmljs/src/xml_attribute.o
</span><span class='line'>  CXX(target) Release/obj.target/xmljs/src/xml_document.o
</span><span class='line'>  CXX(target) Release/obj.target/xmljs/src/xml_element.o
</span><span class='line'>  CXX(target) Release/obj.target/xmljs/src/xml_comment.o
</span><span class='line'>  CXX(target) Release/obj.target/xmljs/src/xml_namespace.o
</span><span class='line'>  CXX(target) Release/obj.target/xmljs/src/xml_node.o
</span><span class='line'>  CXX(target) Release/obj.target/xmljs/src/xml_sax_parser.o
</span><span class='line'>  CXX(target) Release/obj.target/xmljs/src/xml_syntax_error.o
</span><span class='line'>  CXX(target) Release/obj.target/xmljs/src/xml_text.o
</span><span class='line'>  CXX(target) Release/obj.target/xmljs/src/xml_xpath_context.o
</span><span class='line'>  SOLINK(target) Release/xmljs.node</span></code></pre></td></tr></table></div></figure>


<p>The problem is resolved!</p>

<h3>References:</h3>

<ol>
<li><a href="https://github.com/Homebrew/homebrew/issues/28442">https://github.com/Homebrew/homebrew/issues/28442</a></li>
<li><a href="https://github.com/rc0x03/node-osmosis">https://github.com/rc0x03/node-osmosis</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[RESTful WordPress]]></title>
    <link href="http://lifuzu.com/blog/2015/10/08/restful-wordpress/"/>
    <updated>2015-10-08T22:36:58-07:00</updated>
    <id>http://lifuzu.com/blog/2015/10/08/restful-wordpress</id>
    <content type="html"><![CDATA[<p><img src="http://www.codediesel.com/wp-content/uploads/2015/07/wordpress-rest-api.jpg" alt="enter image description here" />
This article introduce how to launch and config WordPress at first time, based on the composed WordPress docker container. With the several WordPress plugins, setup the RESTful API and config their permissions to register users, create new posts etc.</p>

<!-- more -->


<p>At first, please following the <a href="http://lifuzu.com/blog/2015/10/05/wordpress-in-docker/">previous post</a> to compose the latest WordPress docker container.</p>

<h3>Start the composed WordPress docker container</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># Inside the directory contained docker-compose.yml
</span><span class='line'>$ docker-compose up -d</span></code></pre></td></tr></table></div></figure>


<p>You should be able to get the container IP address (not localhost, or 127.0.0.1) with the commands:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># 1. to find the launched container
</span><span class='line'>$ docker-machine ls
</span><span class='line'>NAME      ACTIVE   DRIVER       STATE     URL                         SWARM
</span><span class='line'>default            virtualbox   Running   tcp://192.168.99.100:2376
</span><span class='line'>
</span><span class='line'># 2. to address the IP address with the name
</span><span class='line'>$ docker-machine ip default
</span><span class='line'>192.168.99.100</span></code></pre></td></tr></table></div></figure>


<p>Now open a browser to access the IP address with the port which set up in the composed yaml file: <code>docker-compose.yml</code>:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>http://192.168.99.100:8080</span></code></pre></td></tr></table></div></figure>


<h3>Config WordPress with a blog name and admin account</h3>

<p>At the very beginning, you should get the following web interface:
<img src="https://lh3.googleusercontent.com/-t0RPSrXRc5c/VhdEXMZ-W3I/AAAAAAAADnE/jSkbOTK9-AE/s600/Screen+Shot+2015-10-08+at+9.28.34+PM.png" title="Screen Shot 2015-10-08 at 9.28.34 PM.png" alt="enter image description here" /></p>

<p>Selecting your favorite language, then click &ldquo;Continue&rdquo;. At the next UI, you have to input some critical information, like site title, the first user name, password and email address. The first user should be the administrator for this installation by default. (You can change them all after the first successful login):</p>

<p><img src="https://lh3.googleusercontent.com/-c2yoHZQahOE/VhdE3jCBemI/AAAAAAAADnQ/ilowua9GOjs/s600/Screen+Shot+2015-10-08+at+9.34.00+PM.png" title="Screen Shot 2015-10-08 at 9.34.00 PM.png" alt="enter image description here" />  <br/>
After clicking &ldquo;Install WordPress&rdquo; button at bottom, several seconds later, the WordPress is ready on your machine.</p>

<p>Login WordPress with your first user name and password:
<img src="https://lh3.googleusercontent.com/--QsmbOgVBZs/VhdE--mE81I/AAAAAAAADnc/K0E5hPLukaA/s600/Screen+Shot+2015-10-08+at+9.34.45+PM.png" title="Screen Shot 2015-10-08 at 9.34.45 PM.png" alt="enter image description here" /></p>

<p>Then done, WordPress admin UI is displayed:
<img src="https://lh3.googleusercontent.com/-ZQ0RrnS4vbY/VhdFDqkfgZI/AAAAAAAADno/G9TOX6DYPgM/s600/Screen+Shot+2015-10-08+at+9.35.03+PM.png" title="Screen Shot 2015-10-08 at 9.35.03 PM.png" alt="enter image description here" /></p>

<h3>Install some plugins for RESTful api</h3>

<p>For mobile development, we have to install some plugins to support RESTful API, which should be used to connect WordPress server from the mobile clients.</p>

<p>The first plugin is &ldquo;JSON API&rdquo;. &ldquo;JSON PAI&rdquo; provides a lot of functions, such as create new posts, remove posts, etc. Click &ldquo;Plugins&rdquo; at the left sidemenu, then &ldquo;Add New&rdquo;:
<img src="https://lh3.googleusercontent.com/-x6L0YZY6rL4/VhdHr1UqV1I/AAAAAAAADoE/L6VwIAAqZoQ/s600/Screen+Shot+2015-10-08+at+9.46.14+PM.png" title="Screen Shot 2015-10-08 at 9.46.14 PM.png" alt="enter image description here" /></p>

<p>Put the name &ldquo;json api&rdquo; into the search box, push the &ldquo;return&rdquo; on keyboard:
<img src="https://lh3.googleusercontent.com/-motAYH89BYk/VhdIGTcWlGI/AAAAAAAADoQ/4Aun05CcJgQ/s600/Screen+Shot+2015-10-08+at+9.46.31+PM.png" title="Screen Shot 2015-10-08 at 9.46.31 PM.png" alt="enter image description here" /></p>

<p>Click the &ldquo;Install Now&rdquo; button just below &ldquo;JSON API&rdquo;, WordPress will start to install the plugin. However, after intallation is finish, you have to click the &ldquo;Activate Plugin&rdquo; link as the following image:</p>

<p><img src="https://lh3.googleusercontent.com/-6k_fMuywkbA/VhdIZwoWmOI/AAAAAAAADoc/P0W3GhkddZw/s600/Screen+Shot+2015-10-08+at+9.48.33+PM.png" title="Screen Shot 2015-10-08 at 9.48.33 PM.png" alt="enter image description here" /></p>

<p>Same process for the second plugin &ldquo;JSON API User&rdquo;. This plugin provides some useful functions to register and/or create new user with the RESTful api on WordPress. Eventually, you should get the following picture to make sure the plugins are ready for the next steps here:
<img src="https://lh3.googleusercontent.com/-DHi_aAoHdro/VhdJTWWJFNI/AAAAAAAADow/qhms7BRvITs/s600/Screen+Shot+2015-10-08+at+9.49.42+PM.png" title="Screen Shot 2015-10-08 at 9.49.42 PM.png" alt="enter image description here" /></p>

<h3>Config the permission for registering user, creating post, etc.</h3>

<p>Once the plugins installed, we still need to config these plugins to activate the functionalities according your requirements. Click &ldquo;Settings&rdquo; from the left sidemenu, then &ldquo;JSON API&rdquo;:
<img src="https://lh3.googleusercontent.com/-xPKPdWNRCCk/VhdKVPHzwDI/AAAAAAAADpQ/Su0b6JpskBo/s600/Screen+Shot+2015-10-08+at+10.01.56+PM.png" title="Screen Shot 2015-10-08 at 10.01.56 PM.png" alt="enter image description here" /></p>

<p>You should find all but &ldquo;Core&rdquo; functionality need to be &ldquo;Activate&#8221;d, like:
<img src="https://lh3.googleusercontent.com/-uxMEHqUWApo/VhdLYbjk36I/AAAAAAAADps/T86uIFtR8I0/s600/Screen+Shot+2015-10-08+at+10.03.00+PM.png" title="Screen Shot 2015-10-08 at 10.03.00 PM.png" alt="enter image description here" /></p>

<p>Turn &ldquo;Posts&rdquo; and &ldquo;User&rdquo; on by clicking the link just below them, as:
<img src="https://lh3.googleusercontent.com/-c6e7DuahoDY/VhdLR61wSVI/AAAAAAAADpg/2x4UvpOoITE/s600/Screen+Shot+2015-10-08+at+10.05.50+PM.png" title="Screen Shot 2015-10-08 at 10.05.50 PM.png" alt="enter image description here" /></p>

<p>After configuring for plugins, we have to set the default new user have the permission to create posts by setting up the default new user as &ldquo;Author&rdquo;. Click &ldquo;Settings&rdquo;, then &ldquo;General&rdquo;, as:
<img src="https://lh3.googleusercontent.com/-EFUC7X-J8UQ/VhdMR65Ge-I/AAAAAAAADqA/gPaCGoOCUs8/s600/Screen+Shot+2015-10-08+at+10.08.45+PM.png" title="Screen Shot 2015-10-08 at 10.08.45 PM.png" alt="enter image description here" /></p>

<p>Change the &ldquo;New User Default Role&rdquo; to &ldquo;Author&rdquo;:</p>

<p><img src="https://lh3.googleusercontent.com/-CjmyYO739HU/VhdMcIpp51I/AAAAAAAADqM/wtYN5moXL58/s600/Screen+Shot+2015-10-08+at+10.08.57+PM.png" title="Screen Shot 2015-10-08 at 10.08.57 PM.png" alt="enter image description here" /></p>

<p>Don&rsquo;t forget click the button at the bottom of the page to &ldquo;Save Changes&rdquo;.</p>

<h3>Verify the connections</h3>

<p>We need several test cases to verify the connections, basically, just write the test cases, then run them automatically. For simplifying the validation process, I created a repository for the test cases, and leverage Jasmine as the test framework, you have to install nodejs (please refer to my previous blog <a href="http://lifuzu.com/blog/2014/08/20/install-nodejs-using-nvm/">here</a>) then Jasmine-node globally, as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ npm install jasmine-node -g</span></code></pre></td></tr></table></div></figure>


<p>Clone the automation test repository from github:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone https://github.com/lifuzu/capstone4tipcalc.git</span></code></pre></td></tr></table></div></figure>


<p>Enter the <code>tests</code> folder, run the test cases:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ cd environment/restapi/tests/
</span><span class='line'>$ jasmine-node .
</span><span class='line'>......
</span><span class='line'>
</span><span class='line'>Finished in 0.88 seconds
</span><span class='line'>6 tests, 33 assertions, 0 failures, 0 skipped</span></code></pre></td></tr></table></div></figure>


<p>If you experience any failure, probably you have to modify the file <code>automation_spec.js</code> to your IP address which is different on different host.</p>

<p>You should find some new user created by clicking &ldquo;Users&rdquo; from the left sidemenu, as:
<img src="https://lh3.googleusercontent.com/-uKNnL1E3jvg/VhdRVZd9HnI/AAAAAAAADrE/Uyl3W_fodRY/s600/Screen+Shot+2015-10-08+at+10.31.07+PM.png" title="Screen Shot 2015-10-08 at 10.31.07 PM.png" alt="enter image description here" /></p>

<p>And new posts by clicking the &ldquo;Posts&rdquo; from the left sidemenu:
<img src="https://lh3.googleusercontent.com/-aF-czcMgyL4/VhdRiA1T14I/AAAAAAAADrU/DjxRm6WzuFw/s600/Screen+Shot+2015-10-08+at+10.31.27+PM.png" title="Screen Shot 2015-10-08 at 10.31.27 PM.png" alt="enter image description here" /></p>

<p>Or home page here <code>http://192.168.99.100:8080/</code>, as:
<img src="https://lh3.googleusercontent.com/-wBYkoqqe6Do/VhdSC-QfCZI/AAAAAAAADrg/3eiS0W50IXM/s600/Screen+Shot+2015-10-08+at+10.34.31+PM.png" title="Screen Shot 2015-10-08 at 10.34.31 PM.png" alt="enter image description here" /></p>

<h3>References</h3>

<ol>
<li><a href="https://wordpress.org/plugins/json-api/">https://wordpress.org/plugins/json-api/</a></li>
<li><a href="https://wordpress.org/plugins/json-api-user/">https://wordpress.org/plugins/json-api-user/</a></li>
<li><a href="https://github.com/lifuzu/capstone4tipcalc.git">https://github.com/lifuzu/capstone4tipcalc.git</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Wordpress in Docker]]></title>
    <link href="http://lifuzu.com/blog/2015/10/05/wordpress-in-docker/"/>
    <updated>2015-10-05T22:52:37-07:00</updated>
    <id>http://lifuzu.com/blog/2015/10/05/wordpress-in-docker</id>
    <content type="html"><![CDATA[<p><img src="http://johnny.chadda.se/wp-content/uploads/2015/02/docker-wordpress.png" alt="enter image description here" /></p>

<h3>Install docker container</h3>

<p>On Windows/MacOS X, please go to Docker-toolbox: <a href="https://www.docker.com/toolbox">https://www.docker.com/toolbox</a>
Following the instruction to install docker-toolbox;</p>

<h3>Open the docker quickstart terminal:</h3>

<p><img src="https://lh3.googleusercontent.com/-Ku1FRq1LhCM/VhNc3Asx9RI/AAAAAAAADmk/wW1l3jUqF-g/s600/Screen+Shot+2015-10-05+at+10.30.59+PM.png" title="Screen Shot 2015-10-05 at 10.30.59 PM.png" alt="enter image description here" /></p>

<!-- more -->


<h3>Install mysql database</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker pull mysql</span></code></pre></td></tr></table></div></figure>


<h3>Install wordpress application</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ docker pull wordpress</span></code></pre></td></tr></table></div></figure>


<h3>Compose the application with database, with a file named: <code>docker-compose.yml</code></h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">wordpress</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">wordpress</span>
</span><span class='line'>  <span class="l-Scalar-Plain">links</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">db:mysql</span>
</span><span class='line'>  <span class="l-Scalar-Plain">ports</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">8080:80</span>
</span><span class='line'>
</span><span class='line'>  <span class="l-Scalar-Plain">net</span><span class="p-Indicator">:</span> <span class="s">&quot;bridge&quot;</span>
</span><span class='line'>  <span class="l-Scalar-Plain">dns</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">8.8.8.8</span>
</span><span class='line'>    <span class="p-Indicator">-</span> <span class="l-Scalar-Plain">4.4.4.4</span>
</span><span class='line'>
</span><span class='line'><span class="l-Scalar-Plain">db</span><span class="p-Indicator">:</span>
</span><span class='line'>  <span class="l-Scalar-Plain">image</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">mysql</span>
</span><span class='line'>  <span class="l-Scalar-Plain">environment</span><span class="p-Indicator">:</span>
</span><span class='line'>    <span class="l-Scalar-Plain">MYSQL_ROOT_PASSWORD</span><span class="p-Indicator">:</span> <span class="l-Scalar-Plain">example</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Launch the composed service</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='yaml'><span class='line'><span class="l-Scalar-Plain">$ docker-compose up</span>
</span></code></pre></td></tr></table></div></figure>


<p>The service should be launched as following:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">db_1        | 2015-10-06 05:13:50 1 [Note] Event Scheduler: Loaded 0 events</span>
</span><span class='line'><span class="go">db_1        | 2015-10-06 05:13:50 1 [Note] mysqld: ready for connections.</span>
</span><span class='line'><span class="go">db_1        | Version: &#39;5.6.27&#39;  socket: &#39;/var/run/mysqld/mysqld.sock&#39;  port: 3306  MySQL Community Server (GPL)</span>
</span><span class='line'><span class="go">wordpress_1 | WordPress not found in /var/www/html - copying now</span>
</span><span class='line'><span class="go">wordpress_1 | Complete! WordPress has been successfully copied to /var/www/html</span>
</span><span class='line'><span class="go">wordpress_1 | AH00558: apache2: Could not reliably determine the server&#39;s fully</span>
</span><span class='line'><span class="go">wordpress_1 | [Tue Oct 06 05:15:13.163996 2015] [mpm_prefork:notice] [pid 1] AH00163: Apache/2.4.10 (Debian) PHP/5.6.14 configured -- resuming normal operations</span>
</span><span class='line'><span class="go">wordpress_1 | [Tue Oct 06 05:15:13.164050 2015] [core:notice] [pid 1] AH00094: Command line: &#39;apache2 -D FOREGROUND&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Or run as background processes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">$</span> docker-compose up -d
</span></code></pre></td></tr></table></div></figure>


<p>The output console should like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">Starting wordpress_db_1...</span>
</span><span class='line'><span class="go">Starting wordpress_wordpress_1...</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can take a look the background containers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">$</span> docker-compose ps
</span><span class='line'><span class="go">        Name                       Command               State          Ports         </span>
</span><span class='line'><span class="go">-------------------------------------------------------------------------------------</span>
</span><span class='line'><span class="go">wordpress_db_1          /entrypoint.sh mysqld            Up      3306/tcp             </span>
</span><span class='line'><span class="go">wordpress_wordpress_1   /entrypoint.sh apache2-for ...   Up      0.0.0.0:8888-&gt;80/tcp </span>
</span></code></pre></td></tr></table></div></figure>


<p>Or stop the composed containers:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">$</span> docker-compose stop
</span><span class='line'><span class="go">Stopping wordpress_wordpress_1... done</span>
</span><span class='line'><span class="go">Stopping wordpress_db_1... done</span>
</span></code></pre></td></tr></table></div></figure>


<h3>Access the service with 2 steps:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="gp">#</span> Get your container IP address <span class="o">(</span>from another console<span class="o">)</span>:
</span><span class='line'><span class="gp">$</span> docker-machine ls <span class="c"># to get the launched container</span>
</span><span class='line'><span class="go">NAME      ACTIVE   DRIVER       STATE     URL                         SWARM</span>
</span><span class='line'><span class="go">default            virtualbox   Running   tcp://192.168.99.100:2376</span>
</span><span class='line'>
</span><span class='line'><span class="gp">$</span> docker-machine ip default
</span><span class='line'><span class="go">192.168.99.100</span>
</span></code></pre></td></tr></table></div></figure>


<p>Now you can open a browser then try to access:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='console'><span class='line'><span class="go">http://192.168.99.100:8080</span>
</span></code></pre></td></tr></table></div></figure>


<p>Done!</p>

<h2>References:</h2>

<ol>
<li><a href="https://docs.docker.com/compose/">https://docs.docker.com/compose/</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing With iOS Background Multitasking]]></title>
    <link href="http://lifuzu.com/blog/2015/08/05/playing-with-ios-background-multitasking/"/>
    <updated>2015-08-05T22:45:30-07:00</updated>
    <id>http://lifuzu.com/blog/2015/08/05/playing-with-ios-background-multitasking</id>
    <content type="html"><![CDATA[<p><img src="https://possiblemobile.com/wp-content/uploads/2013/09/ios7_dev.png" alt="enter image description here" /></p>

<p>In the realm of the background multitasking, Apple has made some significant changes by exposing additional APIs since iOS7.​ iOS7 introduced some new background task handlings that help developers achieve some great user experiences, just like schedule the content update some spefice times, or allow the app to launch immediately whenever you send it a special push notification. They are called &lsquo;background app fetch&rsquo; and &lsquo;remote notifications&rsquo; correspondingly.</p>

<!--more-->


<p>Let&rsquo;s see how to configure the features:</p>

<p><img src="https://lh3.googleusercontent.com/-DbJXdNazt6U/VcGhOILO4SI/AAAAAAAADeM/hAZE32GW29o/s600/Screen+Shot+2015-08-04+at+10.00.28+PM.png" title="Screen Shot 2015-08-04 at 10.00.28 PM.png" alt="iOS_Background_Configuration" /></p>

<p>To implement &lsquo;background app fetch&rsquo;, only two steps needed:</p>

<p><em>1</em>. Set the minimum background fetch interval in the application:didFinishLaunchingWithOptions: method of the AppDelegate:</p>

<pre><code>- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions {
    // Override point for customization after application launch.
    [application setMinimumBackgroundFetchInterval:UIApplicationBackgroundFetchIntervalMinimum];
    return YES;
}
</code></pre>

<p><em>2</em>. Implement a new AppDelegate method when the App is background launched called application:performFetchWithCompletionHandler:</p>

<pre><code>- (void)application:(UIApplication *)application performFetchWithCompletionHandler:(void (^)(UIBackgroundFetchResult))completionHandler {
    NSLog(@"Background Fetch: Called in the background!");
    completionHandler(UIBackgroundFetchResultNewData);
}
</code></pre>

<p> To test the functionality, Xcode provide a very nice method under the menu &lsquo;Debug&rsquo;, called &ldquo;Simulate Background Fetch&rdquo;:</p>

<p><img src="https://lh3.googleusercontent.com/-C0iXBlzT4Fo/VcGhuXcIqCI/AAAAAAAADeY/NOXFTfPl1Bo/s600/Debug_Background_Fetch.png" title="Debug_Background_Fetch.png" alt="enter image description here" /></p>

<p>After selecting the submenu, Xcode will close your application in the simulator, sending it to the background, and call the application:performFetchWithCompletionHandler: that we added. You should have something printed in the console window now, like this (in the red rectangle):</p>

<p><img src="https://lh3.googleusercontent.com/-SAUI2F65duk/VcGh1YdIBII/AAAAAAAADek/KXGv1upNkLc/s600/Screen+Shot+2015-08-04+at+10.07.15+PM.png" title="Screen Shot 2015-08-04 at 10.07.15 PM.png" alt="enter image description here" /></p>

<p>There are more steps to implment &ldquo;remote notification&rdquo;, please refer to the following links:
<a href="http://www.huffingtonpost.com/dulio-denis/ios-quick-read-implementi_2_b_5351099.html">http://www.huffingtonpost.com/dulio-denis/ios-quick-read-implementi_2_b_5351099.html</a>
<a href="https://parse.com/tutorials/ios-push-notifications">https://parse.com/tutorials/ios-push-notifications</a>  <br/>
<a href="https://developer.apple.com/notifications/">https://developer.apple.com/notifications/</a></p>

<p>Here is the github repository for your reference as well:
<a href="https://github.com/lifuzu/iOSBackground.git">https://github.com/lifuzu/iOSBackground.git</a></p>

<p>Hope this can help you.</p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Using Git Command to Find Build Failure Very Quickly]]></title>
    <link href="http://lifuzu.com/blog/2015/06/02/using-git-command-to-find-build-failure-very-quickly/"/>
    <updated>2015-06-02T10:32:09-07:00</updated>
    <id>http://lifuzu.com/blog/2015/06/02/using-git-command-to-find-build-failure-very-quickly</id>
    <content type="html"><![CDATA[<p>When some changes broke your build during the mid night, how to find the culprit of the failure very quickly? Like this:
<img src="https://lh3.googleusercontent.com/-20gdQ7Sswwk/VW3cw-UhgWI/AAAAAAAAC04/b3cysga0Cr8/s0/Screen+Shot+2015-06-02+at+9.39.06+AM.png" title="Screen Shot 2015-06-02 at 9.39.06 AM.png" alt="build failure history" /></p>

<p>If you are using git as your version control system, then the short answer is &lsquo;<strong>git bisect</strong>&rsquo;.</p>

<p>As the above screenshot, you know the latest good version is 4.7.0.310, and the earliest bad version is 4.7.0.311, so some changes between the two version failed the build. Then how to use &lsquo;git bisect&rsquo; to help us debug the issue very quickly?</p>

<!--more-->


<p>Firstly, checking out the source tree to an environment:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git clone ...</span></code></pre></td></tr></table></div></figure>


<p>Starting the git bisect command:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git bisect start</span></code></pre></td></tr></table></div></figure>


<p>Marking the good version and the bad one with the tag name (or commit id):</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git bisect good 4.7.0.310
</span><span class='line'>$ git bisect bad 4.7.0.311</span></code></pre></td></tr></table></div></figure>


<p>Then git bisect analyzes the changes between, checkout the middle one (bisected) to the current environment and wait for verification. What we need to do now is just to run the build command to get the build result for the snapshot:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./gradlew clean build</span></code></pre></td></tr></table></div></figure>


<p>If the build failed, then mark it bad:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git bisect bad</span></code></pre></td></tr></table></div></figure>


<p>Git should checkout another version between this one and the good one, bisectedly. Then what we need to do is to run the build command again to get the build result:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ ./gradlew clean build</span></code></pre></td></tr></table></div></figure>


<p>If the build is successful, then git should bisect to another version between this one and the latest verified bad one. Until git find which commit failed the build.</p>

<p>Assuming you mark the build is successful, and git find out which commit is the root cause, it should display the commit after the mark command immediately:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ git bisect good
</span><span class='line'>f0810993941d6bc2f4985c9830780f5bc86e0f35 is the first bad commit
</span><span class='line'>commit f0810993941d6bc2f4985c9830780f5bc86e0f35
</span><span class='line'>Author: ABC &lt;abc@abc.com&gt;
</span><span class='line'>Date:   Tue Jun 2 15:14:09 2015 +0800
</span><span class='line'>
</span><span class='line'>    ABC-1234: move a function to another class to avoid ClassNotFound if API level &lt; 18
</span><span class='line'>
</span><span class='line'>:040000 040000 56a19c7814dea9aee78bf3453c223e428a31e451 29a6fbc67b3d1e521683739270b186a86f6f9240 M    abcmoduleA
</span><span class='line'>:040000 040000 f9045aaf28eef5c250d110c4580c76ed90a642eb 8ddeced2ceaa41a0d93ba8b1f6333976f6104342 M    abcmoduleB</span></code></pre></td></tr></table></div></figure>


<p>Done!</p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing With Hadoop on Dockerbase]]></title>
    <link href="http://lifuzu.com/blog/2015/02/03/playing-with-hadoop-on-dockerbase/"/>
    <updated>2015-02-03T21:52:03-08:00</updated>
    <id>http://lifuzu.com/blog/2015/02/03/playing-with-hadoop-on-dockerbase</id>
    <content type="html"><![CDATA[<p><img src="https://www.ombud.com/asset/3607" alt="Apache Hadoop Logo" />
Apache Hadoop is a map reduce computing environment, which provide a reliable, scalable and distributed computing environment to handle big data. This article introduce how to setup a Apache Hadoop Dockerbase image to play with the standalone operation of Hadoop on Docker.</p>

<!--more-->


<p><strong>Steps</strong>:</p>

<p><em>1</em>. Install Docker:
Install the latest version of Docker on Ubuntu:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -sSL https://get.docker.com/ubuntu/ | sudo sh
</span><span class='line'><span class="nv">$ </span>docker --version
</span></code></pre></td></tr></table></div></figure>


<p>For Microsoft Windows or Mac OS, there is a tool named <code>boot2docker</code> [1] need to be installed to provide a terminal to run the following commands. You can also get more information about other platform you are on from reference [2].</p>

<p><em>2</em>. Download Dockerbase image for Hadoop:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo docker run -it --rm --name dockerbase-devbase-hadoop dockerbase/devbase-hadoop
</span></code></pre></td></tr></table></div></figure>


<p>It takes a little bit time (depends on network speed) to download docker image from public Docker hub registry [3].</p>

<p><em>3</em>. Enter Docker image automatically after the above step, try the command <code>hadoop</code> to display usage documentation for the hadoop script:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>devbase@145878b9c8c7:~<span class="nv">$ </span>hadoop
</span><span class='line'>Usage: hadoop <span class="o">[</span>--config confdir<span class="o">]</span> COMMAND
</span><span class='line'>       where COMMAND is one of:
</span><span class='line'>  fs                   run a generic filesystem user client
</span><span class='line'>  version              print the version
</span><span class='line'>  jar &lt;jar&gt;            run a jar file
</span><span class='line'>  checknative <span class="o">[</span>-a|-h<span class="o">]</span>  check native hadoop and compression libraries availability
</span><span class='line'>  distcp &lt;srcurl&gt; &lt;desturl&gt; copy file or directories recursively
</span><span class='line'>  archive -archiveName NAME -p &lt;parent path&gt; &lt;src&gt;* &lt;dest&gt; create a hadoop archive
</span><span class='line'>  classpath            prints the class path needed to get the
</span><span class='line'>                       Hadoop jar and the required libraries
</span><span class='line'>  daemonlog            get/set the log level <span class="k">for </span>each daemon
</span><span class='line'> or
</span><span class='line'>  CLASSNAME            run the class named CLASSNAME
</span></code></pre></td></tr></table></div></figure>


<p><em>4</em>. The following example copies configuration files under the <code>hadoop</code> folder which we installed in <code>/usr/local</code>, then run the <code>hadoop</code> command to find every match of the given regular expression.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>devbase@145878b9c8c7:~<span class="nv">$ </span>mkdir input
</span><span class='line'>devbase@145878b9c8c7:~<span class="nv">$ </span>cp /usr/local/hadoop/etc/hadoop/*.xml input/
</span><span class='line'>devbase@145878b9c8c7:~<span class="nv">$ </span>hadoop jar /usr/local/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.6.0.jar grep input output <span class="s1">&#39;dfs[a-z.]+&#39;</span>
</span><span class='line'>15/02/03 17:49:21 INFO Configuration.deprecation: session.id is deprecated. Instead, use dfs.metrics.session-id
</span><span class='line'>15/02/03 17:49:21 INFO jvm.JvmMetrics: Initializing JVM Metrics with <span class="nv">processName</span><span class="o">=</span>JobTracker, <span class="nv">sessionId</span><span class="o">=</span>
</span><span class='line'>15/02/03 17:49:22 WARN mapreduce.JobSubmitter: No job jar file set.  User classes may not be found. See Job or Job#setJar<span class="o">(</span>String<span class="o">)</span>.
</span><span class='line'>...
</span></code></pre></td></tr></table></div></figure>


<p><em>5</em>. Display the matchs from the output folder:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>devbase@145878b9c8c7:~<span class="nv">$ </span>cat output/*
</span><span class='line'>1 dfsadmin
</span></code></pre></td></tr></table></div></figure>


<p><strong>References</strong>:</p>

<ol>
<li><a href="http://boot2docker.io/">http://boot2docker.io/</a></li>
<li><a href="https://docs.docker.com/installation/">https://docs.docker.com/installation/</a></li>
<li><a href="https://registry.hub.docker.com/u/dockerbase/devbase-hadoop/">https://registry.hub.docker.com/u/dockerbase/devbase-hadoop/</a></li>
<li><a href="http://hadoop.apache.org/">http://hadoop.apache.org/</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Familiar With HBase on Dockerbase]]></title>
    <link href="http://lifuzu.com/blog/2015/02/03/getting-familiar-with-hbase-on-dockerbase/"/>
    <updated>2015-02-03T21:34:36-08:00</updated>
    <id>http://lifuzu.com/blog/2015/02/03/getting-familiar-with-hbase-on-dockerbase</id>
    <content type="html"><![CDATA[<p><img src="http://doc.mapr.com/download/attachments/26982553/hbase_logo.png" alt="Apache HBase Logo" />
Apache HBase is a distributed, scalable, big data store. With Apache HBase, you can randomly access your big data, which support realtime read/write. You can get more information about Apache HBase from the reference list [3]. This article introduces how to setup a standalone HBase database with Dockerbase supported.</p>

<!--more-->


<p><strong>Steps</strong>:</p>

<p><em>1</em>. Install Docker:
Install the latest version of Docker on Ubuntu:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>curl -sSL https://get.docker.com/ubuntu/ | sudo sh
</span><span class='line'><span class="nv">$ </span>docker --version
</span></code></pre></td></tr></table></div></figure>


<p>For Microsoft Windows or Mac OS, there is a tool named <code>boot2docker</code> [1] need to be installed to provide a terminal to run the following commands. You can also get more information about other platform you are on from reference [2].</p>

<p><em>2</em>. Clone the Dockerbase HBase image from the public Docker hub registry [4]:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo docker run -it --rm --name dockerbase-devbase-hbase dockerbase/devbase-hbase
</span></code></pre></td></tr></table></div></figure>


<p><em>3</em>. After pulling the image, the Dockerbase image will run automatically into the docker container (docker container just like a lightweight virtual machine), then you can run the following commands to start Apache HBase, and then launch the shell to run the HBase commands:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>devbase@0be9d4455f59:~<span class="nv">$ </span>sudo -E bash -c <span class="s1">&#39;/usr/local/hbase/bin/start-hbase.sh&#39;</span>
</span><span class='line'>devbase@0be9d4455f59:~<span class="nv">$ </span>hbase shell
</span><span class='line'>hbase<span class="o">(</span>main<span class="o">)</span>:001:0&gt; list
</span><span class='line'>TABLE
</span><span class='line'>
</span><span class='line'>2015-02-02 20:03:28,604 WARN  <span class="o">[</span>main<span class="o">]</span> util.NativeCodeLoader: Unable to load native-hadoop library <span class="k">for </span>your platform... using <span class="nb">builtin</span>-java classes where applicable
</span><span class='line'>0 row<span class="o">(</span>s<span class="o">)</span> in 1.1440 <span class="nv">seconds</span>
</span><span class='line'>
</span><span class='line'><span class="o">=</span>&gt; <span class="o">[]</span>
</span><span class='line'>hbase<span class="o">(</span>main<span class="o">)</span>:002:0&gt; create <span class="s1">&#39;test&#39;</span>, <span class="s1">&#39;cf&#39;</span>
</span><span class='line'>0 row<span class="o">(</span>s<span class="o">)</span> in 0.2630 <span class="nv">seconds</span>
</span><span class='line'>
</span><span class='line'><span class="o">=</span>&gt; Hbase::Table - <span class="nb">test</span>
</span><span class='line'>hbase<span class="o">(</span>main<span class="o">)</span>:003:0&gt; list <span class="s1">&#39;test&#39;</span>
</span><span class='line'>TABLE
</span><span class='line'><span class="nb">test</span>
</span><span class='line'>1 row<span class="o">(</span>s<span class="o">)</span> in 0.0030 <span class="nv">seconds</span>
</span><span class='line'>
</span><span class='line'><span class="o">=</span>&gt; <span class="o">[</span><span class="s2">&quot;test&quot;</span><span class="o">]</span>
</span><span class='line'>hbase<span class="o">(</span>main<span class="o">)</span>:004:0&gt; put <span class="s1">&#39;test&#39;</span>, <span class="s1">&#39;row1&#39;</span>, <span class="s1">&#39;cf:a&#39;</span>, <span class="s1">&#39;value1&#39;</span>
</span><span class='line'>0 row<span class="o">(</span>s<span class="o">)</span> in 0.0900 seconds
</span><span class='line'>
</span><span class='line'>hbase<span class="o">(</span>main<span class="o">)</span>:005:0&gt; get <span class="s1">&#39;test&#39;</span>, <span class="s1">&#39;row1&#39;</span>
</span><span class='line'>COLUMN                                               CELL
</span><span class='line'> cf:a                                                <span class="nv">timestamp</span><span class="o">=</span>1422907465167, <span class="nv">value</span><span class="o">=</span>value1
</span><span class='line'>1 row<span class="o">(</span>s<span class="o">)</span> in 0.0110 seconds
</span><span class='line'>
</span><span class='line'>hbase<span class="o">(</span>main<span class="o">)</span>:006:0&gt; disable <span class="s1">&#39;test&#39;</span>
</span><span class='line'>0 row<span class="o">(</span>s<span class="o">)</span> in 1.2890 seconds
</span><span class='line'>
</span><span class='line'>hbase<span class="o">(</span>main<span class="o">)</span>:007:0&gt; drop <span class="s1">&#39;test&#39;</span>
</span><span class='line'>0 row<span class="o">(</span>s<span class="o">)</span> in 0.2010 seconds
</span><span class='line'>hbase<span class="o">(</span>main<span class="o">)</span>:008:0&gt; quit
</span><span class='line'>devbase@0be9d4455f59:~<span class="nv">$ </span>sudo -E bash -c <span class="s1">&#39;/usr/local/hbase/bin/stop-hbase.sh&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>From the above commands, we list the tables in database, then <code>create</code> a table named &lsquo;test&rsquo;. We <code>put</code> some data into the table, then <code>get</code> it out with the <code>get</code> command. Before we <code>drop</code> the table, we have to <code>disable</code> it. The last step is to quit the Apache HBase shell.</p>

<p>You can find more Apache HBase shell commands from reference list [4] to practice in this Dockerbase image. Enjoy!</p>

<p><strong>References</strong>:</p>

<ol>
<li><a href="http://boot2docker.io/">http://boot2docker.io/</a></li>
<li><a href="https://docs.docker.com/installation/">https://docs.docker.com/installation/</a></li>
<li><a href="http://hbase.apache.org/">http://hbase.apache.org/</a></li>
<li><a href="https://registry.hub.docker.com/u/dockerbase/devbase-hbase/">https://registry.hub.docker.com/u/dockerbase/devbase-hbase/</a></li>
<li><a href="http://wiki.apache.org/hadoop/Hbase/Shell">http://wiki.apache.org/hadoop/Hbase/Shell</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Getting Started With Scala]]></title>
    <link href="http://lifuzu.com/blog/2015/01/31/getting-started-with-scala/"/>
    <updated>2015-01-31T21:58:42-08:00</updated>
    <id>http://lifuzu.com/blog/2015/01/31/getting-started-with-scala</id>
    <content type="html"><![CDATA[<p><img src="http://grab.by/grabs/d3bb7c13cd4b40142fab4a7eb0ef7155.png" alt="enter image description here" />
Have no any idea what to do today after dinner, although I have some homeworks need to submit soon, I still decided to try something new in a short time. I recalled I read an article yesterday on stackshare.io, it seems there is a company named instacarts tried Scala programming language to setup their development stack. I am very curious on the programming language, it seems someone said: &ldquo;Speaking More Than One Language Could Sharpen Your Brain.&rdquo;, how about Scala?</p>

<!-- more -->


<p><strong>Steps</strong>:</p>

<p><em>1</em>. Download the recent Scala SDK here:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>wget http://downloads.typesafe.com/scala/2.11.5/scala-2.11.5.tgz
</span></code></pre></td></tr></table></div></figure>


<p><em>2</em>. Uncompress the package, put the folder into <code>/usr/local</code>, add the path into system environment variable <code>PATH</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd</span> /usr/local
</span><span class='line'><span class="nv">$ </span>sudo tar -zxf ~/Downloads/scala-2.11.5.tgz
</span><span class='line'><span class="nv">$ </span>sudo ln -s scala-2.11.5 scala
</span><span class='line'><span class="nv">$ </span>vi ~/.bashrc
</span><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">SCALA_HOME</span><span class="o">=</span>/usr/local/scala
</span><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span><span class="nv">$PATH</span>:<span class="nv">$SCALA_HOME</span>/bin
</span></code></pre></td></tr></table></div></figure>


<p><em>NOTE</em>: You can skip the above two steps with a full-fledged docker image, which even do not affect your local system, but allow you to try the following steps. Please see the instruction on how to download the docker image on Scala at the bottom.</p>

<p><em>3</em>. Open your perfered Editor, for me, it is sublime text and/or vi, type the followind code in:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">object</span> <span class="nc">HelloScala</span> <span class="o">{</span>
</span><span class='line'>  <span class="k">def</span> <span class="n">main</span><span class="o">(</span><span class="n">args</span><span class="k">:</span> <span class="kt">Array</span><span class="o">[</span><span class="kt">String</span><span class="o">])</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">println</span><span class="o">(</span><span class="s">&quot;Hello Scala!&quot;</span><span class="o">)</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>then save the file as <code>helloscala.scala</code></p>

<p><em>NOTE</em>: If you do not want to type them in, please git clone the repository in my github here:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git clone https://github.com/lifuzu/HelloScala
</span></code></pre></td></tr></table></div></figure>


<p><em>4</em>. Compile and execute it:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scalac HelloScala.scala
</span><span class='line'><span class="nv">$ </span>scala HelloScala
</span><span class='line'>Hello Scala!
</span></code></pre></td></tr></table></div></figure>


<p><em>5</em>. We can even ignore to add a method <code>main</code> to be act as the entry point of the program by extending object from <code>App</code>, like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="k">object</span> <span class="nc">HelloScala</span> <span class="k">extends</span> <span class="nc">App</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">println</span><span class="o">(</span><span class="s">&quot;Hello, Scala!&quot;</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Cool! You are almost done. Scala has two surprises here for you!</p>

<p><em>6</em>. The first surprise with Scala is we can easily to script it with bash shell script, like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='scala'><span class='line'><span class="o">#!/</span><span class="n">bin</span><span class="o">/</span><span class="n">bash</span>
</span><span class='line'><span class="n">exec</span> <span class="n">scala</span> <span class="s">&quot;$0&quot;</span> <span class="s">&quot;$@&quot;</span>
</span><span class='line'><span class="o">!</span><span class="k">#</span>
</span><span class='line'><span class="k">object</span> <span class="nc">HelloScala</span> <span class="k">extends</span> <span class="nc">App</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">println</span><span class="o">(</span><span class="s">&quot;Hello, Scala!&quot;</span><span class="o">)</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="nc">HelloScala</span><span class="o">.</span><span class="n">main</span><span class="o">(</span><span class="n">args</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>Save it as <code>helloscala.sh</code>, then run it as:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>chmod +x helloscala.sh
</span><span class='line'><span class="nv">$ </span>./helloscala.sh
</span></code></pre></td></tr></table></div></figure>


<p>OR</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>bash helloscala.sh
</span></code></pre></td></tr></table></div></figure>


<p><em>7</em>. Scala provide a REPL interactive shell to allow developers to try some short experiments:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scala
</span><span class='line'>...
</span><span class='line'>scala&gt; object HelloScala extends App <span class="o">{</span>
</span><span class='line'>    |    println<span class="o">(</span><span class="s2">&quot;Hello, Scala!&quot;</span><span class="o">)</span>
</span><span class='line'>    |  <span class="o">}</span>
</span><span class='line'>defined object HelloScala
</span><span class='line'>
</span><span class='line'>scala&gt; HelloScala.main<span class="o">(</span>null<span class="o">)</span>
</span><span class='line'>Hello, Scala!
</span><span class='line'>
</span><span class='line'>scala&gt; :q
</span><span class='line'><span class="err">$</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>Dockerbase information</strong>:
If you are on Ubuntu, or other linux, please make sure your have <code>docker</code> command on your terminal, please try the command here:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker --version
</span><span class='line'>Docker version 1.4.1, build 5bc2ff8
</span></code></pre></td></tr></table></div></figure>


<p>You should get a version of docker above <code>1.2.0</code>, then run the command ( it will take a little bit time to download docker image at first time ):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>docker run -it --rm --name dockerbase-devbase-scala dockerbase/devbase-scala
</span></code></pre></td></tr></table></div></figure>


<p><em>NOTE</em>: With the option <code>--rm</code>, docker will remove the container when it exits automatically. Please make sure you save your documents before type <code>exit</code> from docker container.</p>

<p>On Mac, please refer to the ref[2] for Boot2Docker.</p>

<p><strong>References</strong>:</p>

<ol>
<li><a href="https://registry.hub.docker.com/u/dockerbase/devbase-scala/">https://registry.hub.docker.com/u/dockerbase/devbase-scala/</a></li>
<li><a href="https://docs.docker.com/installation/mac/">https://docs.docker.com/installation/mac/</a></li>
<li><a href="http://www.scala-lang.org/documentation/getting-started.html">http://www.scala-lang.org/documentation/getting-started.html</a></li>
<li><a href="https://github.com/lifuzu/HelloScala">https://github.com/lifuzu/HelloScala</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Programming for Andorid: Synchronize Actions With Handler]]></title>
    <link href="http://lifuzu.com/blog/2015/01/19/programming-for-andorid-synchronize-actions-with-handler/"/>
    <updated>2015-01-19T20:32:10-08:00</updated>
    <id>http://lifuzu.com/blog/2015/01/19/programming-for-andorid-synchronize-actions-with-handler</id>
    <content type="html"><![CDATA[<p><img src="http://rxtracepz.dirkrodgersconsu.netdna-cdn.com/wp-content/uploads/2010/02/synchronized-swimmers.jpg" alt="enter image description here" /></p>

<p>Sometimes, we need to synchronize the actions in a series but not in parallel. For example, we need to download an image then display it on Google Gallery. It seems we cannot display a partial image during downloading. OK, there is another story, probably, we will mention later, for displaying image with a coarse one then detailed the clear picture. Now let&rsquo;s fix how to download an image then display it, without manual interference.</p>

<p>This program bases on the last one: <a href="http://lifuzu.com/blog/2015/01/16/programming-for-android-download/">Programming for Android: Download, Progressbar and FileProvider</a></p>

<!--more-->


<p><strong>Steps</strong>:</p>

<p><em>1</em>. Declare a handler and a message ID, which we need to indicate what action is completed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Handler</span> <span class="n">handler</span><span class="o">;</span>
</span><span class='line'><span class="kd">private</span> <span class="kd">static</span> <span class="kd">final</span> <span class="kt">int</span> <span class="n">DOWNLOAD_COMPLETED</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>2</em>. Send out the message, when the first action is completed:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>                <span class="c1">// send message to trigger the following event</span>
</span><span class='line'>                <span class="n">Message</span> <span class="n">msg</span> <span class="o">=</span> <span class="n">Message</span><span class="o">.</span><span class="na">obtain</span><span class="o">();</span>
</span><span class='line'>                <span class="n">msg</span><span class="o">.</span><span class="na">what</span> <span class="o">=</span> <span class="n">DOWNLOAD_COMPLETED</span><span class="o">;</span>
</span><span class='line'>                <span class="n">handler</span><span class="o">.</span><span class="na">sendMessage</span><span class="o">(</span><span class="n">msg</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>3</em>. Handle the message, then trigger the following action(s):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="n">handler</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Handler</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">handleMessage</span><span class="o">(</span><span class="n">Message</span> <span class="n">msg</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>            <span class="k">switch</span> <span class="o">(</span><span class="n">msg</span><span class="o">.</span><span class="na">what</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="k">case</span> <span class="nl">DOWNLOAD_COMPLETED:</span>
</span><span class='line'>                    <span class="n">startDisplay</span><span class="o">();</span>
</span><span class='line'>                    <span class="k">break</span><span class="o">;</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">};</span>
</span></code></pre></td></tr></table></div></figure>


<p>You can clone the entire source code <a href="https://github.com/lifuzu/FileProviderExample">here</a> [2].</p>

<p><strong>References</strong>:</p>

<ol>
<li><a href="http://stackoverflow.com/questions/4592716/multithreading-question">http://stackoverflow.com/questions/4592716/multithreading-question</a></li>
<li><a href="https://github.com/lifuzu/FileProviderExample">https://github.com/lifuzu/FileProviderExample</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Programming for Android: Download, Progressbar and FileProvider]]></title>
    <link href="http://lifuzu.com/blog/2015/01/16/programming-for-android-download/"/>
    <updated>2015-01-16T17:50:20-08:00</updated>
    <id>http://lifuzu.com/blog/2015/01/16/programming-for-android-download</id>
    <content type="html"><![CDATA[<p><img src="https://turbotax.intuit.com/handlebars/noncampaign/hp/images/melissa-tablet.jpg" alt="enter image description here" />
In this article, we try to download a file from Internet, show the progress of downloading, then share the file to gallery for displaying with FileProvider.</p>

<p><strong>Keywords</strong>: Android, Programming, Download, Image, Progressbar, FileProvider</p>

<p><strong>Prerequisites</strong>:</p>

<p><em>0</em>. Create an Android project with name: FileProviderExample, you can also clone this project directly from github here: [<a href="https://github.com/lifuzu/FileProviderExample">3</a>]</p>

<p><strong>Steps</strong>:</p>

<p><em>1</em>. Download</p>

<p>We intend to download an image file with foreground mode since we want to block the consequent actions until the download process is complete. If you try to download file(s) with background mode, please reference some other articles <a href="http://stackoverflow.com/questions/3028306/download-a-file-with-android-and-showing-the-progress-in-a-progressdialog">here</a></p>

<!--more-->


<p>Update the activity layout file <code>res/layout/activity_main.xml</code> to add a button for downloading:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Button</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="na">android:id=</span><span class="s">&quot;@+id/btnDownload&quot;</span>
</span><span class='line'>    <span class="na">android:onClick=</span><span class="s">&quot;startDownload&quot;</span>
</span><span class='line'>    <span class="na">android:text=</span><span class="s">&quot;Download Image&quot;</span><span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>With the above update, we need to define a function named <code>startDownload</code> to trigger the download process:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">startDownload</span><span class="o">(</span><span class="n">View</span> <span class="n">view</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="n">download</span><span class="o">(</span><span class="s">&quot;http://farm1.static.flickr.com/114/298125983_0e4bf66782_b.jpg&quot;</span><span class="o">,</span> <span class="s">&quot;abc.jpg&quot;</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Here we download an image from the above URL, and save it to direct local path with the name <code>abc.jpg</code>.</p>

<p>We design the download interface with a simple way. For the download function, what we want is a URL then a local file path that we saved the URL:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">protected</span> <span class="kt">void</span> <span class="nf">download</span><span class="o">(</span><span class="kd">final</span> <span class="n">String</span> <span class="n">strUrl</span><span class="o">,</span> <span class="kd">final</span> <span class="n">String</span> <span class="n">fileName</span><span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p>With the <code>Thread</code> support, we create the download precedure:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">new</span> <span class="nf">Thread</span><span class="o">(</span><span class="k">new</span> <span class="n">Runnable</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>        <span class="nd">@Override</span>
</span><span class='line'>        <span class="kd">public</span> <span class="kt">void</span> <span class="nf">run</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>            <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">getFilesDir</span><span class="o">(),</span> <span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>            <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">strUrl</span><span class="o">);</span>
</span><span class='line'>                <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="s">&quot;FILE_NAME&quot;</span><span class="o">,</span> <span class="s">&quot;File name is &quot;</span> <span class="o">+</span> <span class="n">fileName</span><span class="o">);</span>
</span><span class='line'>                <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="s">&quot;FILE_URL&quot;</span><span class="o">,</span> <span class="s">&quot;File URL is &quot;</span> <span class="o">+</span> <span class="n">url</span><span class="o">);</span>
</span><span class='line'>                <span class="n">URLConnection</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">url</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
</span><span class='line'>                <span class="n">connection</span><span class="o">.</span><span class="na">connect</span><span class="o">();</span>
</span><span class='line'>                <span class="c1">// get the file length</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">fileLength</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">getContentLength</span><span class="o">();</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">// download the file</span>
</span><span class='line'>                <span class="n">InputStream</span> <span class="n">input</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedInputStream</span><span class="o">(</span><span class="n">url</span><span class="o">.</span><span class="na">openStream</span><span class="o">());</span>
</span><span class='line'>                <span class="n">OutputStream</span> <span class="n">output</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="kt">byte</span> <span class="n">data</span><span class="o">[]</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">1024</span><span class="o">];</span>
</span><span class='line'>                <span class="kt">long</span> <span class="n">total</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">count</span><span class="o">;</span>
</span><span class='line'>                <span class="k">while</span> <span class="o">((</span><span class="n">count</span> <span class="o">=</span> <span class="n">input</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">data</span><span class="o">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">total</span> <span class="o">+=</span> <span class="n">count</span><span class="o">;</span>
</span><span class='line'>                    <span class="c1">// increase progress bar here</span>
</span><span class='line'>                    <span class="c1">// write data into file</span>
</span><span class='line'>                    <span class="n">output</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">count</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span><span class='line'>
</span><span class='line'>                <span class="c1">// flush output and close streams</span>
</span><span class='line'>                <span class="n">output</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'>                <span class="n">output</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>                <span class="n">input</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>            <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">Exception</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                <span class="n">e</span><span class="o">.</span><span class="na">printStackTrace</span><span class="o">();</span>
</span><span class='line'>                <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="s">&quot;ERROR ON DOWNLOADING FILES&quot;</span><span class="o">,</span> <span class="s">&quot;ERROR IS&quot;</span> <span class="o">+</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>    <span class="o">}).</span><span class="na">start</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>From the above code, we save the file just direct local path, without any more directory:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>            <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">getFilesDir</span><span class="o">(),</span> <span class="n">fileName</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>And then we call <code>URLConnection</code> to connect the URL which we want to download:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>                <span class="n">URL</span> <span class="n">url</span> <span class="o">=</span> <span class="k">new</span> <span class="n">URL</span><span class="o">(</span><span class="n">strUrl</span><span class="o">);</span>
</span><span class='line'>                <span class="n">URLConnection</span> <span class="n">connection</span> <span class="o">=</span> <span class="n">url</span><span class="o">.</span><span class="na">openConnection</span><span class="o">();</span>
</span><span class='line'>                <span class="n">connection</span><span class="o">.</span><span class="na">connect</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>Read the input stream write to output stream recursively, until the input stream reach the end:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>                <span class="n">InputStream</span> <span class="n">input</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedInputStream</span><span class="o">(</span><span class="n">url</span><span class="o">.</span><span class="na">openStream</span><span class="o">());</span>
</span><span class='line'>                <span class="n">OutputStream</span> <span class="n">output</span> <span class="o">=</span> <span class="k">new</span> <span class="n">FileOutputStream</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
</span><span class='line'>
</span><span class='line'>                <span class="kt">byte</span> <span class="n">data</span><span class="o">[]</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">1024</span><span class="o">];</span>
</span><span class='line'>                <span class="kt">long</span> <span class="n">total</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">count</span><span class="o">;</span>
</span><span class='line'>                <span class="k">while</span> <span class="o">((</span><span class="n">count</span> <span class="o">=</span> <span class="n">input</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">data</span><span class="o">))</span> <span class="o">!=</span> <span class="o">-</span><span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>                    <span class="n">total</span> <span class="o">+=</span> <span class="n">count</span><span class="o">;</span>
</span><span class='line'>                    <span class="n">output</span><span class="o">.</span><span class="na">write</span><span class="o">(</span><span class="n">data</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="n">count</span><span class="o">);</span>
</span><span class='line'>                <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>Then flush the output incase some data left in memory, and close the streams:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>                <span class="n">output</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'>                <span class="n">output</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span><span class='line'>                <span class="n">input</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>One more thing before compiling a successful application is to check permission, we need an Internet permission to download the image. We need to add the permission into <code>manifests/AndroidManifest.xml</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;uses-permission</span> <span class="na">android:name=</span><span class="s">&quot;android.permission.INTERNET&quot;</span><span class="nt">&gt;&lt;/uses-permission&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>To verify the download function, run the application on Android device, click the button <code>DOWNLOAD IMAGE</code>
<img src="https://lh4.googleusercontent.com/ttxff19bogmzdV1aX7HC-JsiB4w0irGnqvj1Z3JPf-4=s600" title="Screen Shot 2015-01-16 at 10.08.35 AM.png" alt="enter image description here" />
Nothing seems happen, since we do not have any vision way to indicate the download progress is completed right now. For verification, we need adb to enter Android file system to have a file check.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>adb devices
</span><span class='line'><span class="nv">$ </span>adb shell
</span><span class='line'>root@vbox86tp:/ <span class="c">#  ls /data/data/com.example.rlee.fileproviderexample/files/</span>
</span><span class='line'>abc.jpg
</span></code></pre></td></tr></table></div></figure>


<p>Cool, the file <code>abc.jpg</code> is downloaded from the URL <code>http://farm1.static.flickr.com/114/298125983_0e4bf66782_b.jpg</code>. You even would like to pull the file into desktop then have an exact content check:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>adb pull /data/data/com.example.rlee.fileproviderexample/files/abc.jpg
</span></code></pre></td></tr></table></div></figure>


<p>Then open it in File Explorer (like Finder for Mac OS), and open the URL in brower (like Chrome) to have a comparison.</p>

<p><em>2</em>. Progressbar to show the status of download</p>

<p>To display the status of downloading, we need ProgressDialog component, which will show a progress indicator and an optional text message or view.</p>

<p>We need add a declaration for the ProgressDialog in the class <code>MainActivity</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">// Progress Bar</span>
</span><span class='line'><span class="n">ProgressDialog</span> <span class="n">progressDialog</span><span class="o">;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Initialize the variable with activity instance under the function <code>onCreate</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="n">progressDialog</span> <span class="o">=</span> <span class="k">new</span> <span class="n">ProgressDialog</span><span class="o">(</span><span class="n">MainActivity</span><span class="o">.</span><span class="na">this</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>When we start to download the image, we need to set the initial state for the progress bar:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>    <span class="n">progressDialog</span><span class="o">.</span><span class="na">setTitle</span><span class="o">(</span><span class="s">&quot;Downloading Image ...&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">progressDialog</span><span class="o">.</span><span class="na">setMessage</span><span class="o">(</span><span class="s">&quot;Download in progress ...&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">progressDialog</span><span class="o">.</span><span class="na">setProgressStyle</span><span class="o">(</span><span class="n">progressDialog</span><span class="o">.</span><span class="na">STYLE_HORIZONTAL</span><span class="o">);</span>
</span><span class='line'>    <span class="n">progressDialog</span><span class="o">.</span><span class="na">setProgress</span><span class="o">(</span><span class="mi">0</span><span class="o">);</span>
</span><span class='line'>    <span class="n">progressDialog</span><span class="o">.</span><span class="na">setMax</span><span class="o">(</span><span class="mi">100</span><span class="o">);</span>
</span><span class='line'>    <span class="n">progressDialog</span><span class="o">.</span><span class="na">show</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>And we have the image size which we will download:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>                <span class="c1">// get the file length</span>
</span><span class='line'>                <span class="kt">int</span> <span class="n">fileLength</span> <span class="o">=</span> <span class="n">connection</span><span class="o">.</span><span class="na">getContentLength</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>After we read and write some partial data, we update the state for progress bar:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>                    <span class="c1">// increase progress bar here</span>
</span><span class='line'>                    <span class="n">progressDialog</span><span class="o">.</span><span class="na">setProgress</span><span class="o">((</span><span class="kt">int</span><span class="o">)(</span><span class="n">total</span><span class="o">*</span><span class="mi">100</span><span class="o">)/</span><span class="n">fileLength</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>At last, when we complete the download, we dismiss the progress bar:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'>                <span class="c1">// dismiss the progress bar</span>
</span><span class='line'>                <span class="n">progressDialog</span><span class="o">.</span><span class="na">dismiss</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>To verify the progress bar, try to find a big jpg image file on Internet, then replace the URL in download function.
Run the application on Android device, click the button <code>DOWNLOAD IMAGE</code> again, you should see the progressbar like this:
<img src="https://lh4.googleusercontent.com/-dqDPYup6e6w/VLlh3vI0zlI/AAAAAAAACuE/kbQ1Gxy6Kv0/s600/Screen+Shot+2015-01-16+at+11.08.44+AM.png" title="Screen Shot 2015-01-16 at 11.08.44 AM.png" alt="enter image description here" /></p>

<p><em>3</em>. Show the file with FileProvider</p>

<p>Android do NOT allow apps to access the private folder of another application. To share our downloaded image, we have to offer the image to other applications from our side. With FileProvider, we can share the file in my own app domain to other apps.</p>

<p>For FileProvider, we need to add the provider element in android manifest file <code>manifests/AndroidManifest.xml</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'>    <span class="nt">&lt;provider</span>
</span><span class='line'>        <span class="na">android:authorities=</span><span class="s">&quot;com.example.rlee.fileproviderexample.fileprovider&quot;</span>
</span><span class='line'>        <span class="na">android:name=</span><span class="s">&quot;android.support.v4.content.FileProvider&quot;</span>
</span><span class='line'>        <span class="na">android:grantUriPermissions=</span><span class="s">&quot;true&quot;</span>
</span><span class='line'>        <span class="na">android:exported=</span><span class="s">&quot;false&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>        <span class="nt">&lt;meta-data</span>
</span><span class='line'>            <span class="na">android:name=</span><span class="s">&quot;android.support.FILE_PROVIDER_PATHS&quot;</span>
</span><span class='line'>            <span class="na">android:resource=</span><span class="s">&quot;@xml/filepaths&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>    <span class="nt">&lt;/provider&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>then add a new file under <code>res/xml</code> with the name <code>filepaths.xml</code> (create the xml folder if it does not exist), with the content:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="cp">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span>
</span><span class='line'><span class="nt">&lt;paths</span> <span class="na">xmlns:android=</span><span class="s">&quot;http://schemas.android.com/apk/res/android&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>    <span class="nt">&lt;files-path</span> <span class="na">path=</span><span class="s">&quot;.&quot;</span> <span class="na">name=</span><span class="s">&quot;image&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'><span class="nt">&lt;/paths&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Add another button to trigger an intent to display the image in <code>res/layout/activity_main.xml</code>:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='xml'><span class='line'><span class="nt">&lt;Button</span>
</span><span class='line'>    <span class="na">android:layout_width=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="na">android:layout_height=</span><span class="s">&quot;wrap_content&quot;</span>
</span><span class='line'>    <span class="na">android:id=</span><span class="s">&quot;@+id/btnDisplay&quot;</span>
</span><span class='line'>    <span class="na">android:onClick=</span><span class="s">&quot;startDisplay&quot;</span>
</span><span class='line'>    <span class="na">android:text=</span><span class="s">&quot;Display Image......&quot;</span><span class="nt">/&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create the function <code>startDisplay</code>, which defined in the above code:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">public</span> <span class="kt">void</span> <span class="nf">startDisplay</span><span class="o">(</span><span class="n">View</span> <span class="n">view</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// show jpg in gallery</span>
</span><span class='line'>    <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">getFilesDir</span><span class="o">(),</span> <span class="s">&quot;abc.jpg&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Uri</span> <span class="n">fileUri</span> <span class="o">=</span> <span class="n">FileProvider</span><span class="o">.</span><span class="na">getUriForFile</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="s">&quot;com.example.rlee.fileproviderexample.fileprovider&quot;</span><span class="o">,</span> <span class="n">file</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Intent</span><span class="o">(</span><span class="n">Intent</span><span class="o">.</span><span class="na">ACTION_VIEW</span><span class="o">);</span>
</span><span class='line'>    <span class="n">intent</span><span class="o">.</span><span class="na">setDataAndType</span><span class="o">(</span><span class="n">fileUri</span><span class="o">,</span> <span class="s">&quot;image/*&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="n">intent</span><span class="o">.</span><span class="na">addFlags</span><span class="o">(</span>
</span><span class='line'>            <span class="n">Intent</span><span class="o">.</span><span class="na">FLAG_GRANT_READ_URI_PERMISSION</span><span class="o">);</span>
</span><span class='line'>    <span class="n">Log</span><span class="o">.</span><span class="na">i</span><span class="o">(</span><span class="s">&quot;FILE_URI&quot;</span><span class="o">,</span> <span class="s">&quot;File Uri is &quot;</span> <span class="o">+</span> <span class="n">Uri</span><span class="o">.</span><span class="na">fromFile</span><span class="o">(</span><span class="n">file</span><span class="o">));</span>
</span><span class='line'>    <span class="n">startActivity</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>To verify the display function, run the application on Android device, click the button <code>DISPLAY IMAGE ......</code>
<img src="https://lh5.googleusercontent.com/-9CgNpo_-BFI/VLlT17IEKMI/AAAAAAAACtc/O2ec7Ia5Uj0/s600/Screen+Shot+2015-01-16+at+10.08.35+AM.png" title="Screen Shot 2015-01-16 at 10.08.35 AM.png" alt="enter image description here" />
Then the image will be displayed by the Android Gallery application:
<img src="https://lh6.googleusercontent.com/-X3R3BNX123M/VLlUKn-K1EI/AAAAAAAACto/IHuToVCF8wI/s600/Screen+Shot+2015-01-16+at+10.08.56+AM.png" title="Screen Shot 2015-01-16 at 10.08.56 AM.png" alt="enter image description here" /></p>

<p>If you have any question, please add comments below or submit issues <a href="https://github.com/lifuzu/FileProviderExample/issues">here</a>.</p>

<p>Have fun to try!</p>

<p><strong>Tips</strong>:
<a href="https://www.genymotion.com/?utm_source=dlvr.it&amp;utm_medium=twitter#!/product">Genymotion</a> might be your friend.</p>

<p><strong>References</strong>:</p>

<ol>
<li><a href="https://developer.android.com/training/secure-file-sharing/setup-sharing.html">https://developer.android.com/training/secure-file-sharing/setup-sharing.html</a></li>
<li><a href="https://developer.android.com/training/secure-file-sharing/share-file.html">https://developer.android.com/training/secure-file-sharing/share-file.html</a></li>
<li><a href="https://github.com/lifuzu/FileProviderExample">https://github.com/lifuzu/FileProviderExample</a></li>
<li><a href="http://stackoverflow.com/questions/3028306/download-a-file-with-android-and-showing-the-progress-in-a-progressdialog">http://stackoverflow.com/questions/3028306/download-a-file-with-android-and-showing-the-progress-in-a-progressdialog</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Design a Reuse and 'De-use' Modularized Software System]]></title>
    <link href="http://lifuzu.com/blog/2015/01/14/design-a-reuse-and-de-use-modularized-software-system/"/>
    <updated>2015-01-14T09:49:13-08:00</updated>
    <id>http://lifuzu.com/blog/2015/01/14/design-a-reuse-and-de-use-modularized-software-system</id>
    <content type="html"><![CDATA[<p><img src="http://www.edmentum.com/sites/edmentum.com/files/solutions/content/building_0.jpg" alt="enter image description here" /></p>

<h2>Design a reuse and &lsquo;de-use&rsquo; modularized software system</h2>

<p><strong>Keywords</strong>: reuse, &lsquo;de-use&rsquo;, minimum equipped interface (MEI), strong cohesion, loose coupling, software engineering</p>

<p>Most of the task on software design are to analyze requirements, decompose functionalities and connect the parts of artifacts to fulfill customer requirements.</p>

<p>This time we focus on decomposition of functionalities. Why we need to decompose the requirements to each small module or package, one of the reasons is to reuse them, another reason, I think, is to &lsquo;de-use&rsquo; them. When we do not need any of modules, we can separate them from system very easily, which also provide much convenience for testing. We can test each of the seperated modules, packages or interfaces isolated, without interference between each other.</p>

<p>The goal of the software design, include architectural design and detail design, is to decompose functionalities with the characteristics of strong cohesive, and loose coupled, which means we need a complete, but most minimal system function set. Interface is a very important element between two systems to access those functionalities, in addition to deployment environment. In fact, we can treat the environment as the interface between system and the system host. So we need a minimum equipped interface (MEI), which refers to Minimum Viable Product (MVP) definition.</p>

<p>To achieve the goal, besides an elegant design blueprint, functional prototyping, we also need supports from configuration management and testing. We should have many different configuration profiles to include or exclude the modules according to the reuse and &lsquo;de-use&rsquo; specifications, which we planned in design. Testing should have different test scenarios to verify and/or validate the interfaces, which are exported by modules or packages according the configuration profiles.</p>

<p>Succeed to DCOM and CORBA, the popular technology so far for designing a strong cohesive and loose coupled interface on cloud is REST, which based on the simple HTTP protocol verbs (GET, PUT, POST, DELETE). REST API is an analogous to SQL for interaction between systems on cloud, the latter provides several common verbs to query and manipulate data with relational database, such as SELECT, INSERT, UPDATE, DELETE, etc.</p>

<p>In a conclusion, as the main task for design, we need to decompose functionalities in order to reuse and &lsquo;de-use&rsquo; modules, which act as a container to host functions. The design goal is to make functionality as most as strong cohesive, and loose coupled. We can leverage configuration management and testing to achieve the design goal. REST interface provides a good practice for designing a strong cohesive, and loose coupled cloud system.</p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Setup Mongo Database Master Slave Replication]]></title>
    <link href="http://lifuzu.com/blog/2015/01/07/setup-mongo-database-master-slave-replication/"/>
    <updated>2015-01-07T13:58:40-08:00</updated>
    <id>http://lifuzu.com/blog/2015/01/07/setup-mongo-database-master-slave-replication</id>
    <content type="html"><![CDATA[<p><img src="http://tapainc.com/images/MongoDB.png" alt="enter image description here" /></p>

<p><strong>Prerequisites</strong>:</p>

<p>You need know the IP or hostname of the Mongo database which should be acted as a master, and you can ping the port 27017 from the mongo database which should be acted as a slave.</p>

<p>Here are some commands might be helpful:</p>

<ul>
<li>To know the external IP of the server:</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ curl http://checkip.dyndns.org/</span></code></pre></td></tr></table></div></figure>


<ul>
<li>To ping the server which you want to connect, on the specific port ( for example: 27017 ):</li>
</ul>


<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ telnet 1.2.3.4 27017</span></code></pre></td></tr></table></div></figure>


<p><strong>Practices</strong>:</p>

<p>Machine A (Master):
Run Mongo Daemon as master:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mongod --master
</span></code></pre></td></tr></table></div></figure>


<p>Machine B (Slave):
If mongod is running, which is the default behavior when installed, you should stop it before the following steps:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Stop the mongodb which installed by default</span>
</span><span class='line'><span class="nv">$ </span>sudo stop mongodb
</span></code></pre></td></tr></table></div></figure>


<p>Run Mongo Daemon as slave:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mongod --slave
</span></code></pre></td></tr></table></div></figure>


<p>Probably you need to specify the dbpath, in case you have any disk space limitation:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo mongod --slave --dbpath /data/mongodb/
</span></code></pre></td></tr></table></div></figure>


<p>Run <code>mongo</code> to open a mongo shell, then config for replication:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; use <span class="nb">local</span>
</span><span class='line'>&gt; db.sources.find<span class="o">()</span>
</span><span class='line'>&gt; db.sources.insert<span class="o">(</span> <span class="o">{</span> host: &lt;masterhostname&gt; &lt;,only: databasename&gt; <span class="o">}</span> <span class="o">)</span>;
</span></code></pre></td></tr></table></div></figure>


<p>Then you run <code>show dbs</code> in the mongo shell:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; show dbs
</span></code></pre></td></tr></table></div></figure>


<p>You will find the databasename which we typed behind the <code>only</code> key above displayed.</p>

<p>You may need to run the command multiple times to make sure the replication is going on. For example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; show dbs
</span><span class='line'>databasename    17.9453125GB
</span><span class='line'><span class="nb">local   </span>0.078125GB
</span><span class='line'>&gt; show dbs
</span><span class='line'>databasename    19.9443359375GB
</span></code></pre></td></tr></table></div></figure>


<p>You can also run the following commands to show the information of the replication on master and slave side:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Master side:</span>
</span><span class='line'>&gt; rs.printReplicationInfo<span class="o">()</span> <span class="c"># replace &#39;rs&#39; to &#39;db&#39; for the version prior to 2.6</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Slave side:</span>
</span><span class='line'>&gt; rs.printSlaveReplicationInfo<span class="o">()</span> <span class="c"># same thing as the above command, you need to replace &#39;rs&#39; to &#39;db&#39; if you run the mongodb which version prior to 2.6</span>
</span></code></pre></td></tr></table></div></figure>


<p>Besides, you can run the following command to get a defail status of the server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; db.serverStatus<span class="o">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>You might neet to run resync to recover replication:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>&gt; use admin
</span><span class='line'>&gt; db.runCommand<span class="o">(</span> <span class="o">{</span> resync: 1 <span class="o">}</span> <span class="o">)</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>References</strong>:</p>

<ol>
<li><a href="http://docs.mongodb.org/manual/core/master-slave/">http://docs.mongodb.org/manual/core/master-slave/</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Gollum]]></title>
    <link href="http://lifuzu.com/blog/2014/08/22/install-gollum/"/>
    <updated>2014-08-22T11:57:46-07:00</updated>
    <id>http://lifuzu.com/blog/2014/08/22/install-gollum</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-DUpioC7fb_I/U_eSdHggv1I/AAAAAAAACYU/4VJAsLqqCSE/s600/Screen+Shot+2014-08-22+at+11.56.27+AM.png" title="Screen Shot 2014-08-22 at 11.56.27 AM.png" alt="gollum snapshot" /></p>

<p>Gollum is a simple wiki system built on top of Git.</p>

<p>Gollum wikis are simply Git repositories that adhere to a specific format. Gollum pages may be written in a variety of formats and can be edited in a number of ways depending on your needs. You can edit your wiki locally:</p>

<ul>
<li>With your favorite text editor or IDE (changes will be visible after committing).</li>
<li>With the built-in web interface.</li>
<li>With the Gollum Ruby API.</li>
</ul>


<p>Here are steps to install gollum.</p>

<!-- more -->


<h3>Install some dependencies:</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get install libicu-dev</span></code></pre></td></tr></table></div></figure>


<h3>Install Gollum with RubyGems:</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install gollum</span></code></pre></td></tr></table></div></figure>


<h3>Install some text format</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gem install redcarpet
</span><span class='line'>gem install github-markdown</span></code></pre></td></tr></table></div></figure>


<h3>Create a local git repo on host</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>mkdir repos/gollum
</span><span class='line'>cd repos/gollum
</span><span class='line'>git init .</span></code></pre></td></tr></table></div></figure>


<h3>Run the gollum</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>gollum</span></code></pre></td></tr></table></div></figure>


<p>This will start up a web server running the Gollum frontend and you can view and edit your wiki at <a href="http://">http://</a><code>&lt;host&gt;</code>:4567.</p>

<h3>BUILDING THE GEM FROM MASTER</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ gem uninstall -aIx gollum
</span><span class='line'>$ git clone https://github.com/gollum/gollum.git
</span><span class='line'>$ cd gollum
</span><span class='line'>gollum$ rake build
</span><span class='line'>gollum$ gem install --no-ri --no-rdoc pkg/gollum*.gem</span></code></pre></td></tr></table></div></figure>


<h3>RUN THE TESTS</h3>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ bundle install
</span><span class='line'>$ bundle exec rake test</span></code></pre></td></tr></table></div></figure>


<h3>RUNNING WITH UPSTART</h3>

<p>Create a wrapper to include environment information:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ rvm alias create mygollum ruby-2.1.2@mygollum
</span><span class='line'>$ rvm alias list
</span><span class='line'># $HOME/.rvm/wrappers/mygollum/gollum</span></code></pre></td></tr></table></div></figure>


<p>Create a config file under /etc/init, name it <code>gollum.cong</code>, as:
<a href="https://gist.github.com/lifuzu/31af0dc859bf9bfb6da5">https://gist.github.com/lifuzu/31af0dc859bf9bfb6da5</a>
Start/Stop the service:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'># sudo start gollum
</span><span class='line'>$ sudo stop gollum</span></code></pre></td></tr></table></div></figure>


<p>You can get the log file at /var/log/upstart/gollum.log to analyze:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo vi /var/log/upstart/gollum.log </span></code></pre></td></tr></table></div></figure>


<h3>RUNNING WITH NGINX</h3>

<p>Create a subdomain like &lsquo;gollum.weimed.com&rsquo; point to your server IP;
Create a nginx configuration file, as /etc/nginx/sites-available/stackedit.weimed.com:
<a href="https://gist.github.com/lifuzu/2f2ce9095ba4a6969b2c">https://gist.github.com/lifuzu/2f2ce9095ba4a6969b2c</a>
Create a symbolic link to enable it</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo ln -s /etc/nginx/sites-available/gollum.weimed.com /etc/nginx/sites-enabled/gollum.weimed.com</span></code></pre></td></tr></table></div></figure>


<p>Check the configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo nginx -t
</span><span class='line'>nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
</span><span class='line'>nginx: configuration file /etc/nginx/nginx.conf test is successful</span></code></pre></td></tr></table></div></figure>


<p>Reload the configuration:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ sudo service nginx reload</span></code></pre></td></tr></table></div></figure>


<p>You should see: <a href="http://gollum.weimed.com/">http://gollum.weimed.com/</a></p>

<h3>AUTH</h3>

<p>TODO, please refer to [5], [6]</p>

<h3>References:</h3>

<ol>
<li><a href="https://github.com/gollum/gollum">https://github.com/gollum/gollum</a></li>
<li><a href="https://gist.github.com/leon/2643936">https://gist.github.com/leon/2643936</a></li>
<li><a href="http://rvm.io/integration/init-d">http://rvm.io/integration/init-d</a></li>
<li><a href="https://github.com/rvm/rvm-site-setup/blob/master/conf/smfbot.conf">https://github.com/rvm/rvm-site-setup/blob/master/conf/smfbot.conf</a></li>
<li><a href="http://www.mfoot.com/blog/2013/05/19/setting-up-a-personal-wiki-with-aws-and-gollum/">http://www.mfoot.com/blog/2013/05/19/setting-up-a-personal-wiki-with-aws-and-gollum/</a></li>
<li><a href="https://github.com/roman/rack-auth">https://github.com/roman/rack-auth</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Nodejs Using NVM]]></title>
    <link href="http://lifuzu.com/blog/2014/08/20/install-nodejs-using-nvm/"/>
    <updated>2014-08-20T11:44:12-07:00</updated>
    <id>http://lifuzu.com/blog/2014/08/20/install-nodejs-using-nvm</id>
    <content type="html"><![CDATA[<p><img src="https://lh3.googleusercontent.com/-1_vzgrh5dnI/U_Tq8koEceI/AAAAAAAACYA/S8xhWfrGSoE/s600/Screen+Shot+2014-08-20+at+11.36.59+AM.png" title="Screen Shot 2014-08-20 at 11.36.59 AM.png" alt="enter image description here" /></p>

<p>An alternative to installing Node.js through apt is to use a specially designed tool called nvm, which stands for &ldquo;Node.js version manager&rdquo;.</p>

<p>Using nvm, you can install multiple, self-contained versions of Node.js which will allow you to control your environment easier. It will give you on-demand access to the newest versions of Node.js, but will also allow you to target previous releases that your app may depend on.</p>

<!-- more -->


<h3>Install prerequisite package</h3>

<p>To start off, we&rsquo;ll need to get the software packages from our Ubuntu repositories that will allow us to build source packages. The nvm script will leverage these tools to build the necessary components:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>sudo apt-get update
</span><span class='line'>sudo apt-get install build-essential libssl-dev</span></code></pre></td></tr></table></div></figure>


<h3>Install nvm</h3>

<p>Once the prerequisite packages are installed, you can pull down the nvm installation script from the project&rsquo;s GitHub page. The version number may be different, but in general, you can download and install it with the following syntax:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>curl https://raw.githubusercontent.com/creationix/nvm/v0.13.1/install.sh | bash</span></code></pre></td></tr></table></div></figure>


<p>This will download the script and run it. It will install the software into a subdirectory of your home directory at ~/.nvm. It will also add the necessary lines to your ~/.profile file to use the file.</p>

<p>To gain access to the nvm functionality, you&rsquo;ll need to log out and log back in again, or you can source the ~/.profile file so that your current session knows about the changes:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>source ~/.profile</span></code></pre></td></tr></table></div></figure>


<p>Now that you have nvm installed, you can install isolated Node.js versions.</p>

<h3>Install nodejs</h3>

<p>To find out the versions of Node.js that are available for installation, you can type:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nvm ls-remote
</span><span class='line'>. . .
</span><span class='line'> v0.11.6
</span><span class='line'> v0.11.7
</span><span class='line'> v0.11.8
</span><span class='line'> v0.11.9
</span><span class='line'>v0.11.10
</span><span class='line'>v0.11.11
</span><span class='line'>v0.11.12
</span><span class='line'>v0.11.13</span></code></pre></td></tr></table></div></figure>


<p>As you can see, the newest version at the time of this writing is v0.11.13. You can install that by typing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nvm install 0.11.13</span></code></pre></td></tr></table></div></figure>


<p>Usually, nvm will switch to use the most recently installed version. You can explicitly tell nvm to use the version we just downloaded by typing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nvm use 0.11.13</span></code></pre></td></tr></table></div></figure>


<p>When you install Node.js using nvm, the executable is called node. You can see the version currently being used by the shell by typing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ node -v
</span><span class='line'>v.0.11.13
</span><span class='line'>$ npm -v
</span><span class='line'>1.4.9</span></code></pre></td></tr></table></div></figure>


<p>If you have multiple Node.js versions, you can see what is installed by typing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ nvm ls
</span><span class='line'>-&gt;  v0.11.13
</span><span class='line'>      system</span></code></pre></td></tr></table></div></figure>


<p>If you wish to default one of the versions, you can type:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ nvm alias default 0.11.13</span></code></pre></td></tr></table></div></figure>


<p>This version will be automatically selected when a new session spawns. You can also reference it by the alias like this:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ nvm use default</span></code></pre></td></tr></table></div></figure>


<p>Each version of Node.js will keep track of its own packages and has npm available to manage these.</p>

<h3>Install nodejs packages with npm</h3>

<p>You can have npm install packages to the Node.js project&rsquo;s ./node_modules directory by using the normal format:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ npm install express</span></code></pre></td></tr></table></div></figure>


<p>If you&rsquo;d like to install it globally (available to the other projects using the same Node.js version), you can add the -g flag:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ npm install -g express</span></code></pre></td></tr></table></div></figure>


<p>This will install the package in:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>~/.nvm/node_version/lib/node_modules/package_name</span></code></pre></td></tr></table></div></figure>


<p>Installing globally will let you run the commands from the command line, but you&rsquo;ll have to use link the package into your local sphere to require it from within a program:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>npm link express</span></code></pre></td></tr></table></div></figure>


<p>You can learn more about the options available to you with nvm by typing:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>nvm help</span></code></pre></td></tr></table></div></figure>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>

<h3>Reference:</h3>

<ol>
<li><a href="https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-an-ubuntu-14-04-server">https://www.digitalocean.com/community/tutorials/how-to-install-node-js-on-an-ubuntu-14-04-server</a></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[加入 Apple iOS 开发者计划]]></title>
    <link href="http://lifuzu.com/blog/2014/08/17/join-apple-ios-program/"/>
    <updated>2014-08-17T10:05:48-07:00</updated>
    <id>http://lifuzu.com/blog/2014/08/17/join-apple-ios-program</id>
    <content type="html"><![CDATA[<h1>起步</h1>

<p>学习开发 iOS 应用程序的第一步是理解注册为 Apple 开发者和 iOS 开发者计划会员的不同。然后决定你在什么时候付费加入 iOS 开发者计划。本章就来谈论一下 Apple 开发者和 iOS 开发者计划的差别，大概需要的费用以及加入开发者计划的好处。最后，一步步告诉大家怎么样加入这些计划成为会员。</p>

<h3>注册成为 Apple 开发者</h3>

<p>注册成为 Apple 开发者不需要费用，很简单，访问以下链接：</p>

<p><a href="http://developer.apple.com/programs/register/">http://developer.apple.com/programs/register/</a></p>

<p>然后按照要求一步步开始注册。
使用 Apple ID 进行注册，这个 Apple ID 就是用来在 iTunes 或者 Apple Store 上面购买商品的账号。
完成这个注册，就可以获得一些开发者资源，例如在线文档，教程等等。开发者也能够下载旧版的 iOS 开发包（SDK），以及 Xcode 开发环境（IDE）。</p>

<!-- more -->


<h3>下载 Xcode 6 (Beta) IDE 和 iOS 8 SDK</h3>

<p>最新版的 iOS SDK 和 Xcode 可以在 Apple App Store 上面免费下载。鉴于支持 Swift 的 Xcode
6 还是 Beta 版本，我们需要在以下这个网址下载：</p>

<p><a href="https://developer.apple.com/xcode/downloads/">https://developer.apple.com/xcode/downloads/</a></p>

<p>因为这些工具是免费的，那还需要升级加入 iOS 开发者计划吗？是不是保持为 Apple 开发者就足够了。鉴于此，全面理解 iOS 开发者计划是很重要的。</p>

<h3>iOS 开发者计划</h3>

<p>加入 iOS 开发者计划会员费为每年99美元。前面说过，iOS 开发者计划会员可以下载最新版的 iOS SDK 以及 Xcode 开发环境。而且，iOS 开发者计划会员还有以下几点关键好处：</p>

<ol>
<li><p>iOS 开发者计划会员可以创建证书和配置文件，以便在真实设备（而不是虚拟机）上测试应用程序。虽然 Xcode 包含了设备模拟器，允许很大部分的测试在上面运行，然而还是有一部分功能，例如定位跟踪，以及设备移动，只能够在真实设备上全面测试。特别重要的是，iCloud 的访问，提醒和应用内购买，只能当应用程序在物理设备上运行时进行测试。</p></li>
<li><p>更重要的是，iOS 开发者计划的会员可以不受限制地访问全系列与最新的 iOS SDK 和对应的指南和教程，有机会获得来自苹果的 iOS 技术支持工程师的技术支持（虽然每年的费用仅仅包括两个支持事件报告）。</p></li>
<li><p>目前iOS开发者计划中最重要的好处是，必须成为成员才可以在 App Store 中的发布为了出售或免费下载的应用程序。</p></li>
</ol>


<p>显然，在你的应用程序上传 App Store 在某一点之前，iOS开发者计划的成员资格将被要求。唯一的问题是，什么时候注册。</p>

<h3>什么时候注册 iOS 开发者计划</h3>

<p>很明显，iOS 开发者计划的会员有很多好处，而且最终，必须成为会员才能够开始销售应用程序。至于是否现在缴纳报名费或以后，主要视乎个别情况而定。如果你仍然在学习开发 iOS 应用程序的早期阶段，或者还没有拿出一个很好的主意开发应用程序，你就只是需要注册 Apple 开发者。随着你的技能水平的提高，你的想法，应用开发初具规模，到那个时候就可以加入了iOS 开发者计划了。毕竟，日后总是可以报名加入开发者计划的。
另一方面，如果你有对自己有信心，你的应用程序准备发布或你知道需要在物理设备上测试一个的应用程序的功能，而不是能在模拟器里测试了，那么就加入开发者计划吧，宜早不宜迟。</p>

<h3>加入 iOS 开发者计划</h3>

<p>如果你的目标是为您的雇主开发 iOS 应用程序，首先需要检查你们公司是否已经拥有会员资格。如果已经拥有，请与你的公司的程序管理员联系，让他们从 iOS 开发者计划会员中心给你发送邀请，来加入团队。一旦他们这样做了，苹果会发送邮件告知你已经被邀请加入，邮件中含有一个链接，点击链接来激活你的会员资格。如果你或你的公司不是 iOS 开发者计划会员，您可以在网上报名参加：</p>

<p><a href="https://developer.apple.com/programs/ios/">https://developer.apple.com/programs/ios/</a></p>

<p><img src="https://lh4.googleusercontent.com/-B_5q_23G9eo/U-ccIbGr89I/AAAAAAAACVE/dLyAUC2dJGs/s600/Screen+Shot+2014-08-09+at+11.58.29+PM.png" title="Screen Shot 2014-08-09 at 11.58.29 PM.png" alt="enter image description here" /></p>

<p>点击按钮“Enroll Now”，你会看到以下界面：
<img src="https://lh5.googleusercontent.com/-qEoXluyTXdk/U-ccuPCliyI/AAAAAAAACVQ/o2zVICVQLTI/s600/Screen+Shot+2014-08-09+at+11.58.35+PM.png" title="Screen Shot 2014-08-09 at 11.58.35 PM.png" alt="enter image description here" /></p>

<p>继续点击按钮“Continue”：
<img src="https://lh5.googleusercontent.com/-gqQyEfGBRrY/U-cdG8Te43I/AAAAAAAACVg/sKKoDloLZbE/s600/Screen+Shot+2014-08-10+at+12.00.51+AM.png" title="Screen Shot 2014-08-10 at 12.00.51 AM.png" alt="enter image description here" /></p>

<p>选择已有的 Apple ID 或者创建一个新的账号。如果是创建一个新的账号，之后的界面需要输入一些个人信息。之后，你会看到以下界面，点击按钮“Continue”：
<img src="https://lh4.googleusercontent.com/-4BqH51hVbOo/U-cd-8GVBLI/AAAAAAAACV0/w5FhDRnCFXE/s600/Screen+Shot+2014-08-10+at+12.06.14+AM.png" title="Screen Shot 2014-08-10 at 12.06.14 AM.png" alt="enter image description here" /></p>

<p>你需要按照要求选择适合自己的选项，例如，是个人开发者，还是公司开发者：
<img src="https://lh4.googleusercontent.com/-Pic2Qq9Hj3E/U-hl0oX9c6I/AAAAAAAACWs/PHmdeRviXoA/s600/Screen+Shot+2014-08-10+at+12.35.48+AM.png" title="Screen Shot 2014-08-10 at 12.35.48 AM.png" alt="enter image description here" /></p>

<p>继续按照屏幕提示进行，直至完成付费。</p>

<p>现在你需要等待申请批准，账号被激活。</p>

<p>在你等待的这个时间，你可以用你申请时使用的账号和密码登录会员中心：</p>

<p><a href="http://developer.apple.com/membercenter">http://developer.apple.com/membercenter</a></p>

<p>登录以后，点击网页上方“Your Account”，将会显示你之前的申请状态为“Enrollment Pending”：
<img src="https://lh4.googleusercontent.com/--zjVcNRCKCM/U-hmxO7TivI/AAAAAAAACXE/HwSXSe2ATOA/s600/Screen+Shot+2014-08-10+at+11.45.23+PM.png" title="Screen Shot 2014-08-10 at 11.45.23 PM.png" alt="enter image description here" /></p>

<p>当你收到账号激活的邮件，再次登录进会员中心，你就能看到很多的选择，以及资源显示出来，如下图所示：</p>

<p><img src="https://lh6.googleusercontent.com/-EpxJlJRDOU4/U-6dsYX-ccI/AAAAAAAACXk/_m28-ERYSeY/s600/Screen+Shot+2014-08-15+at+4.53.34+PM.png" title="Screen Shot 2014-08-15 at 4.53.34 PM.png" alt="register iOS program done" /></p>

<h3>小结</h3>

<p>准备 iOS 应用程序开发的一个重要步骤就是注册成为 Apple 开发者，以及在必要时刻升级为 iOS 的开发者计划会员。本章概述了以上两种计划的不同，提供了如何加入计划的步骤，以及简要的描述了注册的步骤。</p>

<p>下一步是下载 iOS SDK 和Xcode 6（Beta）开发环境。</p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing With Gerrit Jira Plugin]]></title>
    <link href="http://lifuzu.com/blog/2014/08/05/playing-with-gerrit-jira-plugin/"/>
    <updated>2014-08-05T11:05:16-07:00</updated>
    <id>http://lifuzu.com/blog/2014/08/05/playing-with-gerrit-jira-plugin</id>
    <content type="html"><![CDATA[<p><img src="https://lh5.googleusercontent.com/dDJ6IKUAZN5IZMlt8CmQic457z5BKfJ4WdqXrH2sf5s=s650" title="Gerrit" alt="Gerrit" /></p>

<h3>Build and Setup</h3>

<p><strong>1</strong>. Clone the Gerrit source:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone https://gerrit.googlesource.com/gerrit
</span></code></pre></td></tr></table></div></figure>


<p><strong>2</strong>. Checkout to version 2.8 (2.8 is the latest stable version), include to update submodules:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>gerrit
</span><span class='line'><span class="nv">$ </span>git checkout -b stable-2.8 stable-2.8
</span><span class='line'><span class="nv">$ </span>git submodule update --init --rebase <span class="c"># commands, please referece to git submodule</span>
</span></code></pre></td></tr></table></div></figure>


<p><strong>3</strong>. Clone buck, buck is the build system for the latest Gerrit, then build it with ant (&lsquo;sudo apt-get install ant&rsquo;):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone https://gerrit.googlesource.com/buck
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>buck
</span><span class='line'><span class="nv">$ </span>ant
</span></code></pre></td></tr></table></div></figure>


<p><strong>4</strong>. Install buck to be accessed globally:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>mkdir ~/bin
</span><span class='line'><span class="nv">$ </span><span class="nb">export </span><span class="nv">PATH</span><span class="o">=</span>~/bin:<span class="nv">$PATH</span>
</span><span class='line'><span class="nv">$ </span>ln -s <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/bin/buck ~/bin/
</span><span class='line'><span class="nv">$ </span>ln -s <span class="sb">`</span><span class="nb">pwd</span><span class="sb">`</span>/bin/buckd ~/bin/
</span><span class='line'><span class="nv">$ </span>which buck
</span></code></pre></td></tr></table></div></figure>


<p><strong>5</strong>. Build Gerrit:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>gerrit
</span><span class='line'><span class="nv">$ </span>buck build gerrit
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><strong>NOTE:</strong> The gerrit.war will be generated here: buck-out/gen/gerrit.war</p></blockquote>

<p><strong>6</strong>. Build extension, plugin, GWT API jar files, and install them:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>buck build api
</span><span class='line'><span class="nv">$ </span>buck build api_install
</span></code></pre></td></tr></table></div></figure>


<p><strong>7</strong>. Build all core plugins (optional):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>buck build plugins:core
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><strong>NOTE:</strong> All core plugins will be generated here: buck-out/gen/plugins/&lt;name&gt;/&lt;name&gt;.jar</p></blockquote>

<p><strong>8</strong>. Clone the hooks-its, and hooks-jira projects:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone https://gerrit.googlesource.com/plugins/hooks-its plugins/hooks-its
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>plugins/hooks-its
</span><span class='line'><span class="nv">$ </span>git checkout -b v2.8 origin/stable-2.8
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> ../..
</span><span class='line'><span class="nv">$ </span>git clone https://gerrit.googlesource.com/plugins/hooks-jira plugins/hooks-jira
</span></code></pre></td></tr></table></div></figure>


<p><strong>9</strong>. Modify the pom.xml files under plugins/hooks-its AND plugins/hooks-its/hooks-its:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nb">cd </span>plugins/hooks-its
</span><span class='line'><span class="nv">$ </span>git diff
</span><span class='line'>diff --git a/hooks-its/pom.xml b/hooks-its/pom.xml
</span><span class='line'>index a206459..75e11dc 100644
</span><span class='line'>--- a/hooks-its/pom.xml
</span><span class='line'>+++ b/hooks-its/pom.xml
</span><span class='line'>@@ -22,7 +22,7 @@ limitations under the License.
</span><span class='line'>   &lt;parent&gt;
</span><span class='line'>     &lt;groupId&gt;com.googlesource.gerrit.plugins.its&lt;/groupId&gt;
</span><span class='line'>     &lt;artifactId&gt;hooks-its-parent&lt;/artifactId&gt;
</span><span class='line'>-    &lt;version&gt;2.9-SNAPSHOT&lt;/version&gt;
</span><span class='line'>+    &lt;version&gt;2.8&lt;/version&gt;
</span><span class='line'>   &lt;/parent&gt;
</span><span class='line'>   &lt;artifactId&gt;hooks-its&lt;/artifactId&gt;
</span><span class='line'>   &lt;name&gt;Gerrit Code Review - Commit validation and Workflow&lt;/name&gt;
</span><span class='line'>diff --git a/pom.xml b/pom.xml
</span><span class='line'>index 600bff9..995d008 100644
</span><span class='line'>--- a/pom.xml
</span><span class='line'>+++ b/pom.xml
</span><span class='line'>@@ -22,7 +22,7 @@ limitations under the License.
</span><span class='line'>   &lt;groupId&gt;com.googlesource.gerrit.plugins.its&lt;/groupId&gt;
</span><span class='line'>   &lt;artifactId&gt;hooks-its-parent&lt;/artifactId&gt;
</span><span class='line'>   &lt;packaging&gt;pom&lt;/packaging&gt;
</span><span class='line'>-  &lt;version&gt;2.9-SNAPSHOT&lt;/version&gt;
</span><span class='line'>+  &lt;version&gt;2.8&lt;/version&gt;
</span><span class='line'>
</span><span class='line'>   &lt;name&gt;Gerrit Code Review - Issue tracker support&lt;/name&gt;
</span></code></pre></td></tr></table></div></figure>


<p><strong>10</strong>. Build the hooks-its:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>plugins/hooks-its
</span><span class='line'><span class="nv">$ </span>mvn -DskipTests -Dmaven.test.skip<span class="o">=</span><span class="nb">true </span>package install
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><strong>NOTE:</strong> The hooks-its-2.8.jar will be generated here: hooks-its/target/hooks-its-2.8.jar
<strong>NOTE</strong>: If don&rsquo;t skip tests, run with the command: <code>mvn clean package install</code>, then will fail on test case!
<strong>NOTE</strong>: Gerrit select BUCK as its new build system, for new plugin, please reference to the following <em>NOTES</em> #5</p></blockquote>

<p><strong>11</strong>. Modify the pom.xml files under plugins/hooks-jira:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>plugins/hooks-jira
</span><span class='line'><span class="nv">$ </span>git diff
</span><span class='line'>diff --git a/pom.xml b/pom.xml
</span><span class='line'>index 7b04c60..8f60c78 100644
</span><span class='line'>--- a/pom.xml
</span><span class='line'>+++ b/pom.xml
</span><span class='line'>@@ -20,7 +20,7 @@ limitations under the License.
</span><span class='line'>   &lt;parent&gt;
</span><span class='line'>     &lt;groupId&gt;com.googlesource.gerrit.plugins.its&lt;/groupId&gt;
</span><span class='line'>     &lt;artifactId&gt;hooks-its-parent&lt;/artifactId&gt;
</span><span class='line'>-    &lt;version&gt;2.9-SNAPSHOT&lt;/version&gt;
</span><span class='line'>+    &lt;version&gt;2.8&lt;/version&gt;
</span><span class='line'>   &lt;/parent&gt;
</span><span class='line'>   &lt;artifactId&gt;hooks-jira&lt;/artifactId&gt;
</span><span class='line'>   &lt;packaging&gt;jar&lt;/packaging&gt;
</span></code></pre></td></tr></table></div></figure>


<p><strong>12</strong>. Build the hooks-jira:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>plugins/hooks-jira
</span><span class='line'><span class="nv">$ </span>mvn clean package
</span></code></pre></td></tr></table></div></figure>


<blockquote><p><strong>NOTE:</strong> The hooks-jira-2.8.jar will be generated here: target/hooks-jira-2.8.jar</p></blockquote>

<p><strong>13</strong>. Copy the following jar files to the <code>plugin</code> folder under the Gerrit installation path on remote server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>hooks-its-2.8.jar
</span><span class='line'>hooks-jira-2.8.jar
</span></code></pre></td></tr></table></div></figure>


<p>For example:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>scp hooks-its/target/hooks-its-2.8.jar ../hooks-jira/target/hooks-jira-2.8.jar gerrit2@review.example.co:/home/gerrit2/review_site/plugins
</span></code></pre></td></tr></table></div></figure>


<p><strong>14</strong>. Add a new file etc/its/action.config under the Gerrit installation path on remote server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>rule <span class="s2">&quot;merged&quot;</span><span class="o">]</span>
</span><span class='line'>        event-type <span class="o">=</span> change-merged
</span><span class='line'>        <span class="nv">action</span> <span class="o">=</span> add-standard-comment
</span><span class='line'><span class="o">[</span>rule <span class="s2">&quot;comment&quot;</span><span class="o">]</span>
</span><span class='line'>        event-type <span class="o">=</span> comment-added
</span><span class='line'>        <span class="nv">action</span> <span class="o">=</span> add-standard-comment
</span><span class='line'><span class="o">[</span>rule <span class="s2">&quot;patch-set&quot;</span><span class="o">]</span>
</span><span class='line'>        event-type <span class="o">=</span> patchset-created
</span><span class='line'>        <span class="nv">action</span> <span class="o">=</span> add-standard-comment
</span><span class='line'><span class="o">[</span>rule <span class="s2">&quot;ref-updated&quot;</span><span class="o">]</span>
</span><span class='line'>        event-type <span class="o">=</span> ref-updated
</span><span class='line'>        <span class="nv">action</span> <span class="o">=</span> add-standard-comment
</span></code></pre></td></tr></table></div></figure>


<p><strong>15</strong>. Run the Gerrit initial installation command on remote server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>java -jar gerrit-2.8.war init -d review_site
</span><span class='line'>
</span><span class='line'>*** Gerrit Code Review 2.8
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>*** Git Repositories
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Location of Git repositories   <span class="o">[</span>git<span class="o">]</span>:
</span><span class='line'>
</span><span class='line'>*** SQL Database
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Database server <span class="nb">type</span>           <span class="o">[</span>mysql<span class="o">]</span>:
</span><span class='line'>Server hostname                <span class="o">[</span>localhost<span class="o">]</span>:
</span><span class='line'>Server port                    <span class="o">[(</span>mysql default<span class="o">)]</span>:
</span><span class='line'>Database name                  <span class="o">[</span>reviewdb<span class="o">]</span>:
</span><span class='line'>Database username              <span class="o">[</span>gerrit2<span class="o">]</span>:
</span><span class='line'>Change gerrit2<span class="s1">&#39;s password      [y/N]?</span>
</span><span class='line'>
</span><span class='line'><span class="s1">*** User Authentication</span>
</span><span class='line'><span class="s1">***</span>
</span><span class='line'>
</span><span class='line'><span class="s1">Authentication method          [DEVELOPMENT_BECOME_ANY_ACCOUNT/?]:</span>
</span><span class='line'>
</span><span class='line'><span class="s1">*** Email Delivery</span>
</span><span class='line'><span class="s1">***</span>
</span><span class='line'>
</span><span class='line'><span class="s1">SMTP server hostname           [localhost]:</span>
</span><span class='line'><span class="s1">SMTP server port               [(default)]:</span>
</span><span class='line'><span class="s1">SMTP encryption                [NONE/?]:</span>
</span><span class='line'><span class="s1">SMTP username                  [gerrit2]:</span>
</span><span class='line'><span class="s1">Change gerrit2&#39;</span>s password      <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>
</span><span class='line'>*** Container Process
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Run as                         <span class="o">[</span>gerrit2<span class="o">]</span>:
</span><span class='line'>Java runtime                   <span class="o">[</span>C:<span class="se">\P</span>rogram Files <span class="o">(</span>x86<span class="o">)</span><span class="se">\J</span>ava<span class="se">\j</span>re7<span class="o">]</span>:
</span><span class='line'>Upgrade c:<span class="se">\U</span>sers<span class="se">\g</span>errit2<span class="se">\g</span>errit<span class="se">\b</span>in<span class="se">\g</span>errit.war <span class="o">[</span>Y/n<span class="o">]</span>?
</span><span class='line'>Copying gerrit-2.8.war to c:<span class="se">\U</span>sers<span class="se">\g</span>errit2<span class="se">\g</span>errit<span class="se">\b</span>in<span class="se">\g</span>errit.war
</span><span class='line'>
</span><span class='line'>*** SSH Daemon
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Listen on address              <span class="o">[</span>*<span class="o">]</span>:
</span><span class='line'>Listen on port                 <span class="o">[</span>29418<span class="o">]</span>:
</span><span class='line'>
</span><span class='line'>*** HTTP Daemon
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Behind reverse proxy           <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Use SSL <span class="o">(</span>https://<span class="o">)</span>             <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Listen on address              <span class="o">[</span>*<span class="o">]</span>:
</span><span class='line'>Listen on port                 <span class="o">[</span>8080<span class="o">]</span>:
</span><span class='line'>Canonical URL                  <span class="o">[</span>http://review.example.com:8080/<span class="o">]</span>:
</span><span class='line'>
</span><span class='line'>*** Plugins
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Install plugin reviewnotes version v2.8 <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Install plugin download-commands version v2.8 <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Install plugin replication version v2.8 <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Install plugin commit-message-length-validator version v2.8 <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>
</span><span class='line'>
</span><span class='line'>*** Jira connectivity
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Jira URL <span class="o">(</span>empty to skip<span class="o">)</span>       <span class="o">[</span>https://jira.example.com/<span class="o">]</span>:
</span><span class='line'>Jira username                  <span class="o">[</span>jira-robot<span class="o">]</span>:
</span><span class='line'>Change jira-robot<span class="err">&#39;</span>s password        <span class="o">[</span>y/N<span class="o">]</span>?
</span><span class='line'>Test connectivity to https://jira.example.com <span class="o">[</span>y/N<span class="o">]</span>? y
</span><span class='line'>Checking Jira connectivity ... <span class="o">[</span>OK<span class="o">]</span>
</span><span class='line'>
</span><span class='line'>*** Jira issue-tracking association
</span><span class='line'>***
</span><span class='line'>
</span><span class='line'>Jira issue-Id regex            <span class="o">[([</span>A-Z<span class="o">]</span>+-<span class="o">[</span>0-9<span class="o">]</span>+<span class="o">)]</span>:
</span><span class='line'>Issue-id enforced in commit message <span class="o">[</span>MANDATORY/?<span class="o">]</span>:?
</span><span class='line'>Supported options are:
</span><span class='line'>           mandatory
</span><span class='line'>           suggested
</span><span class='line'>           optional
</span><span class='line'>Issue-id enforced in commit message <span class="o">[</span>MANDATORY/?<span class="o">]</span>: suggested
</span><span class='line'>Initialized C:<span class="se">\U</span>sers<span class="se">\g</span>errit2<span class="se">\g</span>errit
</span></code></pre></td></tr></table></div></figure>


<p><strong>16</strong>. Restart gerrit-jetty service:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>sudo service gerrit-jetty.sh restart
</span></code></pre></td></tr></table></div></figure>


<p><strong>17</strong>. Done!</p>

<h3>NOTES:</h3>

<p><em>1</em>. Download Gerrit here: <a href="http://gerrit-releases.storage.googleapis.com/index.html">http://gerrit-releases.storage.googleapis.com/index.html</a></p>

<p><em>2</em>. The file review_site/etc/gerrit.config should look like:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>jira<span class="o">]</span>
</span><span class='line'>        <span class="nv">url</span> <span class="o">=</span> http://review.example.com:8080
</span><span class='line'>        <span class="nv">username</span> <span class="o">=</span> jira-robot
</span><span class='line'>        <span class="nv">commentOnRefUpdatedGitWeb</span> <span class="o">=</span> <span class="nb">false</span>   <span class="c"># to comment gitweb comments on jira</span>
</span><span class='line'><span class="o">[</span>commentLink <span class="s2">&quot;jira&quot;</span><span class="o">]</span>
</span><span class='line'>        <span class="nv">match</span> <span class="o">=</span> <span class="o">([</span>A-Z<span class="o">]</span>+-<span class="o">[</span>0-9<span class="o">]</span>+<span class="o">)</span>
</span><span class='line'>        <span class="nv">html</span> <span class="o">=</span> &lt;a <span class="nv">href</span><span class="o">=</span><span class="se">\&quot;</span>http://jira.example.com:8080/browse/<span class="nv">$1</span><span class="se">\&quot;</span>&gt;<span class="nv">$1</span>&lt;/a&gt;
</span><span class='line'>        <span class="nv">association</span> <span class="o">=</span> SUGGESTED
</span></code></pre></td></tr></table></div></figure>


<p><em>3</em>. If we just want to parse the jira id on the subject of the git comments, then here is the diff:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>diff --git a/hooks-its/src/main/java/com/googlesource/gerrit/plugins/hooks/util/
</span><span class='line'>index a04b175..3d56426 100644
</span><span class='line'>--- a/hooks-its/src/main/java/com/googlesource/gerrit/plugins/hooks/util/CommitM
</span><span class='line'>+++ b/hooks-its/src/main/java/com/googlesource/gerrit/plugins/hooks/util/CommitM
</span><span class='line'>@@ -31,7 +31,7 @@ public class CommitMessageFetcher <span class="o">{</span>
</span><span class='line'>       RevWalk <span class="nv">revWalk</span> <span class="o">=</span> new RevWalk<span class="o">(</span>repo<span class="o">)</span>;
</span><span class='line'>       RevCommit <span class="nv">commit</span> <span class="o">=</span> revWalk.parseCommit<span class="o">(</span>ObjectId.fromString<span class="o">(</span>commitId<span class="o">))</span>;
</span><span class='line'>
</span><span class='line'>-      <span class="k">return </span>commit.getFullMessage<span class="o">()</span>;
</span><span class='line'>+      <span class="k">return </span>commit.getShortMessage<span class="o">()</span>;
</span><span class='line'>     <span class="o">}</span> finally <span class="o">{</span>
</span><span class='line'>       repo.close<span class="o">()</span>;
</span><span class='line'>     <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p><em>4</em>. Get the log message from jetty/logs on Gerrit server.
<em>5</em>. Gerrit choose BUCK as its new build system, so for the new plugin, the build steps should be (take cookbook-plugin as an example):</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>buck build plugins/cookbook-plugin
</span></code></pre></td></tr></table></div></figure>


<p>The output is created in: buck-out/gen/plugins/cookbook-plugin/cookbook-plugin.jar</p>

<h3>References:</h3>

<p><em>1</em>. <a href="https://groups.google.com/forum/#!msg/repo-discuss/GSyHMeaCyyw/cJGunFcNc4oJ">https://groups.google.com/forum/#!msg/repo-discuss/GSyHMeaCyyw/cJGunFcNc4oJ</a>
<em>2</em>. <a href="https://gerrit-review.googlesource.com/Documentation/dev-buck.html">https://gerrit-review.googlesource.com/Documentation/dev-buck.html</a></p>

<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing With Jenkins Create Job]]></title>
    <link href="http://lifuzu.com/blog/2014/04/24/playing-with-jenkins-create-job/"/>
    <updated>2014-04-24T22:08:09-07:00</updated>
    <id>http://lifuzu.com/blog/2014/04/24/playing-with-jenkins-create-job</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-iwPM2DPUvJY/U0Y1mjJ70WI/AAAAAAAAB4g/ZOmWzMCL-_0/s0/jenkins_feature.jpg" title="jenkins_feature.jpg" alt="Jenkins logo" /></p>

<h2>create new job from templates</h2>

<p>In this article, we will talk about how to create a Jenkins job with a template by some commands.</p>

<h3>Instructions</h3>

<p><em>1</em>. Get the Jenkins CLI client package</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ wget http://jenkins/jnlpJars/jenkins-cli.jar</span></code></pre></td></tr></table></div></figure>


<p><em>2</em>. Check which commands supported by the client package [Exception <em>1</em>,<em>2</em>]</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ help</span></code></pre></td></tr></table></div></figure>


<p><em>3</em>. List all jobs under the view: tools</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ list-jobs tools</span></code></pre></td></tr></table></div></figure>


<p><em>4</em>. Get the configuration of the job: template</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ get-job template &gt; template.xml</span></code></pre></td></tr></table></div></figure>


<p><em>5</em>. Create a new job based on the configuration</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ create-job new_job_name &lt; new_job_name.xml</span></code></pre></td></tr></table></div></figure>


<p><em>6</em>. Run groovy script</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ groovy scripts/add_job_to_view.groovy</span></code></pre></td></tr></table></div></figure>


<p>If there are any parameters in the script, just as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>import jenkins.model.*
</span><span class='line'>
</span><span class='line'>if (args.length != 2 ) {
</span><span class='line'>  println "Error on arguments!"
</span><span class='line'>}
</span><span class='line'>def jobName  = args[0] ?: 'a_job'
</span><span class='line'>def viewName = args[1] ?: 'a_view'
</span><span class='line'>
</span><span class='line'>println jobName + ' ' + viewName
</span><span class='line'>
</span><span class='line'>def v = Jenkins.instance.getView(viewName)
</span><span class='line'>def i = Jenkins.instance.getItemByFullName(jobName)
</span><span class='line'>if (v && i) {
</span><span class='line'>  v.add(i)
</span><span class='line'>}</span></code></pre></td></tr></table></div></figure>


<p>pass the parameters as:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ groovy scripts/add_job_to_view.groovy JOB_NAME VIEM_NAME</span></code></pre></td></tr></table></div></figure>


<p><em>7</em>. Build a job</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ build new_job_name</span></code></pre></td></tr></table></div></figure>


<p><em>8</em>. Diable a job</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins/ disable-job new_job_name</span></code></pre></td></tr></table></div></figure>


<h3>Exceptions:</h3>

<p><em>1</em>. Description:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Exception in thread "main" java.io.IOException: No X-Jenkins-CLI2-Port among [null, Vary, Date, Content-Length, Keep-Alive, Set-Cookie, Connection, Content-Type, X-Powered-By, Server]
</span><span class='line'>  at hudson.cli.CLI.getCliTcpPort(CLI.java:281)
</span><span class='line'>  at hudson.cli.CLI.&lt;init&gt;(CLI.java:128)
</span><span class='line'>  at hudson.cli.CLIConnectionFactory.connect(CLIConnectionFactory.java:72)
</span><span class='line'>  at hudson.cli.CLI._main(CLI.java:449)
</span><span class='line'>  at hudson.cli.CLI.main(CLI.java:378)
</span><span class='line'>  Suppressed: java.io.EOFException: unexpected stream termination
</span><span class='line'>      at hudson.remoting.ClassicCommandTransport.create(ClassicCommandTransport.java:100)
</span><span class='line'>      at hudson.remoting.Channel.&lt;init&gt;(Channel.java:392)
</span><span class='line'>      at hudson.remoting.Channel.&lt;init&gt;(Channel.java:388)
</span><span class='line'>      at hudson.remoting.Channel.&lt;init&gt;(Channel.java:349)
</span><span class='line'>      at hudson.remoting.Channel.&lt;init&gt;(Channel.java:345)
</span><span class='line'>      at hudson.remoting.Channel.&lt;init&gt;(Channel.java:333)
</span><span class='line'>      at hudson.cli.CLI.connectViaHttp(CLI.java:159)
</span><span class='line'>      at hudson.cli.CLI.&lt;init&gt;(CLI.java:132)
</span><span class='line'>      ... 3 more</span></code></pre></td></tr></table></div></figure>


<h4>Solution: check the port which Jenkins is running on, put 8080 on URL should fix, just as:</h4>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>$ java -jar jenkins-cli.jar -s http://jenkins:8080/ help</span></code></pre></td></tr></table></div></figure>


<p><em>2</em>. Description:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>Failed to authenticate with your SSH keys.
</span><span class='line'>hudson.security.AccessDeniedException2: anonymous is missing the ExtendedRead permission
</span><span class='line'>  at hudson.security.ACL.checkPermission(ACL.java:54)
</span><span class='line'>  at hudson.model.AbstractItem.checkPermission(AbstractItem.java:441)
</span><span class='line'>  at hudson.cli.GetJobCommand.run(GetJobCommand.java:46)
</span><span class='line'>  at hudson.cli.CLICommand.main(CLICommand.java:229)
</span><span class='line'>  at hudson.cli.CliManagerImpl.main(CliManagerImpl.java:92)
</span><span class='line'>  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
</span><span class='line'>  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
</span><span class='line'>  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
</span><span class='line'>  at java.lang.reflect.Method.invoke(Method.java:616)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.perform(RemoteInvocationHandler.java:275)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.call(RemoteInvocationHandler.java:256)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.call(RemoteInvocationHandler.java:215)
</span><span class='line'>  at hudson.remoting.UserRequest.perform(UserRequest.java:118)
</span><span class='line'>  at hudson.remoting.UserRequest.perform(UserRequest.java:48)
</span><span class='line'>  at hudson.remoting.Request$2.run(Request.java:326)
</span><span class='line'>  at hudson.remoting.InterceptingExecutorService$1.call(InterceptingExecutorService.java:72)
</span><span class='line'>  at hudson.cli.CliManagerImpl$1.call(CliManagerImpl.java:63)
</span><span class='line'>  at hudson.remoting.InterceptingExecutorService$2.call(InterceptingExecutorService.java:95)
</span><span class='line'>  at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
</span><span class='line'>  at java.util.concurrent.FutureTask.run(FutureTask.java:166)
</span><span class='line'>  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
</span><span class='line'>  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
</span><span class='line'>  at java.lang.Thread.run(Thread.java:679)</span></code></pre></td></tr></table></div></figure>


<h4>Solution: add client public ssh key to the Jenkins server at: <code>http://jenkins/user/USERNAME/configure</code> | <code>SSH Public Keys</code>.</h4>

<p><em>3</em>. Description:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>hudson.security.AccessDeniedException2: &lt;USERNAME&gt; is missing the Job/ExtendedRead permission
</span><span class='line'>  at hudson.security.ACL.checkPermission(ACL.java:54)
</span><span class='line'>  at hudson.model.AbstractItem.checkPermission(AbstractItem.java:446)
</span><span class='line'>  at hudson.cli.GetJobCommand.run(GetJobCommand.java:46)
</span><span class='line'>  at hudson.cli.CLICommand.main(CLICommand.java:234)
</span><span class='line'>  at hudson.cli.CliManagerImpl.main(CliManagerImpl.java:92)
</span><span class='line'>  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
</span><span class='line'>  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
</span><span class='line'>  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
</span><span class='line'>  at java.lang.reflect.Method.invoke(Method.java:606)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.perform(RemoteInvocationHandler.java:300)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.call(RemoteInvocationHandler.java:281)
</span><span class='line'>  at hudson.remoting.RemoteInvocationHandler$RPCRequest.call(RemoteInvocationHandler.java:240)
</span><span class='line'>  at hudson.remoting.UserRequest.perform(UserRequest.java:118)
</span><span class='line'>  at hudson.remoting.UserRequest.perform(UserRequest.java:48)
</span><span class='line'>  at hudson.remoting.Request$2.run(Request.java:328)
</span><span class='line'>  at hudson.remoting.InterceptingExecutorService$1.call(InterceptingExecutorService.java:72)
</span><span class='line'>  at hudson.cli.CliManagerImpl$1.call(CliManagerImpl.java:63)
</span><span class='line'>  at hudson.remoting.InterceptingExecutorService$2.call(InterceptingExecutorService.java:95)
</span><span class='line'>  at jenkins.util.ContextResettingExecutorService$2.call(ContextResettingExecutorService.java:46)
</span><span class='line'>  at java.util.concurrent.FutureTask.run(FutureTask.java:262)
</span><span class='line'>  at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
</span><span class='line'>  at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
</span><span class='line'>  at java.lang.Thread.run(Thread.java:745)</span></code></pre></td></tr></table></div></figure>


<h4>Solution: Jenkins server &ndash;> Manage Jenkins &ndash;> Configure Global Security to add <USERNAME> related permissions.</h4>

<h3>References:</h3>

<ol>
<li><a href="http://www.blackpepper.co.uk/generating-new-jenkins-jobs-from-templates-and-parameterised-builds/">http://www.blackpepper.co.uk/generating-new-jenkins-jobs-from-templates-and-parameterised-builds/</a></li>
<li><a href="http://javadoc.jenkins-ci.org/jenkins/model/Jenkins.html">http://javadoc.jenkins-ci.org/jenkins/model/Jenkins.html</a></li>
<li><a href="https://github.com/jenkinsci/jenkins">https://github.com/jenkinsci/jenkins</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Playing With Git Submodule]]></title>
    <link href="http://lifuzu.com/blog/2014/04/24/playing-with-git-submodule/"/>
    <updated>2014-04-24T22:01:03-07:00</updated>
    <id>http://lifuzu.com/blog/2014/04/24/playing-with-git-submodule</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-GW4P0d8zZdM/U1nrsDaCgiI/AAAAAAAAB5I/4mTt3xjfmFo/s0/xlotte-git.jpg" title="xlotte-git.jpg" alt="enter image description here" /></p>

<h3>Intructions:</h3>

<ul>
<li>add a submodule</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git submodule add -b BRANCH ssh://REPO_URL/REPO_PATH SUBMODULE_PATH
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;add a submodule at SUBMODULE_PATH&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>clone the project with submodule(s)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git clone ssh://REPO_URL/REPO_PATH PROJECT
</span><span class='line'><span class="nb">cd </span>PROJECT
</span><span class='line'><span class="nv">$ </span>git submodule update --init --rebase
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>get submodule status</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git submodule status
</span><span class='line'><span class="nv">$ </span>git submodule foreach git branch -a
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>checkout all submodule to a branch defined in .gitmodule (which means we specify the branch when we add the submodule with &lsquo;-b BRANCH&rsquo;)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git submodule foreach -q --recursive <span class="s1">&#39;branch=&quot;$(git config -f $toplevel/.gitmodules submodule.$name.branch)&quot;; git checkout $branch&#39;</span>
</span><span class='line'><span class="c"># OR a short version</span>
</span><span class='line'><span class="nv">$ </span>git submodule foreach git checkout master
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>pull the latest master for all of the submodule</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git submodule -q foreach git pull -q origin master
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>develop in submodule</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Make your changes in submoduleA</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd </span>submoduleA
</span><span class='line'><span class="nv">$ </span>git add .
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;Updated the submoduleA&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push origin BRANCH
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>sync to project</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>PROJECT
</span><span class='line'><span class="nv">$ </span>git pull
</span><span class='line'><span class="nv">$ </span>git submodule update --rebase
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>manually update the project to track submodule (Gerrit submodule description commit the track automatically)</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span><span class="nb">cd </span>PROJECT
</span><span class='line'><span class="nv">$ </span>git add submoduleA
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;Updated submodule a.&quot;</span>
</span><span class='line'><span class="nv">$ </span>git push origin BRANCH_NAME
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>deinit, and remove a submodule</li>
</ul>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>git submodule deinit SUBMODULE_PATH
</span><span class='line'><span class="nv">$ </span>git rm SUBMODULE_PATH
</span><span class='line'><span class="nv">$ </span>git commit -m <span class="s2">&quot;remove the submodule at SUBMODULE_PATH&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h3>References:</h3>

<ol>
<li><a href="http://git-scm.com/docs/git-submodule">http://git-scm.com/docs/git-submodule</a></li>
<li><a href="http://git-scm.com/docs/git-rm.html">http://git-scm.com/docs/git-rm.html</a></li>
<li><a href="http://stackoverflow.com/questions/8642668/how-to-make-submodule-with-detached-head-to-be-attached-to-actual-head">http://stackoverflow.com/questions/8642668/how-to-make-submodule-with-detached-head-to-be-attached-to-actual-head</a></li>
<li><a href="http://www.vogella.com/tutorials/Git/article.html#submodules">http://www.vogella.com/tutorials/Git/article.html#submodules</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Rename Repository on Gerrit]]></title>
    <link href="http://lifuzu.com/blog/2014/04/09/rename-repository-on-gerrit/"/>
    <updated>2014-04-09T22:42:53-07:00</updated>
    <id>http://lifuzu.com/blog/2014/04/09/rename-repository-on-gerrit</id>
    <content type="html"><![CDATA[<p><img src="https://lh4.googleusercontent.com/-_03bVFvmzzg/U0YvHJPBLCI/AAAAAAAAB4M/SSKXyOR_T3U/s0/diffymute-300x279.png" title="diffymute-300x279.png" alt="Gerrit icon" /></p>

<h3>Instructions:</h3>

<p><em>1</em>. Move the repository folder on server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># on gerrit server</span>
</span><span class='line'><span class="nv">$ </span><span class="nb">cd</span> <span class="nv">$site_path</span>/git;
</span><span class='line'><span class="nv">$ </span>mv old_name.git new_name.git
</span></code></pre></td></tr></table></div></figure>


<p><em>2</em>. Flush the caches on server:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># On another client image:</span>
</span><span class='line'><span class="nv">$ </span>ssh -p 29418 gerrit.server.com gerrit flush-caches
</span></code></pre></td></tr></table></div></figure>


<p><em>3</em>. Run sql statement to update the changes:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># On another client image (need &quot;Access Database&quot; capability):</span>
</span><span class='line'><span class="nv">$ </span>ssh -p 29418 gerrit.server.com gerrit gsql <span class="o">[</span>Enter<span class="o">]</span>
</span><span class='line'>gerrit&gt; USE <span class="o">{</span>Database<span class="o">}</span>;
</span><span class='line'>gerrit&gt; SELECT * FROM changes WHERE <span class="nv">dest_project_name</span> <span class="o">=</span> <span class="s1">&#39;old_name&#39;</span>;
</span><span class='line'><span class="c"># if have more than 1, run the following command to update, otherwise, quit with \q;</span>
</span><span class='line'>gerrit&gt; UPDATE changes SET <span class="nv">dest_project_name</span> <span class="o">=</span> <span class="s1">&#39;new_name&#39;</span> WHERE
</span><span class='line'><span class="nv">dest_project_name</span> <span class="o">=</span> <span class="s1">&#39;old_name&#39;</span>;
</span><span class='line'>gerrit&gt; <span class="se">\q</span>
</span></code></pre></td></tr></table></div></figure>


<h3>References:</h3>

<ol>
<li><a href="https://groups.google.com/forum/#!topic/repo-discuss/ltIxBipUPKI">https://groups.google.com/forum/#!topic/repo-discuss/ltIxBipUPKI</a></li>
</ol>


<blockquote><p>Written with <a href="https://stackedit.io/">StackEdit</a>.</p></blockquote>
]]></content>
  </entry>
  
</feed>
